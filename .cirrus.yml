docker_builder:
  name: Test (Linux with Docker)
  alias: Tests
  test_script:
    - wget --no-verbose -O - https://golang.org/dl/go1.19.2.linux-amd64.tar.gz | tar -C /usr/local -xz
    - export PATH=$PATH:/usr/local/go/bin
    - go test ./...
  env:
    HOME: /root

docker_builder:
  name: Test (Linux with Podman)
  allow_failures: true
  alias: Tests
  install_podman_script:
    - sudo apt-get -y update
    - sudo apt-get -y install podman
  configure_podman_script:
    - echo 'unqualified-search-registries=["docker.io"]' > /etc/containers/registries.conf.d/docker.conf
  work_around_gcloud_credential_helper_script:
    - rm /root/.docker/config.json
  run_podman_background_script:
    - podman system service -t 0 unix:///tmp/podman.sock
  test_script:
    - wget --no-verbose -O - https://golang.org/dl/go1.19.2.linux-amd64.tar.gz | tar -C /usr/local -xz
    - export PATH=$PATH:/usr/local/go/bin
    - go test ./...
  env:
    HOME: /root
    CIRRUS_CONTAINER_BACKEND: podman

docker_builder:
  name: Test (Windows)
  alias: Tests
  platform: windows
  os_version: 2019
  test_script:
    - choco install -y golang git
    - refreshenv
    - md C:\Windows\system32\config\systemprofile\AppData\Local\Temp
    - go test -v ./...

task:
  name: Test (macOS with Tart)
  alias: Tests
  persistent_worker:
    labels:
      name: dev-mini
  env:
    CIRRUS_INTERNAL_TART_VM: ghcr.io/cirruslabs/macos-ventura-base:latest
    CIRRUS_INTERNAL_TART_SSH_PASSWORD: admin
    CIRRUS_INTERNAL_TART_SSH_USER: admin
  test_script:
    - go test -v -run TestWorkerIsolationTart ./...
    - go test -v -run TestExecutorTart ./...

task:
  name: Release (Dry Run)
  only_if: $CIRRUS_TAG == ''
  container:
    image: golang:latest
    cpu: 4
    memory: 12G
  install_script:
    - echo 'deb [trusted=yes] https://repo.goreleaser.com/apt/ /' | tee /etc/apt/sources.list.d/goreleaser.list
    - apt-get update
    - apt-get -y install goreleaser
  release_script: goreleaser build --snapshot
  binaries_artifacts:
    path: "dist/cirrus_*/cirrus*"

task:
  name: Release
  only_if: $CIRRUS_TAG != ''
  depends_on:
    - Lint
    - Tests
  env:
    GITHUB_TOKEN: ENCRYPTED[!98ace8259c6024da912c14d5a3c5c6aac186890a8d4819fad78f3e0c41a4e0cd3a2537dd6e91493952fb056fa434be7c!]
    SENTRY_ORG: cirrus-labs
    SENTRY_PROJECT: persistent-workers
    SENTRY_AUTH_TOKEN: ENCRYPTED[!c16a5cf7da5f856b4bc2f21fe8cb7aa2a6c981f851c094ed4d3025fd02ea59a58a86cee8b193a69a1fc20fa217e56ac3!]
  container:
    image: golang:latest
    cpu: 4
    memory: 12G
  install_script:
    - curl -sL https://sentry.io/get-cli/ | bash
    - echo 'deb [trusted=yes] https://repo.goreleaser.com/apt/ /' | tee /etc/apt/sources.list.d/goreleaser.list
    - apt-get update
    - apt-get -y install goreleaser
  release_script: goreleaser
  create_sentry_release_script:
    - export SENTRY_RELEASE="cirrus-cli@$CIRRUS_TAG"
    - sentry-cli releases new $SENTRY_RELEASE
    - sentry-cli releases set-commits $SENTRY_RELEASE --auto
    - sentry-cli releases finalize $SENTRY_RELEASE

docker_builder:
  name: Release Docker Image (Dry Run)
  only_if: $CIRRUS_TAG == ''
  depends_on: Tests
  setup_script:
    - docker buildx create --name multibuilder
    - docker buildx use multibuilder
    - docker buildx inspect --bootstrap
  build_script:
    - git tag v0.1.0-SNAPSHOT
    - docker buildx build --platform linux/amd64,linux/arm64 .

docker_builder:
  name: Release Docker Image
  only_if: $CIRRUS_TAG != ''
  depends_on: Tests
  env:
    GITHUB_TOKEN: ENCRYPTED[!82ed873afdf627284305afef4958c85a8f73127b09978a9786ac521559630ea6c9a5ab6e7f8315abf9ead09b6eff6eae!]
  login_script:
    - echo $GITHUB_TOKEN | docker login ghcr.io -u fkorotkov --password-stdin
  setup_script:
    - docker buildx create --name multibuilder
    - docker buildx use multibuilder
    - docker buildx inspect --bootstrap
  deploy_script: |
    docker buildx build --push --platform linux/amd64,linux/arm64 \
      --tag ghcr.io/cirruslabs/cirrus-cli:$CIRRUS_TAG \
      --tag ghcr.io/cirruslabs/cirrus-cli:latest \
      .
