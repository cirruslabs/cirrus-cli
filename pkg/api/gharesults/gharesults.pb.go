// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        (unknown)
// source: api/gharesults/gharesults.proto

package gharesults

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateCacheEntryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *CacheMetadata         `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCacheEntryRequest) Reset() {
	*x = CreateCacheEntryRequest{}
	mi := &file_api_gharesults_gharesults_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCacheEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCacheEntryRequest) ProtoMessage() {}

func (x *CreateCacheEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_gharesults_gharesults_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCacheEntryRequest.ProtoReflect.Descriptor instead.
func (*CreateCacheEntryRequest) Descriptor() ([]byte, []int) {
	return file_api_gharesults_gharesults_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCacheEntryRequest) GetMetadata() *CacheMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreateCacheEntryRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CreateCacheEntryRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type CacheMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId  string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Scope         []*CacheScope          `protobuf:"bytes,2,rep,name=scope,proto3" json:"scope,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CacheMetadata) Reset() {
	*x = CacheMetadata{}
	mi := &file_api_gharesults_gharesults_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CacheMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheMetadata) ProtoMessage() {}

func (x *CacheMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_gharesults_gharesults_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheMetadata.ProtoReflect.Descriptor instead.
func (*CacheMetadata) Descriptor() ([]byte, []int) {
	return file_api_gharesults_gharesults_proto_rawDescGZIP(), []int{1}
}

func (x *CacheMetadata) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *CacheMetadata) GetScope() []*CacheScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

type CacheScope struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scope         string                 `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Permission    string                 `protobuf:"bytes,2,opt,name=permission,proto3" json:"permission,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CacheScope) Reset() {
	*x = CacheScope{}
	mi := &file_api_gharesults_gharesults_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CacheScope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheScope) ProtoMessage() {}

func (x *CacheScope) ProtoReflect() protoreflect.Message {
	mi := &file_api_gharesults_gharesults_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheScope.ProtoReflect.Descriptor instead.
func (*CacheScope) Descriptor() ([]byte, []int) {
	return file_api_gharesults_gharesults_proto_rawDescGZIP(), []int{2}
}

func (x *CacheScope) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *CacheScope) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

type CreateCacheEntryResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Ok              bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	SignedUploadUrl string                 `protobuf:"bytes,2,opt,name=signed_upload_url,json=signedUploadUrl,proto3" json:"signed_upload_url,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateCacheEntryResponse) Reset() {
	*x = CreateCacheEntryResponse{}
	mi := &file_api_gharesults_gharesults_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCacheEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCacheEntryResponse) ProtoMessage() {}

func (x *CreateCacheEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_gharesults_gharesults_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCacheEntryResponse.ProtoReflect.Descriptor instead.
func (*CreateCacheEntryResponse) Descriptor() ([]byte, []int) {
	return file_api_gharesults_gharesults_proto_rawDescGZIP(), []int{3}
}

func (x *CreateCacheEntryResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *CreateCacheEntryResponse) GetSignedUploadUrl() string {
	if x != nil {
		return x.SignedUploadUrl
	}
	return ""
}

type FinalizeCacheEntryUploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *CacheMetadata         `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	SizeBytes     int64                  `protobuf:"varint,3,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	Version       string                 `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeCacheEntryUploadRequest) Reset() {
	*x = FinalizeCacheEntryUploadRequest{}
	mi := &file_api_gharesults_gharesults_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeCacheEntryUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeCacheEntryUploadRequest) ProtoMessage() {}

func (x *FinalizeCacheEntryUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_gharesults_gharesults_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeCacheEntryUploadRequest.ProtoReflect.Descriptor instead.
func (*FinalizeCacheEntryUploadRequest) Descriptor() ([]byte, []int) {
	return file_api_gharesults_gharesults_proto_rawDescGZIP(), []int{4}
}

func (x *FinalizeCacheEntryUploadRequest) GetMetadata() *CacheMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *FinalizeCacheEntryUploadRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *FinalizeCacheEntryUploadRequest) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *FinalizeCacheEntryUploadRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type FinalizeCacheEntryUploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	EntryId       int64                  `protobuf:"varint,2,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeCacheEntryUploadResponse) Reset() {
	*x = FinalizeCacheEntryUploadResponse{}
	mi := &file_api_gharesults_gharesults_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeCacheEntryUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeCacheEntryUploadResponse) ProtoMessage() {}

func (x *FinalizeCacheEntryUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_gharesults_gharesults_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeCacheEntryUploadResponse.ProtoReflect.Descriptor instead.
func (*FinalizeCacheEntryUploadResponse) Descriptor() ([]byte, []int) {
	return file_api_gharesults_gharesults_proto_rawDescGZIP(), []int{5}
}

func (x *FinalizeCacheEntryUploadResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *FinalizeCacheEntryUploadResponse) GetEntryId() int64 {
	if x != nil {
		return x.EntryId
	}
	return 0
}

type GetCacheEntryDownloadURLRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *CacheMetadata         `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	RestoreKeys   []string               `protobuf:"bytes,3,rep,name=restore_keys,json=restoreKeys,proto3" json:"restore_keys,omitempty"`
	Version       string                 `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCacheEntryDownloadURLRequest) Reset() {
	*x = GetCacheEntryDownloadURLRequest{}
	mi := &file_api_gharesults_gharesults_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCacheEntryDownloadURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCacheEntryDownloadURLRequest) ProtoMessage() {}

func (x *GetCacheEntryDownloadURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_gharesults_gharesults_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCacheEntryDownloadURLRequest.ProtoReflect.Descriptor instead.
func (*GetCacheEntryDownloadURLRequest) Descriptor() ([]byte, []int) {
	return file_api_gharesults_gharesults_proto_rawDescGZIP(), []int{6}
}

func (x *GetCacheEntryDownloadURLRequest) GetMetadata() *CacheMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GetCacheEntryDownloadURLRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetCacheEntryDownloadURLRequest) GetRestoreKeys() []string {
	if x != nil {
		return x.RestoreKeys
	}
	return nil
}

func (x *GetCacheEntryDownloadURLRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type GetCacheEntryDownloadURLResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Ok                bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	SignedDownloadUrl string                 `protobuf:"bytes,2,opt,name=signed_download_url,json=signedDownloadUrl,proto3" json:"signed_download_url,omitempty"`
	MatchedKey        string                 `protobuf:"bytes,3,opt,name=matched_key,json=matchedKey,proto3" json:"matched_key,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetCacheEntryDownloadURLResponse) Reset() {
	*x = GetCacheEntryDownloadURLResponse{}
	mi := &file_api_gharesults_gharesults_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCacheEntryDownloadURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCacheEntryDownloadURLResponse) ProtoMessage() {}

func (x *GetCacheEntryDownloadURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_gharesults_gharesults_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCacheEntryDownloadURLResponse.ProtoReflect.Descriptor instead.
func (*GetCacheEntryDownloadURLResponse) Descriptor() ([]byte, []int) {
	return file_api_gharesults_gharesults_proto_rawDescGZIP(), []int{7}
}

func (x *GetCacheEntryDownloadURLResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *GetCacheEntryDownloadURLResponse) GetSignedDownloadUrl() string {
	if x != nil {
		return x.SignedDownloadUrl
	}
	return ""
}

func (x *GetCacheEntryDownloadURLResponse) GetMatchedKey() string {
	if x != nil {
		return x.MatchedKey
	}
	return ""
}

var File_api_gharesults_gharesults_proto protoreflect.FileDescriptor

var file_api_gharesults_gharesults_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x68, 0x61, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x2f, 0x67, 0x68, 0x61, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x22, 0x8f, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x75, 0x0a, 0x0d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x63, 0x6f,
	0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x42, 0x0a, 0x0a, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x56, 0x0a,
	0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x55, 0x72, 0x6c, 0x22, 0xb6, 0x01, 0x0a, 0x1f, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x69, 0x7a, 0x65, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4d,
	0x0a, 0x20, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02,
	0x6f, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x22, 0xba, 0x01,
	0x0a, 0x1f, 0x47, 0x65, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x48, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x83, 0x01, 0x0a, 0x20, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12,
	0x2e, 0x0a, 0x13, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x4b, 0x65, 0x79,
	0x32, 0xd0, 0x03, 0x0a, 0x0c, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x83, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x36, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9b, 0x01, 0x0a, 0x18, 0x46, 0x69, 0x6e, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x3e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9b, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55,
	0x52, 0x4c, 0x12, 0x3e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x69, 0x72, 0x72, 0x75, 0x73, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x63, 0x69, 0x72,
	0x72, 0x75, 0x73, 0x2d, 0x63, 0x6c, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x67, 0x68, 0x61, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_gharesults_gharesults_proto_rawDescOnce sync.Once
	file_api_gharesults_gharesults_proto_rawDescData = file_api_gharesults_gharesults_proto_rawDesc
)

func file_api_gharesults_gharesults_proto_rawDescGZIP() []byte {
	file_api_gharesults_gharesults_proto_rawDescOnce.Do(func() {
		file_api_gharesults_gharesults_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_gharesults_gharesults_proto_rawDescData)
	})
	return file_api_gharesults_gharesults_proto_rawDescData
}

var file_api_gharesults_gharesults_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_api_gharesults_gharesults_proto_goTypes = []any{
	(*CreateCacheEntryRequest)(nil),          // 0: github.actions.results.api.v1.CreateCacheEntryRequest
	(*CacheMetadata)(nil),                    // 1: github.actions.results.api.v1.CacheMetadata
	(*CacheScope)(nil),                       // 2: github.actions.results.api.v1.CacheScope
	(*CreateCacheEntryResponse)(nil),         // 3: github.actions.results.api.v1.CreateCacheEntryResponse
	(*FinalizeCacheEntryUploadRequest)(nil),  // 4: github.actions.results.api.v1.FinalizeCacheEntryUploadRequest
	(*FinalizeCacheEntryUploadResponse)(nil), // 5: github.actions.results.api.v1.FinalizeCacheEntryUploadResponse
	(*GetCacheEntryDownloadURLRequest)(nil),  // 6: github.actions.results.api.v1.GetCacheEntryDownloadURLRequest
	(*GetCacheEntryDownloadURLResponse)(nil), // 7: github.actions.results.api.v1.GetCacheEntryDownloadURLResponse
}
var file_api_gharesults_gharesults_proto_depIdxs = []int32{
	1, // 0: github.actions.results.api.v1.CreateCacheEntryRequest.metadata:type_name -> github.actions.results.api.v1.CacheMetadata
	2, // 1: github.actions.results.api.v1.CacheMetadata.scope:type_name -> github.actions.results.api.v1.CacheScope
	1, // 2: github.actions.results.api.v1.FinalizeCacheEntryUploadRequest.metadata:type_name -> github.actions.results.api.v1.CacheMetadata
	1, // 3: github.actions.results.api.v1.GetCacheEntryDownloadURLRequest.metadata:type_name -> github.actions.results.api.v1.CacheMetadata
	0, // 4: github.actions.results.api.v1.CacheService.CreateCacheEntry:input_type -> github.actions.results.api.v1.CreateCacheEntryRequest
	4, // 5: github.actions.results.api.v1.CacheService.FinalizeCacheEntryUpload:input_type -> github.actions.results.api.v1.FinalizeCacheEntryUploadRequest
	6, // 6: github.actions.results.api.v1.CacheService.GetCacheEntryDownloadURL:input_type -> github.actions.results.api.v1.GetCacheEntryDownloadURLRequest
	3, // 7: github.actions.results.api.v1.CacheService.CreateCacheEntry:output_type -> github.actions.results.api.v1.CreateCacheEntryResponse
	5, // 8: github.actions.results.api.v1.CacheService.FinalizeCacheEntryUpload:output_type -> github.actions.results.api.v1.FinalizeCacheEntryUploadResponse
	7, // 9: github.actions.results.api.v1.CacheService.GetCacheEntryDownloadURL:output_type -> github.actions.results.api.v1.GetCacheEntryDownloadURLResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_api_gharesults_gharesults_proto_init() }
func file_api_gharesults_gharesults_proto_init() {
	if File_api_gharesults_gharesults_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_gharesults_gharesults_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_gharesults_gharesults_proto_goTypes,
		DependencyIndexes: file_api_gharesults_gharesults_proto_depIdxs,
		MessageInfos:      file_api_gharesults_gharesults_proto_msgTypes,
	}.Build()
	File_api_gharesults_gharesults_proto = out.File
	file_api_gharesults_gharesults_proto_rawDesc = nil
	file_api_gharesults_gharesults_proto_goTypes = nil
	file_api_gharesults_gharesults_proto_depIdxs = nil
}
