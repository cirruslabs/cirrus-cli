/*
 * Provides a container compatible interface.
 *
 * This documentation describes the Podman v2.0 RESTful API. It replaces the Podman v1.0 API and was initially delivered along with Podman v2.0.  It consists of a Docker-compatible API and a Libpod API providing support for Podmanâ€™s unique features such as pods.  To start the service and keep it running for 5,000 seconds (-t 0 runs forever):  podman system service -t 5000 &  You can then use cURL on the socket using requests documented below.  NOTE: if you install the package podman-docker, it will create a symbolic link for /var/run/docker.sock to /run/podman/podman.sock  See podman-service(1) for more information.  Quick Examples:  'podman info'  curl --unix-socket /run/podman/podman.sock http://d/v1.0.0/libpod/info  'podman pull quay.io/containers/podman'  curl -XPOST --unix-socket /run/podman/podman.sock -v 'http://d/v1.0.0/images/create?fromImage=quay.io%2Fcontainers%2Fpodman'  'podman list images'  curl --unix-socket /run/podman/podman.sock -v 'http://d/v1.0.0/libpod/images/json' | jq
 *
 * API version: 0.0.1
 * Contact: podman@lists.podman.io
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

// LinuxDevice represents the mknod information for a Linux special device file
type LinuxDevice struct {
	FileMode int32 `json:"fileMode,omitempty"`
	// Gid of the device.
	Gid int32 `json:"gid,omitempty"`
	// Major is the device's major number.
	Major int64 `json:"major,omitempty"`
	// Minor is the device's minor number.
	Minor int64 `json:"minor,omitempty"`
	// Path to the device.
	Path string `json:"path,omitempty"`
	// Device type, block, char, etc.
	Type_ string `json:"type,omitempty"`
	// UID of the device.
	Uid int32 `json:"uid,omitempty"`
}
