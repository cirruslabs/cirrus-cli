/*
 * Provides a container compatible interface.
 *
 * This documentation describes the Podman v2.0 RESTful API. It replaces the Podman v1.0 API and was initially delivered along with Podman v2.0.  It consists of a Docker-compatible API and a Libpod API providing support for Podmanâ€™s unique features such as pods.  To start the service and keep it running for 5,000 seconds (-t 0 runs forever):  podman system service -t 5000 &  You can then use cURL on the socket using requests documented below.  NOTE: if you install the package podman-docker, it will create a symbolic link for /var/run/docker.sock to /run/podman/podman.sock  See podman-service(1) for more information.  Quick Examples:  'podman info'  curl --unix-socket /run/podman/podman.sock http://d/v1.0.0/libpod/info  'podman pull quay.io/containers/podman'  curl -XPOST --unix-socket /run/podman/podman.sock -v 'http://d/v1.0.0/images/create?fromImage=quay.io%2Fcontainers%2Fpodman'  'podman list images'  curl --unix-socket /run/podman/podman.sock -v 'http://d/v1.0.0/libpod/images/json' | jq
 *
 * API version: 0.0.1
 * Contact: podman@lists.podman.io
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger
import (
	"time"
)

type InlineResponse2008 struct {
	AppArmorProfile string `json:"AppArmorProfile,omitempty"`
	Args []string `json:"Args,omitempty"`
	BoundingCaps []string `json:"BoundingCaps,omitempty"`
	Config *InspectContainerConfig `json:"Config,omitempty"`
	ConmonPidFile string `json:"ConmonPidFile,omitempty"`
	Created time.Time `json:"Created,omitempty"`
	Dependencies []string `json:"Dependencies,omitempty"`
	Driver string `json:"Driver,omitempty"`
	EffectiveCaps []string `json:"EffectiveCaps,omitempty"`
	ExecIDs []string `json:"ExecIDs,omitempty"`
	ExitCommand []string `json:"ExitCommand,omitempty"`
	GraphDriver *Data `json:"GraphDriver,omitempty"`
	HostConfig *InspectContainerHostConfig `json:"HostConfig,omitempty"`
	HostnamePath string `json:"HostnamePath,omitempty"`
	HostsPath string `json:"HostsPath,omitempty"`
	Id string `json:"Id,omitempty"`
	Image string `json:"Image,omitempty"`
	ImageName string `json:"ImageName,omitempty"`
	IsInfra bool `json:"IsInfra,omitempty"`
	LogPath string `json:"LogPath,omitempty"`
	LogTag string `json:"LogTag,omitempty"`
	MountLabel string `json:"MountLabel,omitempty"`
	Mounts []InspectMount `json:"Mounts,omitempty"`
	Name string `json:"Name,omitempty"`
	Namespace string `json:"Namespace,omitempty"`
	NetworkSettings *InspectNetworkSettings `json:"NetworkSettings,omitempty"`
	OCIConfigPath string `json:"OCIConfigPath,omitempty"`
	OCIRuntime string `json:"OCIRuntime,omitempty"`
	Path string `json:"Path,omitempty"`
	Pod string `json:"Pod,omitempty"`
	ProcessLabel string `json:"ProcessLabel,omitempty"`
	ResolvConfPath string `json:"ResolvConfPath,omitempty"`
	RestartCount int32 `json:"RestartCount,omitempty"`
	Rootfs string `json:"Rootfs,omitempty"`
	SizeRootFs int64 `json:"SizeRootFs,omitempty"`
	SizeRw int64 `json:"SizeRw,omitempty"`
	State *InspectContainerState `json:"State,omitempty"`
	StaticDir string `json:"StaticDir,omitempty"`
}
