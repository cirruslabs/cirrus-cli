openapi: 3.0.1
info:
  title: Provides a container compatible interface.
  description: |-
    This documentation describes the Podman v2.0 RESTful API.
    It replaces the Podman v1.0 API and was initially delivered
    along with Podman v2.0.  It consists of a Docker-compatible
    API and a Libpod API providing support for Podman’s unique
    features such as pods.

    To start the service and keep it running for 5,000 seconds (-t 0 runs forever):

    podman system service -t 5000 &

    You can then use cURL on the socket using requests documented below.

    NOTE: if you install the package podman-docker, it will create a symbolic
    link for /var/run/docker.sock to /run/podman/podman.sock

    See podman-service(1) for more information.

    Quick Examples:

    'podman info'

    curl --unix-socket /run/podman/podman.sock http://d/v1.0.0/libpod/info

    'podman pull quay.io/containers/podman'

    curl -XPOST --unix-socket /run/podman/podman.sock -v 'http://d/v1.0.0/images/create?fromImage=quay.io%2Fcontainers%2Fpodman'

    'podman list images'

    curl --unix-socket /run/podman/podman.sock -v 'http://d/v1.0.0/libpod/images/json' | jq
  contact:
    name: Podman
    url: https://podman.io/community/
    email: podman@lists.podman.io
  license:
    name: Apache-2.0
    url: https://opensource.org/licenses/Apache-2.0
  version: 0.0.1
  x-logo:
  - url: https://raw.githubusercontent.com/containers/libpod/master/logo/podman-logo.png
  - altText: Podman logo
servers:
- url: http://podman.io/
- url: https://podman.io/
tags:
- name: containers
  description: Actions related to containers
- name: exec
  description: Actions related to exec
- name: images
  description: Actions related to images
- name: manifests
  description: Actions related to manifests
- name: networks
  description: Actions related to networks
- name: pods
  description: Actions related to pods
- name: volumes
  description: Actions related to volumes
- name: system
  description: Actions related to Podman engine
- name: containers (compat)
  description: Actions related to containers for the compatibility endpoints
- name: exec (compat)
  description: Actions related to exec for the compatibility endpoints
- name: images (compat)
  description: Actions related to images for the compatibility endpoints
- name: networks (compat)
  description: Actions related to compatibility networks
- name: volumes (compat)
  description: Actions related to volumes for the compatibility endpoints
- name: system (compat)
  description: Actions related to Podman and compatibility engines
paths:
  /build:
    post:
      tags:
      - images (compat)
      summary: Create image
      description: Build an image from the given Dockerfile(s)
      operationId: buildImage
      parameters:
      - name: dockerfile
        in: query
        description: |
          Path within the build context to the `Dockerfile`.
          This is ignored if remote is specified and points to an external `Dockerfile`.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: Dockerfile
      - name: t
        in: query
        description: A name and optional tag to apply to the image in the `name:tag`
          format. If you omit the tag the default latest value is assumed. You can
          provide several t parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: latest
      - name: extrahosts
        in: query
        description: |
          TBD Extra hosts to add to /etc/hosts
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: remote
        in: query
        description: |
          A Git repository URI or HTTP/HTTPS context URI.
          If the URI points to a single text file, the file’s contents are placed
          into a file called Dockerfile and the image is built from that file. If
          the URI points to a tarball, the file is downloaded by the daemon and the
          contents therein used as the context for the build. If the URI points to a
          tarball and the dockerfile parameter is also specified, there must be a file
          with the corresponding path inside the tarball.
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: q
        in: query
        description: |
          Suppress verbose build output
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: nocache
        in: query
        description: |
          Do not use the cache when building the image
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: cachefrom
        in: query
        description: |
          JSON array of images used to build cache resolution
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pull
        in: query
        description: |
          Attempt to pull the image even if an older image exists locally
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: rm
        in: query
        description: |
          Remove intermediate containers after a successful build
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: forcerm
        in: query
        description: |
          Always remove intermediate containers, even upon failure
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: memory
        in: query
        description: |
          Memory is the upper limit (in bytes) on how much memory running containers can use
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: memswap
        in: query
        description: |
          MemorySwap limits the amount of memory and swap together
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: cpushares
        in: query
        description: |
          CPUShares (relative weight
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: cpusetcpus
        in: query
        description: |
          CPUSetCPUs in which to allow execution (0-3, 0,1)
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: cpuperiod
        in: query
        description: |
          CPUPeriod limits the CPU CFS (Completely Fair Scheduler) period
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: cpuquota
        in: query
        description: |
          CPUQuota limits the CPU CFS (Completely Fair Scheduler) quota
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: buildargs
        in: query
        description: |
          JSON map of string pairs denoting build-time variables.
          For example, the build argument `Foo` with the value of `bar` would be encoded in JSON as `["Foo":"bar"]`.

          For example, buildargs={"Foo":"bar"}.

          Note(s):
          * This should not be used to pass secrets.
          * The value of buildargs should be URI component encoded before being passed to the API.

          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: shmsize
        in: query
        description: |
          ShmSize is the "size" value to use when mounting an shmfs on the container's /dev/shm directory.
          Default is 64MB
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 67108864
      - name: squash
        in: query
        description: |
          Silently ignored.
          Squash the resulting images layers into a single layer
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: labels
        in: query
        description: |
          JSON map of key, value pairs to set as labels on the new image
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: networkmode
        in: query
        description: |
          Sets the networking mode for the run commands during build.
          Supported standard values are:
            * `bridge` limited to containers within a single host, port mapping required for external access
            * `host` no isolation between host and containers on this network
            * `none` disable all networking for this container
            * container:<nameOrID> share networking with given container
            ---All other values are assumed to be a custom network's name
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: bridge
      - name: platform
        in: query
        description: |
          Platform format os[/arch[/variant]]
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: target
        in: query
        description: |
          Target build stage
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: outputs
        in: query
        description: |
          output configuration TBD
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK (As of version 1.xx)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /commit:
    post:
      tags:
      - containers (compat)
      summary: New Image
      description: Create a new image from a container
      operationId: commitContainer
      parameters:
      - name: container
        in: query
        description: the name or ID of a container
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: repo
        in: query
        description: the repository name for the created image
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tag
        in: query
        description: tag name for the created image
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: comment
        in: query
        description: commit message
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: author
        in: query
        description: author of the image
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pause
        in: query
        description: pause the container before committing it
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: changes
        in: query
        description: instructions to apply while committing in Dockerfile format
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: no error
          content: {}
        "404":
          description: No such image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /containers/{name}:
    delete:
      tags:
      - containers (compat)
      summary: Remove a container
      operationId: removeContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: force
        in: query
        description: If the container is running, kill it before removing it.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: v
        in: query
        description: Remove the volumes associated with the container.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: link
        in: query
        description: not supported
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "204":
          description: no error
          content: {}
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "409":
          description: Conflict error in operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /containers/{name}/archive:
    get:
      tags:
      - containers (compat)
      summary: Get files from a container
      description: Get a tar archive of files from a container
      operationId: getArchive
      parameters:
      - name: name
        in: path
        description: container name or id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: path
        in: query
        description: Path to a directory in the container to extract
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: no error
          content:
            application/json:
              schema:
                type: string
                format: binary
                x-content-type: application/json
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    put:
      tags:
      - containers (compat)
      summary: Put files into a container
      description: Put a tar archive of files into a container
      operationId: putArchive
      parameters:
      - name: name
        in: path
        description: container name or id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: path
        in: query
        description: Path to a directory in the container to extract
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: noOverwriteDirNonDir
        in: query
        description: if unpacking the given content would cause an existing directory
          to be replaced with a non-directory and vice versa (1 or true)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: copyUIDGID
        in: query
        description: copy UID/GID maps to the dest file or di (1 or true)
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: tarfile of files to copy into the container
        content:
          application/json:
            schema:
              type: string
          application/x-tar:
            schema:
              type: string
        required: false
      responses:
        "200":
          description: no error
          content: {}
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "403":
          description: the container rootfs is read-only
          content: {}
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-codegen-request-body-name: request
  /containers/{name}/attach:
    post:
      tags:
      - containers (compat)
      summary: Attach to a container
      description: Hijacks the connection to forward the container's standard streams
        to the client.
      operationId: attachContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: detachKeys
        in: query
        description: keys to use for detaching from the container
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: logs
        in: query
        description: Stream all logs from the container across the connection. Happens
          before streaming attach (if requested). At least one of logs or stream must
          be set
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: stream
        in: query
        description: Attach to the container. If unset, and logs is set, only the
          container's logs will be sent. At least one of stream or logs must be set
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: stdout
        in: query
        description: Attach to container STDOUT
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: stderr
        in: query
        description: Attach to container STDERR
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: stdin
        in: query
        description: Attach to container STDIN
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "101":
          description: No error, connection has been hijacked for transporting streams.
          content: {}
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /containers/{name}/exec:
    post:
      tags:
      - exec (compat)
      summary: Create an exec instance
      description: Create an exec session to run a command inside a running container.
        Exec sessions will be automatically removed 5 minutes after they exit.
      operationId: createExec
      parameters:
      - name: name
        in: path
        description: name of container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Attributes for create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body'
          application/x-tar:
            schema:
              $ref: '#/components/schemas/body_1'
        required: false
      responses:
        "201":
          description: no error
          content: {}
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "409":
          description: container is paused
          content: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-codegen-request-body-name: control
  /containers/{name}/export:
    get:
      tags:
      - containers (compat)
      summary: Export a container
      description: Export the contents of a container as a tarball.
      operationId: exportContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: tarball is returned in body
          content: {}
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /containers/{name}/json:
    get:
      tags:
      - containers (compat)
      summary: Inspect container
      description: Return low-level information about a container.
      operationId: getContainer
      parameters:
      - name: name
        in: path
        description: the name or id of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: size
        in: query
        description: include the size of the container
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Inspect container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /containers/{name}/kill:
    post:
      tags:
      - containers (compat)
      summary: Kill container
      description: Signal to send to the container as an integer or string (e.g. SIGINT)
      operationId: killContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signal
        in: query
        description: signal to be sent to container
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: SIGKILL
      responses:
        "204":
          description: no error
          content: {}
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "409":
          description: Conflict error in operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /containers/{name}/logs:
    get:
      tags:
      - containers (compat)
      summary: Get container logs
      description: Get stdout and stderr logs from a container.
      operationId: logsFromContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: follow
        in: query
        description: Keep connection after returning logs.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: stdout
        in: query
        description: Return logs from stdout
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: stderr
        in: query
        description: Return logs from stderr
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: since
        in: query
        description: Only return logs since this time, as a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: until
        in: query
        description: Only return logs before this time, as a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: timestamps
        in: query
        description: Add timestamps to every log line
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: tail
        in: query
        description: Only return this number of log lines from the end of the logs
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: all
      responses:
        "200":
          description: logs returned as a stream in response body.
          content: {}
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /containers/{name}/pause:
    post:
      tags:
      - containers (compat)
      summary: Pause container
      description: Use the cgroups freezer to suspend all processes in a container.
      operationId: pauseContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: no error
          content: {}
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /containers/{name}/resize:
    post:
      tags:
      - containers (compat)
      summary: Resize a container's TTY
      description: Resize the terminal attached to a container (for use with Attach).
      operationId: resizeContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: h
        in: query
        description: Height to set for the terminal, in characters
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: w
        in: query
        description: Width to set for the terminal, in characters
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /containers/{name}/restart:
    post:
      tags:
      - containers (compat)
      summary: Restart container
      operationId: restartContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: t
        in: query
        description: timeout before sending kill signal to container
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "204":
          description: no error
          content: {}
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /containers/{name}/start:
    post:
      tags:
      - containers (compat)
      summary: Start a container
      operationId: startContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: detachKeys
        in: query
        description: 'Override the key sequence for detaching a container. Format
          is a single character [a-Z] or ctrl-<value> where <value> is one of: a-z,
          @, ^, [, , or _.'
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ctrl-p,ctrl-q
      responses:
        "204":
          description: no error
          content: {}
        "304":
          description: Container already started
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /containers/{name}/stats:
    get:
      tags:
      - containers (compat)
      summary: Get stats for a container
      description: This returns a live stream of a container’s resource usage statistics.
      operationId: statsContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: stream
        in: query
        description: Stream the output
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: OK
          content: {}
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /containers/{name}/stop:
    post:
      tags:
      - containers (compat)
      summary: Stop a container
      description: Stop a container
      operationId: stopContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: t
        in: query
        description: number of seconds to wait before killing container
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "204":
          description: no error
          content: {}
        "304":
          description: Container already stopped
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /containers/{name}/top:
    get:
      tags:
      - containers (compat)
      summary: List processes running inside a container
      operationId: topContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ps_args
        in: query
        description: arguments to pass to ps such as aux. Requires ps(1) to be installed
          in the container if no ps(1) compatible AIX descriptors are used.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: List processes in container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /containers/{name}/unpause:
    post:
      tags:
      - containers (compat)
      summary: Unpause container
      description: Resume a paused container
      operationId: unpauseContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: no error
          content: {}
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /containers/{name}/wait:
    post:
      tags:
      - containers (compat)
      summary: Wait on a container
      description: Block until a container stops or given condition is met.
      operationId: waitContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: condition
        in: query
        description: |
          wait until container is to a given condition. default is stopped. valid conditions are:
            - configured
            - created
            - exited
            - paused
            - running
            - stopped
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Wait container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /containers/create:
    post:
      tags:
      - containers (compat)
      summary: Create a container
      operationId: createContainer
      parameters:
      - name: name
        in: query
        description: container name
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: Create container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "409":
          description: Conflict error in operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /containers/json:
    get:
      tags:
      - containers (compat)
      summary: List containers
      description: Returns a list of containers
      operationId: listContainers
      parameters:
      - name: all
        in: query
        description: Return all containers. By default, only running containers are
          shown
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: limit
        in: query
        description: Return this number of most recently created containers, including
          non-running ones.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: size
        in: query
        description: Return the size of container as fields SizeRw and SizeRootFs.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: filters
        in: query
        description: |
          Returns a list of containers.
           - ancestor=(<image-name>[:<tag>], <image id>, or <image@digest>)
           - before=(<container id> or <container name>)
           - expose=(<port>[/<proto>]|<startport-endport>/[<proto>])
           - exited=<int> containers with exit code of <int>
           - health=(starting|healthy|unhealthy|none)
           - id=<ID> a container's ID
           - is-task=(true|false)
           - label=key or label="key=value" of a container label
           - name=<name> a container's name
           - network=(<network id> or <network name>)
           - publish=(<port>[/<proto>]|<startport-endport>/[<proto>])
           - since=(<container id> or <container name>)
           - status=(created|restarting|running|removing|paused|exited|dead)
           - volume=(<volume name> or <mount point destination>)
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: List Containers
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /containers/prune:
    post:
      tags:
      - containers (compat)
      summary: Delete stopped containers
      description: Remove containers not in use
      operationId: pruneContainers
      parameters:
      - name: filters
        in: query
        description: |
          Filters to process on the prune list, encoded as JSON (a `map[string][]string`).  Available filters:
           - `until=<timestamp>` Prune containers created before this timestamp. The `<timestamp>` can be Unix timestamps, date formatted timestamps, or Go duration strings (e.g. `10m`, `1h30m`) computed relative to the daemon machine’s time.
           - `label` (`label=<key>`, `label=<key>=<value>`, `label!=<key>`, or `label!=<key>=<value>`) Prune containers with (or without, in case `label!=...` is used) the specified labels.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Prune containers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContainersPruneReport'
                x-content-type: application/json
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /events:
    get:
      tags:
      - system (compat)
      summary: Get events
      description: Returns events filtered on query parameters
      operationId: getEvents
      parameters:
      - name: since
        in: query
        description: start streaming events from this time
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: until
        in: query
        description: stop streaming events later than this
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filters
        in: query
        description: JSON encoded map[string][]string of constraints
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: returns a string of json data describing an event
          content: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /exec/{id}/json:
    get:
      tags:
      - exec (compat)
      summary: Inspect an exec instance
      description: Return low-level information about an exec instance.
      operationId: inspectExec
      parameters:
      - name: id
        in: path
        description: Exec instance ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: no error
          content: {}
        "404":
          description: No such exec instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /exec/{id}/resize:
    post:
      tags:
      - exec (compat)
      summary: Resize an exec instance
      description: |
        Resize the TTY session used by an exec instance. This endpoint only works if tty was specified as part of creating and starting the exec instance.
      operationId: resizeExec
      parameters:
      - name: id
        in: path
        description: Exec instance ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: h
        in: query
        description: Height of the TTY session in characters
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: w
        in: query
        description: Width of the TTY session in characters
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "201":
          description: no error
          content: {}
        "404":
          description: No such exec instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /exec/{id}/start:
    post:
      tags:
      - exec (compat)
      summary: Start an exec instance
      description: Starts a previously set up exec instance. If detach is true, this
        endpoint returns immediately after starting the command. Otherwise, it sets
        up an interactive session with the command.
      operationId: startExec
      parameters:
      - name: id
        in: path
        description: Exec instance ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Attributes for start
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_2'
          application/x-tar:
            schema:
              $ref: '#/components/schemas/body_3'
        required: false
      responses:
        "200":
          description: no error
          content: {}
        "404":
          description: No such exec instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "409":
          description: container is not running
          content: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-codegen-request-body-name: control
  /images/{name:.*}:
    delete:
      tags:
      - images (compat)
      summary: Remove Image
      description: Delete an image from local storage
      operationId: removeImage
      parameters:
      - name: name:.*
        in: path
        description: name or ID of image to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: force
        in: query
        description: remove the image even if used by containers or has other tags
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: noprune
        in: query
        description: not supported. will be logged as an invalid parameter if enabled
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Delete response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImageDeleteResponse'
                x-content-type: application/json
        "404":
          description: No such image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "409":
          description: Conflict error in operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /images/{name:.*}/get:
    get:
      tags:
      - images (compat)
      summary: Export an image
      description: Export an image in tarball format
      operationId: exportImage
      parameters:
      - name: name:.*
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: no error
          content:
            application/json:
              schema:
                type: string
                format: binary
                x-content-type: application/json
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /images/{name:.*}/history:
    get:
      tags:
      - images (compat)
      summary: History of an image
      description: Return parent layers of an image.
      operationId: imageHistory
      parameters:
      - name: name:.*
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: History response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        "404":
          description: No such image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /images/{name:.*}/json:
    get:
      tags:
      - images (compat)
      summary: Inspect an image
      description: Return low-level information about an image.
      operationId: inspectImage
      parameters:
      - name: name:.*
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Inspect response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
        "404":
          description: No such image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /images/{name:.*}/push:
    post:
      tags:
      - images (compat)
      summary: Push Image
      description: Push an image to a container registry
      operationId: pushImage
      parameters:
      - name: name:.*
        in: path
        description: Name of image to push.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tag
        in: query
        description: The tag to associate with the image on the registry.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: X-Registry-Auth
        in: header
        description: A base64-encoded auth configuration.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: no error
          content:
            application/json:
              schema:
                type: string
                format: binary
                x-content-type: application/json
        "404":
          description: No such image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /images/{name:.*}/tag:
    post:
      tags:
      - images (compat)
      summary: Tag an image
      description: Tag an image so that it becomes part of a repository.
      operationId: tagImage
      parameters:
      - name: name:.*
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: repo
        in: query
        description: the repository to tag in
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tag
        in: query
        description: the name of the new tag
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: no error
          content: {}
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "404":
          description: No such image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "409":
          description: Conflict error in operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /images/create:
    post:
      tags:
      - images (compat)
      summary: Create an image
      description: Create an image by either pulling it from a registry or importing
        it.
      operationId: createImage
      parameters:
      - name: fromImage
        in: query
        description: needs description
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fromSrc
        in: query
        description: needs description
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tag
        in: query
        description: needs description
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: X-Registry-Auth
        in: header
        description: A base64-encoded auth configuration.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Image content if fromSrc parameter was used
        content:
          application/json:
            schema:
              type: string
          application/x-tar:
            schema:
              type: string
        required: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        "404":
          description: No such image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-codegen-request-body-name: request
  /images/json:
    get:
      tags:
      - images (compat)
      summary: List Images
      description: Returns a list of images on the server. Note that it uses a different,
        smaller representation of an image than inspecting a single image.
      operationId: listImages
      parameters:
      - name: all
        in: query
        description: Show all images. Only images from a final layer (no children)
          are shown by default.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: filters
        in: query
        description: |
          A JSON encoded value of the filters (a `map[string][]string`) to process on the images list. Available filters:
          - `before`=(`<image-name>[:<tag>]`,  `<image id>` or `<image@digest>`)
          - `dangling=true`
          - `label=key` or `label="key=value"` of an image label
          - `reference`=(`<image-name>[:<tag>]`)
          - `since`=(`<image-name>[:<tag>]`,  `<image id>` or `<image@digest>`)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: digests
        in: query
        description: Not supported
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Image summary
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImageSummary'
                x-content-type: application/json
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /images/load:
    post:
      tags:
      - images (compat)
      summary: Import image
      description: Load a set of images and tags into a repository.
      operationId: importImage
      parameters:
      - name: quiet
        in: query
        description: not supported
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        description: tarball of container image
        content:
          application/json:
            schema:
              type: string
          application/x-tar:
            schema:
              type: string
        required: false
      responses:
        "200":
          description: no error
          content: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-codegen-request-body-name: request
  /images/prune:
    post:
      tags:
      - images (compat)
      summary: Prune unused images
      description: Remove images from local storage that are not being used by a container
      operationId: pruneImages
      parameters:
      - name: filters
        in: query
        description: |
          filters to apply to image pruning, encoded as JSON (map[string][]string). Available filters:
            - `dangling=<boolean>` When set to `true` (or `1`), prune only
               unused *and* untagged images. When set to `false`
               (or `0`), all unused images are pruned.
            - `until=<string>` Prune images created before this timestamp. The `<timestamp>` can be Unix timestamps, date formatted timestamps, or Go duration strings (e.g. `10m`, `1h30m`) computed relative to the daemon machine’s time.
            - `label` (`label=<key>`, `label=<key>=<value>`, `label!=<key>`, or `label!=<key>=<value>`) Prune images with (or without, in case `label!=...` is used) the specified labels.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Delete response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImageDeleteResponse'
                x-content-type: application/json
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /images/search:
    get:
      tags:
      - images (compat)
      summary: Search images
      description: Search registries for an image
      operationId: searchImages
      parameters:
      - name: term
        in: query
        description: term to search
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: maximum number of results
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: filters
        in: query
        description: |
          A JSON encoded value of the filters (a `map[string][]string`) to process on the images list. Available filters:
          - `is-automated=(true|false)`
          - `is-official=(true|false)`
          - `stars=<number>` Matches images that has at least 'number' stars.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /info:
    get:
      tags:
      - system (compat)
      summary: Get info
      description: Returns information on the system and libpod configuration
      operationId: getInfo
      responses:
        "200":
          description: to be determined
          content: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/_ping:
    get:
      tags:
      - system (compat)
      - system
      summary: Ping service
      description: |
        Return protocol information in response headers.
        `HEAD /libpod/_ping` is also supported.
        `/_ping` is available for compatibility with other engines.
        The '_ping' endpoints are not versioned.
      operationId: libpodPingGet
      responses:
        "200":
          description: Success
          headers:
            Docker-Experimental:
              description: If the server is running with experimental mode enabled,
                always true
              style: simple
              explode: false
              schema:
                type: boolean
            Cache-Control:
              description: always no-cache
              style: simple
              explode: false
              schema:
                type: string
            Libpod-API-Version:
              description: |
                Max Podman API Version the server supports.
                Available if service is backed by Podman, therefore may be used to
                determine if talking to Podman engine or another engine
              style: simple
              explode: false
              schema:
                type: string
            BuildKit-Version:
              description: Default version of docker image builder
              style: simple
              explode: false
              schema:
                type: string
            Pragma:
              description: always no-cache
              style: simple
              explode: false
              schema:
                type: string
            Libpod-Buildha-Version:
              description: |
                Default version of libpod image builder.
                  Available if service is backed by Podman, therefore may be used to
                  determine if talking to Podman engine or another engine
              style: simple
              explode: false
              schema:
                type: string
            API-Version:
              description: Max compatibility API Version the server supports
              style: simple
              explode: false
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
                description: OK
                example: OK
                x-content-type: text/plain
        "500":
          description: Internal server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/build:
    post:
      tags:
      - images
      summary: Create image
      description: Build an image from the given Dockerfile(s)
      operationId: libpodBuildImage
      parameters:
      - name: dockerfile
        in: query
        description: |
          Path within the build context to the `Dockerfile`.
          This is ignored if remote is specified and points to an external `Dockerfile`.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: Dockerfile
      - name: t
        in: query
        description: A name and optional tag to apply to the image in the `name:tag`
          format.  If you omit the tag the default latest value is assumed. You can
          provide several t parameters.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: latest
      - name: extrahosts
        in: query
        description: |
          TBD Extra hosts to add to /etc/hosts
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: remote
        in: query
        description: |
          A Git repository URI or HTTP/HTTPS context URI.
          If the URI points to a single text file, the file’s contents are placed
          into a file called Dockerfile and the image is built from that file. If
          the URI points to a tarball, the file is downloaded by the daemon and the
          contents therein used as the context for the build. If the URI points to a
          tarball and the dockerfile parameter is also specified, there must be a file
          with the corresponding path inside the tarball.
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: q
        in: query
        description: |
          Suppress verbose build output
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: nocache
        in: query
        description: |
          Do not use the cache when building the image
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: cachefrom
        in: query
        description: |
          JSON array of images used to build cache resolution
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pull
        in: query
        description: |
          Attempt to pull the image even if an older image exists locally
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: rm
        in: query
        description: |
          Remove intermediate containers after a successful build
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: forcerm
        in: query
        description: |
          Always remove intermediate containers, even upon failure
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: memory
        in: query
        description: |
          Memory is the upper limit (in bytes) on how much memory running containers can use
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: memswap
        in: query
        description: |
          MemorySwap limits the amount of memory and swap together
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: cpushares
        in: query
        description: |
          CPUShares (relative weight
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: cpusetcpus
        in: query
        description: |
          CPUSetCPUs in which to allow execution (0-3, 0,1)
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: cpuperiod
        in: query
        description: |
          CPUPeriod limits the CPU CFS (Completely Fair Scheduler) period
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: cpuquota
        in: query
        description: |
          CPUQuota limits the CPU CFS (Completely Fair Scheduler) quota
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: buildargs
        in: query
        description: |
          JSON map of string pairs denoting build-time variables.
          For example, the build argument `Foo` with the value of `bar` would be encoded in JSON as `["Foo":"bar"]`.

          For example, buildargs={"Foo":"bar"}.

          Note(s):
          * This should not be used to pass secrets.
          * The value of buildargs should be URI component encoded before being passed to the API.

          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: shmsize
        in: query
        description: |
          ShmSize is the "size" value to use when mounting an shmfs on the container's /dev/shm directory.
          Default is 64MB
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 67108864
      - name: squash
        in: query
        description: |
          Silently ignored.
          Squash the resulting images layers into a single layer
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: labels
        in: query
        description: |
          JSON map of key, value pairs to set as labels on the new image
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: networkmode
        in: query
        description: |
          Sets the networking mode for the run commands during build.
          Supported standard values are:
            * `bridge` limited to containers within a single host, port mapping required for external access
            * `host` no isolation between host and containers on this network
            * `none` disable all networking for this container
            * container:<nameOrID> share networking with given container
            ---All other values are assumed to be a custom network's name
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: bridge
      - name: platform
        in: query
        description: |
          Platform format os[/arch[/variant]]
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: target
        in: query
        description: |
          Target build stage
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: outputs
        in: query
        description: |
          output configuration TBD
          (As of version 1.xx)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: httpproxy
        in: query
        description: |
          Inject http proxy environment variables into container
          (As of version 2.0.0)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK (As of version 1.xx)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/commit:
    post:
      tags:
      - containers
      summary: Commit
      description: Create a new image from a container
      operationId: libpodCommitContainer
      parameters:
      - name: container
        in: query
        description: the name or ID of a container
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: repo
        in: query
        description: the repository name for the created image
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tag
        in: query
        description: tag name for the created image
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: comment
        in: query
        description: commit message
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: author
        in: query
        description: author of the image
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pause
        in: query
        description: pause the container before committing it
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: changes
        in: query
        description: instructions to apply while committing in Dockerfile format (i.e.
          "CMD=/bin/foo")
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: format
        in: query
        description: format of the image manifest and metadata (default "oci")
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: no error
          content: {}
        "404":
          description: No such image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/containers/{name:.*}/healthcheck:
    get:
      tags:
      - containers
      summary: Run a container's healthcheck
      description: Execute the defined healthcheck and return information about the
        results
      operationId: libpodRunHealthCheck
      parameters:
      - name: name:.*
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Healthcheck
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "409":
          description: container has no healthcheck or is not running
          content: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/containers/{name}:
    delete:
      tags:
      - containers
      summary: Delete container
      description: Delete container
      operationId: libpodRemoveContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: force
        in: query
        description: need something
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: v
        in: query
        description: delete volumes
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "204":
          description: no error
          content: {}
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "409":
          description: Conflict error in operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/containers/{name}/attach:
    post:
      tags:
      - containers
      summary: Attach to a container
      description: Hijacks the connection to forward the container's standard streams
        to the client.
      operationId: libpodAttachContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: detachKeys
        in: query
        description: keys to use for detaching from the container
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: logs
        in: query
        description: Stream all logs from the container across the connection. Happens
          before streaming attach (if requested). At least one of logs or stream must
          be set
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: stream
        in: query
        description: Attach to the container. If unset, and logs is set, only the
          container's logs will be sent. At least one of stream or logs must be set
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: stdout
        in: query
        description: Attach to container STDOUT
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: stderr
        in: query
        description: Attach to container STDERR
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: stdin
        in: query
        description: Attach to container STDIN
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "101":
          description: No error, connection has been hijacked for transporting streams.
          content: {}
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/containers/{name}/changes:
    get:
      tags:
      - containers
      - containers (compat)
      summary: Report on changes to container's filesystem; adds, deletes or modifications.
      description: |
        Returns which files in a container's filesystem have been added, deleted, or modified. The Kind of modification can be one of:

        0: Modified
        1: Added
        2: Deleted
      operationId: changesContainer
      parameters:
      - name: name
        in: path
        description: the name or id of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Array of Changes
          content: {}
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
            text/plain:
              schema:
                $ref: '#/components/schemas/inline_response_400'
            text/html:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
            text/plain:
              schema:
                $ref: '#/components/schemas/inline_response_400'
            text/html:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/containers/{name}/checkpoint:
    post:
      tags:
      - containers
      summary: Checkpoint a container
      operationId: libpodCheckpointContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: keep
        in: query
        description: keep all temporary checkpoint files
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: leaveRunning
        in: query
        description: leave the container running after writing checkpoint to disk
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: tcpEstablished
        in: query
        description: checkpoint a container with established TCP connections
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: export
        in: query
        description: export the checkpoint image to a tar.gz
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: ignoreRootFS
        in: query
        description: do not include root file-system changes when exporting
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: tarball is returned in body if exported
          content: {}
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/containers/{name}/copy:
    get:
      tags:
      - containers (compat)
      summary: Copy files from a container
      description: Copy a tar archive of files from a container
      operationId: libpodGetArchive
      parameters:
      - name: name
        in: path
        description: container name or id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: path
        in: query
        description: Path to a directory in the container to extract
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: no error
          content:
            application/json:
              schema:
                type: string
                format: binary
                x-content-type: application/json
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    post:
      tags:
      - containers
      summary: Copy files into a container
      description: Copy a tar archive of files into a container
      operationId: libpodPutArchive
      parameters:
      - name: name
        in: path
        description: container name or id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: path
        in: query
        description: Path to a directory in the container to extract
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: pause
        in: query
        description: pause the container while copying (defaults to true)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      requestBody:
        description: tarfile of files to copy into the container
        content:
          application/json:
            schema:
              type: string
          application/x-tar:
            schema:
              type: string
        required: false
      responses:
        "200":
          description: no error
          content: {}
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "403":
          description: the container rootfs is read-only
          content: {}
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-codegen-request-body-name: request
  /libpod/containers/{name}/exec:
    post:
      tags:
      - exec
      summary: Create an exec instance
      description: Create an exec session to run a command inside a running container.
        Exec sessions will be automatically removed 5 minutes after they exit.
      operationId: libpodCreateExec
      parameters:
      - name: name
        in: path
        description: name of container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Attributes for create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_4'
          application/x-tar:
            schema:
              $ref: '#/components/schemas/body_5'
        required: false
      responses:
        "201":
          description: no error
          content: {}
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "409":
          description: container is paused
          content: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-codegen-request-body-name: control
  /libpod/containers/{name}/exists:
    get:
      tags:
      - containers
      summary: Check if container exists
      description: Quick way to determine if a container exists by name or ID
      operationId: libpodContainerExists
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: container exists
          content: {}
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/containers/{name}/export:
    get:
      tags:
      - containers
      summary: Export a container
      description: Export the contents of a container as a tarball.
      operationId: libpodExportContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: tarball is returned in body
          content: {}
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/containers/{name}/init:
    post:
      tags:
      - containers
      summary: Initialize a container
      description: Performs all tasks necessary for initializing the container but
        does not start the container.
      operationId: libpodInitContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: no error
          content: {}
        "304":
          description: container already initialized
          content: {}
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/containers/{name}/json:
    get:
      tags:
      - containers
      summary: Inspect container
      description: Return low-level information about a container.
      operationId: libpodGetContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: size
        in: query
        description: display filesystem usage
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Inspect container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/containers/{name}/kill:
    post:
      tags:
      - containers
      summary: Kill container
      description: send a signal to a container, defaults to killing the container
      operationId: libpodKillContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signal
        in: query
        description: signal to be sent to container, either by integer or SIG_ name
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: TERM
      responses:
        "204":
          description: no error
          content: {}
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "409":
          description: Conflict error in operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/containers/{name}/logs:
    get:
      tags:
      - containers
      summary: Get container logs
      description: Get stdout and stderr logs from a container.
      operationId: libpodLogsFromContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: follow
        in: query
        description: Keep connection after returning logs.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: stdout
        in: query
        description: Return logs from stdout
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: stderr
        in: query
        description: Return logs from stderr
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: since
        in: query
        description: Only return logs since this time, as a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: until
        in: query
        description: Only return logs before this time, as a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: timestamps
        in: query
        description: Add timestamps to every log line
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: tail
        in: query
        description: Only return this number of log lines from the end of the logs
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: all
      responses:
        "200":
          description: logs returned as a stream in response body.
          content: {}
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/containers/{name}/mount:
    post:
      tags:
      - containers
      summary: Mount a container
      description: Mount a container to the filesystem
      operationId: libpodMountContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: mounted container
          content:
            application/json:
              schema:
                type: string
                description: id
                example: /var/lib/containers/storage/overlay/f3f693bd88872a1e3193f4ebb925f4c282e8e73aadb8ab3e7492754dda3a02a4/merged
                x-content-type: application/json
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/containers/{name}/pause:
    post:
      tags:
      - containers
      summary: Pause a container
      description: Use the cgroups freezer to suspend all processes in a container.
      operationId: libpodPauseContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: no error
          content: {}
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/containers/{name}/resize:
    post:
      tags:
      - containers
      summary: Resize a container's TTY
      description: Resize the terminal attached to a container (for use with Attach).
      operationId: libpodResizeContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: h
        in: query
        description: Height to set for the terminal, in characters
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: w
        in: query
        description: Width to set for the terminal, in characters
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/containers/{name}/restart:
    post:
      tags:
      - containers
      summary: Restart a container
      operationId: libpodRestartContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: t
        in: query
        description: timeout before sending kill signal to container
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "204":
          description: no error
          content: {}
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/containers/{name}/restore:
    post:
      tags:
      - containers
      summary: Restore a container
      description: Restore a container from a checkpoint.
      operationId: libpodRestoreContainer
      parameters:
      - name: name
        in: path
        description: the name or id of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: query
        description: the name of the container when restored from a tar. can only
          be used with import
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: keep
        in: query
        description: keep all temporary checkpoint files
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: leaveRunning
        in: query
        description: leave the container running after writing checkpoint to disk
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: tcpEstablished
        in: query
        description: checkpoint a container with established TCP connections
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: import
        in: query
        description: import the restore from a checkpoint tar.gz
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: ignoreRootFS
        in: query
        description: do not include root file-system changes when exporting
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: ignoreStaticIP
        in: query
        description: ignore IP address if set statically
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: ignoreStaticMAC
        in: query
        description: ignore MAC address if set statically
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: tarball is returned in body if exported
          content: {}
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/containers/{name}/start:
    post:
      tags:
      - containers
      summary: Start a container
      operationId: libpodStartContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: detachKeys
        in: query
        description: 'Override the key sequence for detaching a container. Format
          is a single character [a-Z] or ctrl-<value> where <value> is one of: a-z,
          @, ^, [, , or _.'
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ctrl-p,ctrl-q
      responses:
        "204":
          description: no error
          content: {}
        "304":
          description: Container already started
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/containers/{name}/stats:
    get:
      tags:
      - containers
      summary: Get stats for a container
      description: DEPRECATED. This endpoint will be removed with the next major release.
        Please use /libpod/containers/stats instead.
      operationId: libpodStatsContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: stream
        in: query
        description: Stream the output
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: no error
          content: {}
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/containers/{name}/stop:
    post:
      tags:
      - containers
      summary: Stop a container
      operationId: libpodStopContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: t
        in: query
        description: number of seconds to wait before killing container
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "204":
          description: no error
          content: {}
        "304":
          description: Container already stopped
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/containers/{name}/top:
    get:
      tags:
      - containers
      summary: List processes
      description: List processes running inside a container
      operationId: libpodTopContainer
      parameters:
      - name: name
        in: path
        description: |
          Name of container to query for processes
          (As of version 1.xx)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: stream
        in: query
        description: Stream the output
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: ps_args
        in: query
        description: arguments to pass to ps such as aux. Requires ps(1) to be installed
          in the container if no ps(1) compatible AIX descriptors are used.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: -ef
      responses:
        "200":
          description: List processes in container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/containers/{name}/unmount:
    post:
      tags:
      - containers
      summary: Unmount a container
      description: Unmount a container from the filesystem
      operationId: libpodUnmountContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: ok
          content: {}
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/containers/{name}/unpause:
    post:
      tags:
      - containers
      summary: Unpause Container
      operationId: libpodUnpauseContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: no error
          content: {}
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/containers/{name}/wait:
    post:
      tags:
      - containers
      summary: Wait on a container
      description: Wait on a container to met a given condition
      operationId: libpodWaitContainer
      parameters:
      - name: name
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: condition
        in: query
        description: |
          wait until container is to a given condition. default is stopped. valid conditions are:
            - configured
            - created
            - exited
            - paused
            - running
            - stopped
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Wait container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/containers/create:
    post:
      tags:
      - containers
      summary: Create a container
      operationId: libpodCreateContainer
      requestBody:
        description: attributes for creating a container
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpecGenerator'
          application/x-tar:
            schema:
              $ref: '#/components/schemas/SpecGenerator'
        required: false
      responses:
        "201":
          description: Create container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "409":
          description: Conflict error in operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-codegen-request-body-name: create
  /libpod/containers/json:
    get:
      tags:
      - containers
      summary: List containers
      description: Returns a list of containers
      operationId: libpodListContainers
      parameters:
      - name: all
        in: query
        description: Return all containers. By default, only running containers are
          shown
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: limit
        in: query
        description: Return this number of most recently created containers, including
          non-running ones.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: pod
        in: query
        description: Ignored. Previously included details on pod name and ID that
          are currently included by default.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: size
        in: query
        description: Return the size of container as fields SizeRw and SizeRootFs.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: sync
        in: query
        description: Sync container state with OCI runtime
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: filters
        in: query
        description: |
          A JSON encoded value of the filters (a `map[string][]string`) to process on the containers list. Available filters:
          - `ancestor`=(`<image-name>[:<tag>]`, `<image id>`, or `<image@digest>`)
          - `before`=(`<container id>` or `<container name>`)
          - `expose`=(`<port>[/<proto>]` or `<startport-endport>/[<proto>]`)
          - `exited=<int>` containers with exit code of `<int>`
          - `health`=(`starting`, `healthy`, `unhealthy` or `none`)
          - `id=<ID>` a container's ID
          - `is-task`=(`true` or `false`)
          - `label`=(`key` or `"key=value"`) of an container label
          - `name=<name>` a container's name
          - `network`=(`<network id>` or `<network name>`)
          - `publish`=(`<port>[/<proto>]` or `<startport-endport>/[<proto>]`)
          - `since`=(`<container id>` or `<container name>`)
          - `status`=(`created`, `restarting`, `running`, `removing`, `paused`, `exited` or `dead`)
          - `volume`=(`<volume name>` or `<mount point destination>`)
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: List Containers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListContainer'
                x-content-type: application/json
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/containers/prune:
    post:
      tags:
      - containers
      summary: Delete stopped containers
      description: Remove containers not in use
      operationId: libpodPruneContainers
      parameters:
      - name: filters
        in: query
        description: |
          Filters to process on the prune list, encoded as JSON (a `map[string][]string`).  Available filters:
           - `until=<timestamp>` Prune containers created before this timestamp. The `<timestamp>` can be Unix timestamps, date formatted timestamps, or Go duration strings (e.g. `10m`, `1h30m`) computed relative to the daemon machine’s time.
           - `label` (`label=<key>`, `label=<key>=<value>`, `label!=<key>`, or `label!=<key>=<value>`) Prune containers with (or without, in case `label!=...` is used) the specified labels.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Prune containers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LibpodContainersPruneReport'
                x-content-type: application/json
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/containers/showmounted:
    get:
      tags:
      - containers
      summary: Show mounted containers
      description: Lists all mounted containers mount points
      operationId: libpodShowMountedContainers
      responses:
        "200":
          description: mounted containers
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
                x-content-type: application/json
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/containers/stats:
    get:
      tags:
      - containers
      summary: Get stats for one or more containers
      description: Return a live stream of resource usage statistics of one or more
        container. If no container is specified, the statistics of all containers
        are returned.
      operationId: libpodStatsContainers
      parameters:
      - name: containers
        in: query
        description: names or IDs of containers
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: stream
        in: query
        description: Stream the output
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: no error
          content: {}
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/events:
    get:
      tags:
      - system
      summary: Get events
      description: Returns events filtered on query parameters
      operationId: libpodGetEvents
      parameters:
      - name: since
        in: query
        description: start streaming events from this time
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: until
        in: query
        description: stop streaming events later than this
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filters
        in: query
        description: JSON encoded map[string][]string of constraints
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: stream
        in: query
        description: when false, do not follow events
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: returns a string of json data describing an event
          content: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/exec/{id}/json:
    get:
      tags:
      - exec
      summary: Inspect an exec instance
      description: Return low-level information about an exec instance.
      operationId: libpodInspectExec
      parameters:
      - name: id
        in: path
        description: Exec instance ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: no error
          content: {}
        "404":
          description: No such exec instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/exec/{id}/resize:
    post:
      tags:
      - exec
      summary: Resize an exec instance
      description: |
        Resize the TTY session used by an exec instance. This endpoint only works if tty was specified as part of creating and starting the exec instance.
      operationId: libpodResizeExec
      parameters:
      - name: id
        in: path
        description: Exec instance ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: h
        in: query
        description: Height of the TTY session in characters
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: w
        in: query
        description: Width of the TTY session in characters
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "201":
          description: no error
          content: {}
        "404":
          description: No such exec instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/exec/{id}/start:
    post:
      tags:
      - exec
      summary: Start an exec instance
      description: Starts a previously set up exec instance. If detach is true, this
        endpoint returns immediately after starting the command. Otherwise, it sets
        up an interactive session with the command.
      operationId: libpodStartExec
      parameters:
      - name: id
        in: path
        description: Exec instance ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Attributes for start
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_6'
          application/x-tar:
            schema:
              $ref: '#/components/schemas/body_7'
        required: false
      responses:
        "200":
          description: no error
          content: {}
        "404":
          description: No such exec instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "409":
          description: container is not running.
          content: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-codegen-request-body-name: control
  /libpod/generate/{name:.*}/kube:
    get:
      tags:
      - containers
      - pods
      summary: Generate a Kubernetes YAML file.
      description: Generate Kubernetes YAML based on a pod or container.
      operationId: libpodGenerateKube
      parameters:
      - name: name:.*
        in: path
        description: Name or ID of the container or pod.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: service
        in: query
        description: Generate YAML for a Kubernetes service object.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: no error
          content:
            application/json:
              schema:
                type: string
                format: binary
                x-content-type: application/json
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/generate/{name:.*}/systemd:
    get:
      tags:
      - containers
      - pods
      summary: Generate Systemd Units
      description: Generate Systemd Units based on a pod or container.
      operationId: libpodGenerateSystemd
      parameters:
      - name: name:.*
        in: path
        description: Name or ID of the container or pod.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: useName
        in: query
        description: Use container/pod names instead of IDs.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: new
        in: query
        description: Create a new container instead of starting an existing one.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: time
        in: query
        description: Stop timeout override.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 10
      - name: restartPolicy
        in: query
        description: Systemd restart-policy.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: on-failure
          enum:
          - "no"
          - on-success
          - on-failure
          - on-abnormal
          - on-watchdog
          - on-abort
          - always
      - name: containerPrefix
        in: query
        description: Systemd unit name prefix for containers.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: container
      - name: podPrefix
        in: query
        description: Systemd unit name prefix for pods.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: pod
      - name: separator
        in: query
        description: Systemd unit name separator between name/id and prefix.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: '-'
      responses:
        "200":
          description: no error
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
                x-content-type: application/json
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/images/{name:.*}:
    delete:
      tags:
      - images
      summary: Remove an image from the local storage.
      description: Remove an image from the local storage.
      operationId: libpodRemoveImage
      parameters:
      - name: name:.*
        in: path
        description: name or ID of image to remove
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: force
        in: query
        description: remove the image even if used by containers or has other tags
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Delete response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImageDeleteResponse'
                x-content-type: application/json
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "404":
          description: No such image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "409":
          description: Conflict error in operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/images/{name:.*}/exists:
    get:
      tags:
      - images
      summary: Image exists
      description: Check if image exists in local store
      operationId: libpodImageExists
      parameters:
      - name: name:.*
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: image exists
          content: {}
        "404":
          description: No such image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/images/{name:.*}/get:
    get:
      tags:
      - images
      summary: Export an image
      description: Export an image
      operationId: libpodExportImage
      parameters:
      - name: name:.*
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: format
        in: query
        description: format for exported image
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: compress
        in: query
        description: use compression on image
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: no error
          content:
            application/json:
              schema:
                type: string
                format: binary
                x-content-type: application/json
        "404":
          description: No such image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/images/{name:.*}/history:
    get:
      tags:
      - images
      summary: History of an image
      description: Return parent layers of an image.
      operationId: libpodImageHistory
      parameters:
      - name: name:.*
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: History response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        "404":
          description: No such image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/images/{name:.*}/json:
    get:
      tags:
      - images
      summary: Inspect an image
      description: Obtain low-level information about an image
      operationId: libpodInspectImage
      parameters:
      - name: name:.*
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Inspect image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
        "404":
          description: No such image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/images/{name:.*}/push:
    post:
      tags:
      - images
      summary: Push Image
      description: Push an image to a container registry
      operationId: libpodPushImage
      parameters:
      - name: name:.*
        in: path
        description: Name of image to push.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: destination
        in: query
        description: Allows for pushing the image to a different destintation than
          the image refers to.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tlsVerify
        in: query
        description: Require TLS verification.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: X-Registry-Auth
        in: header
        description: A base64-encoded auth configuration.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: no error
          content:
            application/json:
              schema:
                type: string
                format: binary
                x-content-type: application/json
        "404":
          description: No such image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/images/{name:.*}/tag:
    post:
      tags:
      - images
      summary: Tag an image
      description: Tag an image so that it becomes part of a repository.
      operationId: libpodTagImage
      parameters:
      - name: name:.*
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: repo
        in: query
        description: the repository to tag in
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tag
        in: query
        description: the name of the new tag
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: no error
          content: {}
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "404":
          description: No such image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "409":
          description: Conflict error in operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/images/{name:.*}/tree:
    get:
      tags:
      - images
      summary: Image tree
      description: Retrieve the image tree for the provided image name or ID
      operationId: libpodImageTree
      parameters:
      - name: name:.*
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: whatrequires
        in: query
        description: show all child images and layers of the specified image
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Image tree response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
        "404":
          description: No such image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/images/{name:.*}/untag:
    post:
      tags:
      - images
      summary: Untag an image
      description: Untag an image. If not repo and tag are specified, all tags are
        removed from the image.
      operationId: libpodUntagImage
      parameters:
      - name: name:.*
        in: path
        description: the name or ID of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: repo
        in: query
        description: the repository to untag
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tag
        in: query
        description: the name of the tag to untag
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: no error
          content: {}
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "404":
          description: No such image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "409":
          description: Conflict error in operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/images/{name}/changes:
    get:
      tags:
      - images
      summary: Report on changes to images's filesystem; adds, deletes or modifications.
      description: |
        Returns which files in a images's filesystem have been added, deleted, or modified. The Kind of modification can be one of:

        0: Modified
        1: Added
        2: Deleted
      operationId: libpodChangesImages
      parameters:
      - name: name
        in: path
        description: the name or id of the container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Array of Changes
          content: {}
        "404":
          description: No such container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
            text/plain:
              schema:
                $ref: '#/components/schemas/inline_response_400'
            text/html:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
            text/plain:
              schema:
                $ref: '#/components/schemas/inline_response_400'
            text/html:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/images/export:
    get:
      tags:
      - images
      summary: Export multiple images
      description: Export multiple images into a single object. Only `docker-archive`
        is currently supported.
      operationId: libpodExportImages
      parameters:
      - name: format
        in: query
        description: format for exported image (only docker-archive is supported)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: references
        in: query
        description: references to images to export
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: compress
        in: query
        description: use compression on image
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: no error
          content:
            application/json:
              schema:
                type: string
                format: binary
                x-content-type: application/json
        "404":
          description: No such image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/images/import:
    post:
      tags:
      - images
      summary: Import image
      description: Import a previously exported tarball as an image.
      operationId: libpodImagesImport
      parameters:
      - name: changes
        in: query
        description: 'Apply the following possible instructions to the created image:
          CMD | ENTRYPOINT | ENV | EXPOSE | LABEL | STOPSIGNAL | USER | VOLUME | WORKDIR.  JSON
          encoded string'
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: message
        in: query
        description: Set commit message for imported image
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: reference
        in: query
        description: Optional Name[:TAG] for the image
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: Load image from the specified URL
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_8'
          application/x-tar:
            schema:
              $ref: '#/components/schemas/body_9'
        required: true
      responses:
        "200":
          description: Import response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageImportReport'
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/images/json:
    get:
      tags:
      - images
      summary: List Images
      description: Returns a list of images on the server
      operationId: libpodListImages
      parameters:
      - name: all
        in: query
        description: Show all images. Only images from a final layer (no children)
          are shown by default.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: filters
        in: query
        description: |
          A JSON encoded value of the filters (a `map[string][]string`) to process on the images list. Available filters:
          - `before`=(`<image-name>[:<tag>]`,  `<image id>` or `<image@digest>`)
          - `dangling=true`
          - `label=key` or `label="key=value"` of an image label
          - `reference`=(`<image-name>[:<tag>]`)
          - `id`=(`<image-id>`)
          - `since`=(`<image-name>[:<tag>]`,  `<image id>` or `<image@digest>`)
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Image summary
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImageSummary'
                x-content-type: application/json
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/images/load:
    post:
      tags:
      - images
      summary: Load image
      description: Load an image (oci-archive or docker-archive) stream.
      operationId: libpodImagesLoad
      parameters:
      - name: reference
        in: query
        description: Optional Name[:TAG] for the image
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_10'
          application/x-tar:
            schema:
              $ref: '#/components/schemas/body_11'
        required: true
      responses:
        "200":
          description: Load response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageLoadReport'
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/images/prune:
    post:
      tags:
      - images
      summary: Prune unused images
      description: Remove images that are not being used by a container
      operationId: libpodPruneImages
      parameters:
      - name: filters
        in: query
        description: |
          filters to apply to image pruning, encoded as JSON (map[string][]string). Available filters:
            - `dangling=<boolean>` When set to `true` (or `1`), prune only
               unused *and* untagged images. When set to `false`
               (or `0`), all unused images are pruned.
            - `until=<string>` Prune images created before this timestamp. The `<timestamp>` can be Unix timestamps, date formatted timestamps, or Go duration strings (e.g. `10m`, `1h30m`) computed relative to the daemon machine’s time.
            - `label` (`label=<key>`, `label=<key>=<value>`, `label!=<key>`, or `label!=<key>=<value>`) Prune images with (or without, in case `label!=...` is used) the specified labels.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Delete response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImageDeleteResponse'
                x-content-type: application/json
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/images/pull:
    post:
      tags:
      - images
      summary: Pull images
      description: Pull one or more images from a container registry.
      operationId: libpodImagesPull
      parameters:
      - name: reference
        in: query
        description: Mandatory reference to the image (e.g., quay.io/image/name:tag)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: credentials
        in: query
        description: username:password for the registry
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: overrideArch
        in: query
        description: Pull image for the specified architecture.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: overrideOS
        in: query
        description: Pull image for the specified operating system.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: overrideVariant
        in: query
        description: Pull image for the specified variant.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tlsVerify
        in: query
        description: Require TLS verification.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: allTags
        in: query
        description: Pull all tagged images in the repository.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Pull response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibpodImagesPullReport'
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/images/remove:
    delete:
      tags:
      - images
      summary: Remove one or more images from the storage.
      description: Remove one or more images from the storage.
      operationId: libpodImagesRemove
      parameters:
      - name: images
        in: query
        description: Images IDs or names to remove.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: all
        in: query
        description: Remove all images.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: force
        in: query
        description: Force image removal (including containers using the images).
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Remove response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibpodImagesRemoveReport'
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/images/search:
    get:
      tags:
      - images
      summary: Search images
      description: Search registries for images
      operationId: libpodSearchImages
      parameters:
      - name: term
        in: query
        description: term to search
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: maximum number of results
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: noTrunc
        in: query
        description: do not truncate any of the result strings
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filters
        in: query
        description: |
          A JSON encoded value of the filters (a `map[string][]string`) to process on the images list. Available filters:
          - `is-automated=(true|false)`
          - `is-official=(true|false)`
          - `stars=<number>` Matches images that has at least 'number' stars.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/info:
    get:
      tags:
      - system
      summary: Get info
      description: Returns information on the system and libpod configuration
      operationId: libpodGetInfo
      responses:
        "200":
          description: Info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Info'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/manifests/{name:.*}:
    delete:
      tags:
      - manifests
      summary: Remove
      description: Remove an image from a manifest list
      operationId: RemoveManifest
      parameters:
      - name: name:.*
        in: path
        description: the image associated with the manifest
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: digest
        in: query
        description: image digest to be removed
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          $ref: '#/definitions/IDResponse'
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "404":
          description: No such manifest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/manifests/{name:.*}/add:
    post:
      tags:
      - manifests
      description: Add an image to a manifest list
      operationId: AddManifest
      parameters:
      - name: name:.*
        in: path
        description: the name or ID of the manifest
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: options for creating a manifest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManifestAddOpts'
          application/x-tar:
            schema:
              $ref: '#/components/schemas/ManifestAddOpts'
        required: false
      responses:
        "200":
          $ref: '#/definitions/IDResponse'
        "404":
          description: No such manifest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "409":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-codegen-request-body-name: options
  /libpod/manifests/{name:.*}/json:
    get:
      tags:
      - manifests
      summary: Inspect
      description: Display a manifest list
      operationId: Inspect
      parameters:
      - name: name:.*
        in: path
        description: the name or ID of the manifest
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Inspect Manifest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
        "404":
          description: No such manifest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/manifests/{name}/push:
    post:
      tags:
      - manifests
      summary: Push
      description: Push a manifest list or image index to a registry
      operationId: PushManifest
      parameters:
      - name: name
        in: path
        description: the name or ID of the manifest
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: destination
        in: query
        description: the destination for the manifest
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: all
        in: query
        description: push all images
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          $ref: '#/definitions/IDResponse'
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "404":
          description: No such manifest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/manifests/create:
    post:
      tags:
      - manifests
      summary: Create
      description: Create a manifest list
      operationId: Create
      parameters:
      - name: name
        in: query
        description: manifest list name
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: image
        in: query
        description: name of the image
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: all
        in: query
        description: add all contents if given list
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          $ref: '#/definitions/IDResponse'
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "404":
          description: No such image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/networks/{name}:
    delete:
      tags:
      - networks
      summary: Remove a network
      description: Remove a CNI configured network
      operationId: libpodRemoveNetwork
      parameters:
      - name: name
        in: path
        description: the name of the network
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: force
        in: query
        description: remove containers associated with network
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Network rm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkRmReport'
        "404":
          description: No such network
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/networks/{name}/json:
    get:
      tags:
      - networks
      summary: Inspect a network
      description: Display low level configuration for a CNI network
      operationId: libpodInspectNetwork
      parameters:
      - name: name
        in: path
        description: the name of the network
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Network inspect
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NetworkInspectReport'
                x-content-type: application/json
        "404":
          description: No such network
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/networks/create:
    post:
      tags:
      - networks
      summary: Create network
      description: Create a new CNI network configuration
      operationId: libpodCreateNetwork
      parameters:
      - name: name
        in: query
        description: optional name for new network
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: attributes for creating a container
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkCreateOptions'
          application/x-tar:
            schema:
              $ref: '#/components/schemas/NetworkCreateOptions'
        required: false
      responses:
        "200":
          description: Network create
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkCreateReport'
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-codegen-request-body-name: create
  /libpod/networks/json:
    get:
      tags:
      - networks
      summary: List networks
      description: Display summary of network configurations
      operationId: libpodListNetwork
      parameters:
      - name: filter
        in: query
        description: Provide filter values (e.g. 'name=podman')
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Network list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NetworkListReport'
                x-content-type: application/json
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/play/kube:
    post:
      tags:
      - containers
      - pods
      summary: Play a Kubernetes YAML file.
      description: Create and run pods based on a Kubernetes YAML file (pod or service
        kind).
      operationId: libpodPlayKube
      parameters:
      - name: network
        in: query
        description: Connect the pod to this network.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tlsVerify
        in: query
        description: Require HTTPS and verify signatures when contacting registries.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      requestBody:
        description: Kubernetes YAML file.
        content:
          application/json:
            schema:
              type: string
          application/x-tar:
            schema:
              type: string
        required: false
      responses:
        "200":
          description: PlayKube response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayKubeReport'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-codegen-request-body-name: request
  /libpod/pods/{name}:
    delete:
      tags:
      - pods
      summary: Remove pod
      operationId: removePod
      parameters:
      - name: name
        in: path
        description: the name or ID of the pod
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: force
        in: query
        description: force removal of a running pod by first stopping all containers,
          then removing all containers in the pod
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Rm pod
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodRmReport'
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "404":
          description: No such pod
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/pods/{name}/exists:
    get:
      tags:
      - pods
      summary: Pod exists
      description: Check if a pod exists by name or ID
      operationId: podExists
      parameters:
      - name: name
        in: path
        description: the name or ID of the pod
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: pod exists
          content: {}
        "404":
          description: No such pod
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/pods/{name}/json:
    get:
      tags:
      - pods
      summary: Inspect pod
      operationId: inspectPod
      parameters:
      - name: name
        in: path
        description: the name or ID of the pod
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Inspect pod
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
        "404":
          description: No such pod
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/pods/{name}/kill:
    post:
      tags:
      - pods
      summary: Kill a pod
      operationId: killPod
      parameters:
      - name: name
        in: path
        description: the name or ID of the pod
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signal
        in: query
        description: signal to be sent to pod
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: SIGKILL
      responses:
        "200":
          description: Kill Pod
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodKillReport'
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "404":
          description: No such pod
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "409":
          description: Conflict error in operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/pods/{name}/pause:
    post:
      tags:
      - pods
      summary: Pause a pod
      description: Pause a pod
      operationId: pausePod
      parameters:
      - name: name
        in: path
        description: the name or ID of the pod
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Pause pod
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodPauseReport'
        "404":
          description: No such pod
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/pods/{name}/restart:
    post:
      tags:
      - pods
      summary: Restart a pod
      operationId: restartPod
      parameters:
      - name: name
        in: path
        description: the name or ID of the pod
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Restart pod
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodRestartReport'
        "404":
          description: No such pod
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/pods/{name}/start:
    post:
      tags:
      - pods
      summary: Start a pod
      operationId: startPod
      parameters:
      - name: name
        in: path
        description: the name or ID of the pod
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Start pod
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodStartReport'
        "304":
          description: Pod already started
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "404":
          description: No such pod
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/pods/{name}/stop:
    post:
      tags:
      - pods
      summary: Stop a pod
      operationId: stopPod
      parameters:
      - name: name
        in: path
        description: the name or ID of the pod
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: t
        in: query
        description: timeout
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Stop pod
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodStopReport'
        "304":
          description: Pod already stopped
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "404":
          description: No such pod
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/pods/{name}/top:
    get:
      tags:
      - pods
      summary: List processes
      description: List processes running inside a pod
      operationId: topPod
      parameters:
      - name: name
        in: path
        description: |
          Name of pod to query for processes
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: stream
        in: query
        description: Stream the output
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: ps_args
        in: query
        description: arguments to pass to ps such as aux. Requires ps(1) to be installed
          in the container if no ps(1) compatible AIX descriptors are used.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: -ef
      responses:
        "200":
          description: List processes in pod
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "404":
          description: No such pod
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/pods/{name}/unpause:
    post:
      tags:
      - pods
      summary: Unpause a pod
      operationId: unpausePod
      parameters:
      - name: name
        in: path
        description: the name or ID of the pod
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Unpause pod
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodUnpauseReport'
        "404":
          description: No such pod
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/pods/create:
    post:
      tags:
      - pods
      summary: Create a pod
      operationId: CreatePod
      requestBody:
        description: attributes for creating a pod
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PodSpecGenerator'
          application/x-tar:
            schema:
              $ref: '#/components/schemas/PodSpecGenerator'
        required: false
      responses:
        "200":
          $ref: '#/definitions/IdResponse'
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-codegen-request-body-name: create
  /libpod/pods/json:
    get:
      tags:
      - pods
      summary: List pods
      operationId: ListPods
      parameters:
      - name: filters
        in: query
        description: needs description and plumbing for filters
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: List pods
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListPodsReport'
                x-content-type: application/json
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/pods/prune:
    post:
      tags:
      - pods
      summary: Prune unused pods
      operationId: PrunePods
      responses:
        "200":
          description: Prune pod
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodPruneReport'
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "409":
          description: pod already exists
          content: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/pods/stats:
    get:
      tags:
      - pods
      summary: Get stats for one or more pods
      description: Display a live stream of resource usage statistics for the containers
        in one or more pods
      operationId: statsPod
      parameters:
      - name: all
        in: query
        description: Provide statistics for all running pods.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: namesOrIDs
        in: query
        description: Names or IDs of pods.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: List processes in pod
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "404":
          description: No such pod
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/system/df:
    get:
      tags:
      - system
      summary: Show disk usage
      description: Return information about disk usage for containers, images, and
        volumes
      operationId: df
      responses:
        "200":
          description: Disk usage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/system/prune:
    post:
      tags:
      - system
      summary: Prune unused data
      operationId: pruneSystem
      responses:
        "200":
          description: Prune report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/version:
    get:
      tags:
      - system
      summary: Component Version information
      operationId: SystemVersion
      responses:
        "200":
          description: Version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_14'
  /libpod/volumes/{name}:
    delete:
      tags:
      - volumes
      summary: Remove volume
      operationId: libpodRemoveVolume
      parameters:
      - name: name
        in: path
        description: the name or ID of the volume
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: force
        in: query
        description: force removal
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "204":
          description: no error
          content: {}
        "404":
          description: No such volume
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "409":
          description: Volume is in use and cannot be removed
          content: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/volumes/{name}/json:
    get:
      tags:
      - volumes
      summary: Inspect volume
      operationId: libpodInspectVolume
      parameters:
      - name: name
        in: path
        description: the name or ID of the volume
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Volume create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_15'
        "404":
          description: No such volume
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/volumes/create:
    post:
      tags:
      - volumes
      summary: Create a volume
      operationId: libpodCreateVolume
      requestBody:
        description: attributes for creating a container
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeCreate'
          application/x-tar:
            schema:
              $ref: '#/components/schemas/VolumeCreate'
        required: false
      responses:
        "201":
          description: Volume create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_15'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-codegen-request-body-name: create
  /libpod/volumes/json:
    get:
      tags:
      - volumes
      summary: List volumes
      description: Returns a list of volumes
      operationId: libpodListVolumes
      parameters:
      - name: filters
        in: query
        description: |
          JSON encoded value of the filters (a map[string][]string) to process on the volumes list. Available filters:
            - driver=<volume-driver-name> Matches volumes based on their driver.
            - label=<key> or label=<key>:<value> Matches volumes based on the presence of a label alone or a label and a value.
            - name=<volume-name> Matches all of volume name.
            - opt=<driver-option> Matches a storage driver options
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Volume list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Volume'
                x-content-type: application/json
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /libpod/volumes/prune:
    post:
      tags:
      - volumes
      summary: Prune volumes
      operationId: libpodPruneVolumes
      responses:
        "200":
          description: Volume prune response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VolumePruneReport'
                x-content-type: application/json
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /networks:
    get:
      tags:
      - networks (compat)
      summary: List networks
      description: Display summary of network configurations
      operationId: compatListNetwork
      parameters:
      - name: filters
        in: query
        description: JSON encoded value of the filters (a map[string][]string) to
          process on the networks list. Only the name filter is supported.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Network list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NetworkResource'
                x-content-type: application/json
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /networks/{name}:
    get:
      tags:
      - networks (compat)
      summary: Inspect a network
      description: Display low level configuration network
      operationId: compatInspectNetwork
      parameters:
      - name: name
        in: path
        description: the name of the network
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Network inspect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkResource'
        "404":
          description: No such network
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    delete:
      tags:
      - networks (compat)
      summary: Remove a network
      description: Remove a network
      operationId: compatRemoveNetwork
      parameters:
      - name: name
        in: path
        description: the name of the network
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: no error
          content: {}
        "404":
          description: No such network
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /networks/create:
    post:
      tags:
      - networks (compat)
      summary: Create network
      description: Create a network configuration
      operationId: compatCreateNetwork
      requestBody:
        description: attributes for creating a container
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkCreateRequest'
          application/x-tar:
            schema:
              $ref: '#/components/schemas/NetworkCreateRequest'
        required: false
      responses:
        "200":
          description: Network create
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_16'
        "400":
          description: Bad parameter in request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-codegen-request-body-name: create
  /version:
    get:
      tags:
      - system (compat)
      summary: Component Version information
      operationId: CompatSystemVersion
      responses:
        "200":
          description: Version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_14'
  /volumes:
    get:
      tags:
      - volumes (compat)
      summary: List volumes
      description: Returns a list of volume
      operationId: listVolumes
      parameters:
      - name: filters
        in: query
        description: |
          JSON encoded value of the filters (a map[string][]string) to process on the volumes list. Available filters:
            - driver=<volume-driver-name> Matches volumes based on their driver.
            - label=<key> or label=<key>:<value> Matches volumes based on the presence of a label alone or a label and a value.
            - name=<volume-name> Matches all of volume name.

          Note:
            The boolean `dangling` filter is not yet implemented for this endpoint.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Volume list response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_17'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /volumes/{name}:
    get:
      tags:
      - volumes (compat)
      summary: Inspect volume
      operationId: inspectVolume
      parameters:
      - name: name
        in: path
        description: the name or ID of the volume
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This response definition is used for both the create and inspect
            endpoints
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_18'
        "404":
          description: No such volume
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    delete:
      tags:
      - volumes (compat)
      summary: Remove volume
      operationId: removeVolume
      parameters:
      - name: name
        in: path
        description: the name or ID of the volume
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: force
        in: query
        description: |
          Force removal of the volume. This actually only causes errors due
          to the names volume not being found to be suppressed, which is the
          behaviour Docker implements.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "204":
          description: no error
          content: {}
        "404":
          description: No such volume
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "409":
          description: Volume is in use and cannot be removed
          content: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /volumes/create:
    post:
      tags:
      - volumes (compat)
      summary: Create a volume
      operationId: createVolume
      requestBody:
        description: |
          attributes for creating a container.
          Note: If a volume by the same name exists, a 201 response with that volume's information will be generated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DockerVolumeCreate'
          application/x-tar:
            schema:
              $ref: '#/components/schemas/DockerVolumeCreate'
        required: false
      responses:
        "201":
          description: This response definition is used for both the create and inspect
            endpoints
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_18'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      x-codegen-request-body-name: create
  /volumes/prune:
    post:
      tags:
      - volumes (compat)
      summary: Prune volumes
      operationId: pruneVolumes
      parameters:
      - name: filters
        in: query
        description: |
          JSON encoded value of filters (a map[string][]string) to match volumes against before pruning.

          Note: No filters are currently supported and any filters specified will cause an error response.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Volume prune response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_19'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
components:
  schemas:
    Address:
      type: object
      properties:
        Addr:
          type: string
        PrefixLen:
          type: integer
          format: int64
      description: Address represents an IP address
      example:
        PrefixLen: 3
        Addr: Addr
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/network
    AuthenticateOKBody:
      required:
      - IdentityToken
      - Status
      type: object
      properties:
        IdentityToken:
          type: string
          description: An opaque token used to authenticate a user after a successful
            login
        Status:
          type: string
          description: The status of the authentication
      description: AuthenticateOKBody authenticate o k body
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/registry
    AutoUserNsOptions:
      title: AutoUserNsOptions defines how to automatically create a user namespace.
      type: object
      properties:
        AdditionalGIDMappings:
          type: array
          description: |-
            AdditionalGIDMappings specified additional GID mappings to include in
            the generated user namespace.
          items:
            $ref: '#/components/schemas/IDMap'
        AdditionalUIDMappings:
          type: array
          description: |-
            AdditionalUIDMappings specified additional UID mappings to include in
            the generated user namespace.
          items:
            $ref: '#/components/schemas/IDMap'
        GroupFile:
          type: string
          description: GroupFile to use if the container uses a volume.
        InitialSize:
          type: integer
          description: |-
            InitialSize defines the minimum size for the user namespace.
            The created user namespace will have at least this size.
          format: uint32
        PasswdFile:
          type: string
          description: PasswdFile to use if the container uses a volume.
        Size:
          type: integer
          description: |-
            Size defines the size for the user namespace.  If it is set to a
            value bigger than 0, the user namespace will have exactly this size.
            If it is not set, some heuristics will be used to find its size.
          format: uint32
      x-go-package: github.com/containers/podman/vendor/github.com/containers/storage
    CgroupConfig:
      type: object
      properties:
        CgroupMode:
          $ref: '#/components/schemas/CgroupMode'
        CgroupParent:
          type: string
        Cgroupns:
          type: string
        Cgroups:
          type: string
      description: CgroupConfig configures the cgroup namespace for the container
      x-go-package: github.com/containers/podman/pkg/spec
    CgroupMode:
      title: CgroupMode represents cgroup mode in the container.
      type: string
      x-go-package: github.com/containers/podman/pkg/namespaces
    CgroupSpec:
      title: CgroupSpec represents the cgroup to use for the container.
      type: string
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/container
    CgroupnsMode:
      type: string
      description: CgroupnsMode represents the cgroup namespace mode of the container
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/container
    Change:
      title: Change represents a change, it wraps the change type and path.
      type: object
      properties:
        Kind:
          $ref: '#/components/schemas/ChangeType'
        Path:
          type: string
      description: |-
        It describes changes of the files in the path respect to the
        parent layers. The change could be modify, add, delete.
        This is used for layer diff.
      x-go-package: github.com/containers/podman/vendor/github.com/containers/storage/pkg/archive
    ChangeType:
      title: ChangeType represents the change type.
      type: integer
      format: int64
      x-go-package: github.com/containers/podman/vendor/github.com/containers/storage/pkg/archive
    Config:
      title: Config contains the configuration data about a container.
      type: object
      properties:
        ArgsEscaped:
          type: boolean
        AttachStderr:
          type: boolean
        AttachStdin:
          type: boolean
        AttachStdout:
          type: boolean
        Cmd:
          $ref: '#/components/schemas/StrSlice'
        Domainname:
          type: string
        Entrypoint:
          $ref: '#/components/schemas/StrSlice'
        Env:
          type: array
          items:
            type: string
        ExposedPorts:
          $ref: '#/components/schemas/PortSet'
        Healthcheck:
          $ref: '#/components/schemas/HealthConfig'
        Hostname:
          type: string
        Image:
          type: string
        Labels:
          type: object
          additionalProperties:
            type: string
        MacAddress:
          type: string
        NetworkDisabled:
          type: boolean
        OnBuild:
          type: array
          items:
            type: string
        OpenStdin:
          type: boolean
        Shell:
          $ref: '#/components/schemas/StrSlice'
        StdinOnce:
          type: boolean
        StopSignal:
          type: string
        StopTimeout:
          type: integer
          format: int64
        Tty:
          type: boolean
        User:
          type: string
        Volumes:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
        WorkingDir:
          type: string
      description: |-
        It should hold only portable information about the container.
        Here, "portable" means "independent from the host we are running on".
        Non-portable information *should* appear in HostConfig.
        All fields added to this struct must be marked `omitempty` to keep getting
        predictable hashes from the old `v1Compatibility` configuration.
      example:
        User: User
        OpenStdin: true
        Env:
        - Env
        - Env
        Image: Image
        StdinOnce: true
        AttachStdout: true
        Shell: null
        Volumes:
          key: {}
        AttachStdin: true
        Domainname: Domainname
        Tty: true
        Cmd:
        - Cmd
        - Cmd
        StopTimeout: 1
        StopSignal: StopSignal
        Entrypoint: null
        AttachStderr: true
        ArgsEscaped: true
        Hostname: Hostname
        Labels:
          key: Labels
        Healthcheck:
          Test:
          - Test
          - Test
          Retries: 6
          Timeout: null
          Interval: 0
          StartPeriod: null
        MacAddress: MacAddress
        NetworkDisabled: true
        ExposedPorts:
          key: {}
        WorkingDir: WorkingDir
        OnBuild:
        - OnBuild
        - OnBuild
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/container
    ConfigReference:
      type: object
      properties:
        Network:
          type: string
      description: ConfigReference specifies the source which provides a network's
        configuration
      example:
        Network: Network
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/network
    ConmonInfo:
      type: object
      properties:
        package:
          type: string
          x-go-name: Package
        path:
          type: string
          x-go-name: Path
        version:
          type: string
          x-go-name: Version
      description: ConmonInfo describes the conmon executable being used
      example:
        path: path
        package: package
        version: version
      x-go-package: github.com/containers/podman/libpod/define
    ContainerBasicConfig:
      title: ContainerBasicConfig contains the basic parts of a container.
      type: object
      properties:
        annotations:
          type: object
          additionalProperties:
            type: string
          description: |-
            Annotations are key-value options passed into the container runtime
            that can be used to trigger special behavior.
            Optional.
          x-go-name: Annotations
        command:
          type: array
          description: |-
            Command is the container's command.
            If not given and Image is specified, this will be populated by the
            image's configuration.
            Optional.
          items:
            type: string
          x-go-name: Command
        conmon_pid_file:
          type: string
          description: |-
            ConmonPidFile is a path at which a PID file for Conmon will be
            placed.
            If not given, a default location will be used.
            Optional.
          x-go-name: ConmonPidFile
        containerCreateCommand:
          type: array
          description: |-
            ContainerCreateCommand is the command that was used to create this
            container.
            This will be shown in the output of Inspect() on the container, and
            may also be used by some tools that wish to recreate the container
            (e.g. `podman generate systemd --new`).
            Optional.
          items:
            type: string
          x-go-name: ContainerCreateCommand
        entrypoint:
          type: array
          description: |-
            Entrypoint is the container's entrypoint.
            If not given and Image is specified, this will be populated by the
            image's configuration.
            Optional.
          items:
            type: string
          x-go-name: Entrypoint
        env:
          type: object
          additionalProperties:
            type: string
          description: |-
            Env is a set of environment variables that will be set in the
            container.
            Optional.
          x-go-name: Env
        env_host:
          type: boolean
          description: |-
            EnvHost indicates that the host environment should be added to container
            Optional.
          x-go-name: EnvHost
        hostname:
          type: string
          description: |-
            Hostname is the container's hostname. If not set, the hostname will
            not be modified (if UtsNS is not private) or will be set to the
            container ID (if UtsNS is private).
            Conflicts with UtsNS if UtsNS is not set to private.
            Optional.
          x-go-name: Hostname
        httpproxy:
          type: boolean
          description: |-
            EnvHTTPProxy indicates that the http host proxy environment variables
            should be added to container
            Optional.
          x-go-name: HTTPProxy
        labels:
          type: object
          additionalProperties:
            type: string
          description: |-
            Labels are key-value pairs that are used to add metadata to
            containers.
            Optional.
          x-go-name: Labels
        log_configuration:
          $ref: '#/components/schemas/LogConfig'
        name:
          type: string
          description: |-
            Name is the name the container will be given.
            If no name is provided, one will be randomly generated.
            Optional.
          x-go-name: Name
        namespace:
          type: string
          description: |-
            Namespace is the libpod namespace the container will be placed in.
            Optional.
          x-go-name: Namespace
        oci_runtime:
          type: string
          description: |-
            OCIRuntime is the name of the OCI runtime that will be used to create
            the container.
            If not specified, the default will be used.
            Optional.
          x-go-name: OCIRuntime
        pidns:
          $ref: '#/components/schemas/Namespace'
        pod:
          type: string
          description: |-
            Pod is the ID of the pod the container will join.
            Optional.
          x-go-name: Pod
        raw_image_name:
          type: string
          description: |-
            RawImageName is the user-specified and unprocessed input referring
            to a local or a remote image.
          x-go-name: RawImageName
        remove:
          type: boolean
          description: |-
            Remove indicates if the container should be removed once it has been started
            and exits
          x-go-name: Remove
        restart_policy:
          type: string
          description: |-
            RestartPolicy is the container's restart policy - an action which
            will be taken when the container exits.
            If not given, the default policy, which does nothing, will be used.
            Optional.
          x-go-name: RestartPolicy
        restart_tries:
          type: integer
          description: |-
            RestartRetries is the number of attempts that will be made to restart
            the container.
            Only available when RestartPolicy is set to "on-failure".
            Optional.
          format: uint64
          x-go-name: RestartRetries
        sdnotifyMode:
          type: string
          description: |-
            Determine how to handle the NOTIFY_SOCKET - do we participate or pass it through
            "container" - let the OCI runtime deal with it, advertise conmon's MAINPID
            "conmon-only" - advertise conmon's MAINPID, send READY when started, don't pass to OCI
            "ignore" - unset NOTIFY_SOCKET
          x-go-name: SdNotifyMode
        stdin:
          type: boolean
          description: Stdin is whether the container will keep its STDIN open.
          x-go-name: Stdin
        stop_signal:
          $ref: '#/components/schemas/Signal'
        stop_timeout:
          type: integer
          description: |-
            StopTimeout is a timeout between the container's stop signal being
            sent and SIGKILL being sent.
            If not provided, the default will be used.
            If 0 is used, stop signal will not be sent, and SIGKILL will be sent
            instead.
            Optional.
          format: uint64
          x-go-name: StopTimeout
        sysctl:
          type: object
          additionalProperties:
            type: string
          description: Sysctl sets kernel parameters for the container
          x-go-name: Sysctl
        systemd:
          type: string
          description: |-
            Systemd is whether the container will be started in systemd mode.
            Valid options are "true", "false", and "always".
            "true" enables this mode only if the binary run in the container is
            sbin/init or systemd. "always" unconditionally enables systemd mode.
            "false" unconditionally disables systemd mode.
            If enabled, mounts and stop signal will be modified.
            If set to "always" or set to "true" and conditionally triggered,
            conflicts with StopSignal.
            If not specified, "false" will be assumed.
            Optional.
          x-go-name: Systemd
        terminal:
          type: boolean
          description: |-
            Terminal is whether the container will create a PTY.
            Optional.
          x-go-name: Terminal
        timezone:
          type: string
          description: |-
            Timezone is the timezone inside the container.
            Local means it has the same timezone as the host machine
          x-go-name: Timezone
        utsns:
          $ref: '#/components/schemas/Namespace'
      x-go-package: github.com/containers/podman/pkg/specgen
    ContainerCgroupConfig:
      type: object
      properties:
        cgroup_parent:
          type: string
          description: |-
            CgroupParent is the container's CGroup parent.
            If not set, the default for the current cgroup driver will be used.
            Optional.
          x-go-name: CgroupParent
        cgroupns:
          $ref: '#/components/schemas/Namespace'
        cgroups_mode:
          type: string
          description: |-
            CgroupsMode sets a policy for how cgroups will be created in the
            container, including the ability to disable creation entirely.
          x-go-name: CgroupsMode
      description: |-
        ContainerCgroupConfig contains configuration information about a container's
        cgroups.
      x-go-package: github.com/containers/podman/pkg/specgen
    ContainerChangeResponseItem:
      required:
      - Kind
      - Path
      type: object
      properties:
        Kind:
          type: integer
          description: Kind of change
          format: uint8
        Path:
          type: string
          description: Path to file that has changed
      description: ContainerChangeResponseItem change item in response to ContainerChanges
        operation
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/container
    ContainerCreateCreatedBody:
      required:
      - Id
      - Warnings
      type: object
      properties:
        Id:
          type: string
          description: The ID of the created container
          x-go-name: ID
        Warnings:
          type: array
          description: Warnings encountered when creating the container
          items:
            type: string
      description: ContainerCreateCreatedBody OK response to ContainerCreate operation
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/container
    ContainerHealthCheckConfig:
      type: object
      properties:
        healthconfig:
          $ref: '#/components/schemas/Schema2HealthConfig'
      description: |-
        ContainerHealthCheckConfig describes a container healthcheck with attributes
        like command, retries, interval, start period, and timeout.
      x-go-package: github.com/containers/podman/pkg/specgen
    ContainerNamedVolume:
      type: object
      properties:
        dest:
          type: string
          description: Dest is the mount's destination
          x-go-name: Dest
        options:
          type: array
          description: Options are fstab style mount options
          items:
            type: string
          x-go-name: Options
        volumeName:
          type: string
          description: |-
            Name is the name of the volume to mount in.
            Must resolve to a valid volume present in this Podman.
          x-go-name: Name
      description: |-
        ContainerNamedVolume is a named volume that will be mounted into the
        container. Each named volume is a libpod Volume present in the state.
      x-go-package: github.com/containers/podman/libpod
    ContainerNetworkConfig:
      type: object
      properties:
        cni_networks:
          type: array
          description: |-
            CNINetworks is a list of CNI networks to join the container to.
            If this list is empty, the default CNI network will be joined
            instead. If at least one entry is present, we will not join the
            default network (unless it is part of this list).
            Only available if NetNS is set to bridge.
            Optional.
          items:
            type: string
          x-go-name: CNINetworks
        dns_option:
          type: array
          description: |-
            DNSOptions is a set of DNS options that will be used in the
            container's resolv.conf, replacing the host's DNS options which are
            used by default.
            Conflicts with UseImageResolvConf.
            Optional.
          items:
            type: string
          x-go-name: DNSOptions
        dns_search:
          type: array
          description: |-
            DNSSearch is a set of DNS search domains that will be used in the
            container's resolv.conf, replacing the host's DNS search domains
            which are used by default.
            Conflicts with UseImageResolvConf.
            Optional.
          items:
            type: string
          x-go-name: DNSSearch
        dns_server:
          type: array
          description: |-
            DNSServers is a set of DNS servers that will be used in the
            container's resolv.conf, replacing the host's DNS Servers which are
            used by default.
            Conflicts with UseImageResolvConf.
            Optional.
          items:
            $ref: '#/components/schemas/IP'
          x-go-name: DNSServers
        expose:
          type: object
          description: |-
            Expose is a number of ports that will be forwarded to the container
            if PublishExposedPorts is set.
            Expose is a map of uint16 (port number) to a string representing
            protocol. Allowed protocols are "tcp", "udp", and "sctp", or some
            combination of the three separated by commas.
            If protocol is set to "" we will assume TCP.
            Only available if NetNS is set to Bridge or Slirp, and
            PublishExposedPorts is set.
            Optional.
          x-go-name: Expose
        hostadd:
          type: array
          description: |-
            HostAdd is a set of hosts which will be added to the container's
            etc/hosts file.
            Conflicts with UseImageHosts.
            Optional.
          items:
            type: string
          x-go-name: HostAdd
        netns:
          $ref: '#/components/schemas/Namespace'
        network_options:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: |-
            NetworkOptions are additional options for each network
            Optional.
          x-go-name: NetworkOptions
        portmappings:
          type: array
          description: |-
            PortBindings is a set of ports to map into the container.
            Only available if NetNS is set to bridge or slirp.
            Optional.
          items:
            $ref: '#/components/schemas/PortMapping'
          x-go-name: PortMappings
        publish_image_ports:
          type: boolean
          description: |-
            PublishExposedPorts will publish ports specified in the image to
            random unused ports (guaranteed to be above 1024) on the host.
            This is based on ports set in Expose below, and any ports specified
            by the Image (if one is given).
            Only available if NetNS is set to Bridge or Slirp.
          x-go-name: PublishExposedPorts
        static_ip:
          $ref: '#/components/schemas/IP'
        static_ipv6:
          $ref: '#/components/schemas/IP'
        static_mac:
          $ref: '#/components/schemas/HardwareAddr'
        use_image_hosts:
          type: boolean
          description: |-
            UseImageHosts indicates that /etc/hosts should not be managed by
            Podman, and instead sourced from the image.
            Conflicts with HostAdd.
          x-go-name: UseImageHosts
        use_image_resolve_conf:
          type: boolean
          description: |-
            UseImageResolvConf indicates that resolv.conf should not be managed
            by Podman, but instead sourced from the image.
            Conflicts with DNSServer, DNSSearch, DNSOption.
          x-go-name: UseImageResolvConf
      description: |-
        ContainerNetworkConfig contains information on a container's network
        configuration.
      x-go-package: github.com/containers/podman/pkg/specgen
    ContainerNode:
      type: object
      properties:
        Addr:
          type: string
        Cpus:
          type: integer
          format: int64
        ID:
          type: string
        IP:
          type: string
          x-go-name: IPAddress
        Labels:
          type: object
          additionalProperties:
            type: string
        Memory:
          type: integer
          format: int64
        Name:
          type: string
      description: |-
        ContainerNode stores information about the node that a container
        is running on.  It's only used by the Docker Swarm standalone API
      example:
        Memory: 0
        IP: IP
        Labels:
          key: Labels
        Cpus: 7
        ID: ID
        Addr: Addr
        Name: Name
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    ContainerResourceConfig:
      title: ContainerResourceConfig contains information on container resource limits.
      type: object
      properties:
        oom_score_adj:
          type: integer
          description: |-
            OOMScoreAdj adjusts the score used by the OOM killer to determine
            processes to kill for the container's process.
            Optional.
          format: int64
          x-go-name: OOMScoreAdj
        r_limits:
          type: array
          description: |-
            Rlimits are POSIX rlimits to apply to the container.
            Optional.
          items:
            $ref: '#/components/schemas/POSIXRlimit'
          x-go-name: Rlimits
        resource_limits:
          $ref: '#/components/schemas/LinuxResources'
        throttleReadBpsDevice:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LinuxThrottleDevice'
          description: IO read rate limit per cgroup per device, bytes per second
          x-go-name: ThrottleReadBpsDevice
        throttleReadIOPSDevice:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LinuxThrottleDevice'
          description: IO read rate limit per cgroup per device, IO per second
          x-go-name: ThrottleReadIOPSDevice
        throttleWriteBpsDevice:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LinuxThrottleDevice'
          description: IO write rate limit per cgroup per device, bytes per second
          x-go-name: ThrottleWriteBpsDevice
        throttleWriteIOPSDevice:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LinuxThrottleDevice'
          description: IO write rate limit per cgroup per device, IO per second
          x-go-name: ThrottleWriteIOPSDevice
        unified:
          type: object
          additionalProperties:
            type: string
          description: |-
            CgroupConf are key-value options passed into the container runtime
            that are used to configure cgroup v2.
            Optional.
          x-go-name: CgroupConf
        weightDevice:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LinuxWeightDevice'
          description: Weight per cgroup per device, can override BlkioWeight
          x-go-name: WeightDevice
      x-go-package: github.com/containers/podman/pkg/specgen
    ContainerSecurityConfig:
      type: object
      properties:
        apparmor_profile:
          type: string
          description: |-
            ApparmorProfile is the name of the Apparmor profile the container
            will use.
            Optional.
          x-go-name: ApparmorProfile
        cap_add:
          type: array
          description: |-
            CapAdd are capabilities which will be added to the container.
            Conflicts with Privileged.
            Optional.
          items:
            type: string
          x-go-name: CapAdd
        cap_drop:
          type: array
          description: |-
            CapDrop are capabilities which will be removed from the container.
            Conflicts with Privileged.
            Optional.
          items:
            type: string
          x-go-name: CapDrop
        groups:
          type: array
          description: |-
            Groups are a list of supplemental groups the container's user will
            be granted access to.
            Optional.
          items:
            type: string
          x-go-name: Groups
        idmappings:
          $ref: '#/components/schemas/IDMappingOptions'
        no_new_privileges:
          type: boolean
          description: |-
            NoNewPrivileges is whether the container will set the no new
            privileges flag on create, which disables gaining additional
            privileges (e.g. via setuid) in the container.
          x-go-name: NoNewPrivileges
        privileged:
          type: boolean
          description: |-
            Privileged is whether the container is privileged.
            Privileged does the following:
            Adds all devices on the system to the container.
            Adds all capabilities to the container.
            Disables Seccomp, SELinux, and Apparmor confinement.
            (Though SELinux can be manually re-enabled).
            TODO: this conflicts with things.
            TODO: this does more.
          x-go-name: Privileged
        procfs_opts:
          type: array
          description: ProcOpts are the options used for the proc mount.
          items:
            type: string
          x-go-name: ProcOpts
        read_only_filesystem:
          type: boolean
          description: |-
            ReadOnlyFilesystem indicates that everything will be mounted
            as read-only
          x-go-name: ReadOnlyFilesystem
        seccomp_policy:
          type: string
          description: |-
            SeccompPolicy determines which seccomp profile gets applied
            the container. valid values: empty,default,image
          x-go-name: SeccompPolicy
        seccomp_profile_path:
          type: string
          description: |-
            SeccompProfilePath is the path to a JSON file containing the
            container's Seccomp profile.
            If not specified, no Seccomp profile will be used.
            Optional.
          x-go-name: SeccompProfilePath
        selinux_opts:
          type: array
          description: |-
            SelinuxProcessLabel is the process label the container will use.
            If SELinux is enabled and this is not specified, a label will be
            automatically generated if not specified.
            Optional.
          items:
            type: string
          x-go-name: SelinuxOpts
        umask:
          type: string
          description: Umask is the umask the init process of the container will be
            run with.
          x-go-name: Umask
        user:
          type: string
          description: |-
            User is the user the container will be run as.
            Can be given as a UID or a username; if a username, it will be
            resolved within the container, using the container's /etc/passwd.
            If unset, the container will be run as root.
            Optional.
          x-go-name: User
        userns:
          $ref: '#/components/schemas/Namespace'
      description: |-
        ContainerSecurityConfig is a container's security features, including
        SELinux, Apparmor, and Seccomp.
      x-go-package: github.com/containers/podman/pkg/specgen
    ContainerSize:
      type: object
      properties:
        rootFsSize:
          type: integer
          format: int64
          x-go-name: RootFsSize
        rwSize:
          type: integer
          format: int64
          x-go-name: RwSize
      description: |-
        ContainerSize holds the size of the container's root filesystem and top
        read-write layer.
      example:
        rootFsSize: 9
        rwSize: 3
      x-go-package: github.com/containers/podman/pkg/ps/define
    ContainerState:
      type: object
      properties:
        Dead:
          type: boolean
        Error:
          type: string
        ExitCode:
          type: integer
          format: int64
        FinishedAt:
          type: string
        Health:
          $ref: '#/components/schemas/Health'
        OOMKilled:
          type: boolean
        Paused:
          type: boolean
        Pid:
          type: integer
          format: int64
        Restarting:
          type: boolean
        Running:
          type: boolean
        StartedAt:
          type: string
        Status:
          type: string
      description: |-
        ContainerState stores container's running state
        it's part of ContainerJSONBase and will return by "inspect" command
      example:
        Status: Status
        Restarting: true
        Dead: true
        Health:
          Status: Status
          Log:
          - Start: 2000-01-23T04:56:07.000+00:00
            ExitCode: 7
            Output: Output
            End: 2000-01-23T04:56:07.000+00:00
          - Start: 2000-01-23T04:56:07.000+00:00
            ExitCode: 7
            Output: Output
            End: 2000-01-23T04:56:07.000+00:00
          FailingStreak: 8
        ExitCode: 4
        Running: true
        Error: Error
        FinishedAt: FinishedAt
        OOMKilled: true
        Pid: 3
        StartedAt: StartedAt
        Paused: true
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    ContainerStorageConfig:
      type: object
      properties:
        devices:
          type: array
          description: |-
            Devices are devices that will be added to the container.
            Optional.
          items:
            $ref: '#/components/schemas/LinuxDevice'
          x-go-name: Devices
        image:
          type: string
          description: |-
            Image is the image the container will be based on. The image will be
            used as the container's root filesystem, and its environment vars,
            volumes, and other configuration will be applied to the container.
            Conflicts with Rootfs.
            At least one of Image or Rootfs must be specified.
          x-go-name: Image
        image_volume_mode:
          type: string
          description: |-
            ImageVolumeMode indicates how image volumes will be created.
            Supported modes are "ignore" (do not create), "tmpfs" (create as
            tmpfs), and "anonymous" (create as anonymous volumes).
            The default if unset is anonymous.
            Optional.
          x-go-name: ImageVolumeMode
        init:
          type: boolean
          description: |-
            Init specifies that an init binary will be mounted into the
            container, and will be used as PID1.
          x-go-name: Init
        init_path:
          type: string
          description: |-
            InitPath specifies the path to the init binary that will be added if
            Init is specified above. If not specified, the default set in the
            Libpod config will be used. Ignored if Init above is not set.
            Optional.
          x-go-name: InitPath
        ipcns:
          $ref: '#/components/schemas/Namespace'
        mounts:
          type: array
          description: |-
            Mounts are mounts that will be added to the container.
            These will supersede Image Volumes and VolumesFrom volumes where
            there are conflicts.
            Optional.
          items:
            $ref: '#/components/schemas/Mount'
          x-go-name: Mounts
        overlay_volumes:
          type: array
          description: |-
            Overlay volumes are named volumes that will be added to the container.
            Optional.
          items:
            $ref: '#/components/schemas/OverlayVolume'
          x-go-name: OverlayVolumes
        rootfs:
          type: string
          description: |-
            Rootfs is the path to a directory that will be used as the
            container's root filesystem. No modification will be made to the
            directory, it will be directly mounted into the container as root.
            Conflicts with Image.
            At least one of Image or Rootfs must be specified.
          x-go-name: Rootfs
        rootfs_propagation:
          type: string
          description: |-
            RootfsPropagation is the rootfs propagation mode for the container.
            If not set, the default of rslave will be used.
            Optional.
          x-go-name: RootfsPropagation
        shm_size:
          type: integer
          description: |-
            ShmSize is the size of the tmpfs to mount in at /dev/shm, in bytes.
            Conflicts with ShmSize if IpcNS is not private.
            Optional.
          format: int64
          x-go-name: ShmSize
        volumes:
          type: array
          description: |-
            Volumes are named volumes that will be added to the container.
            These will supersede Image Volumes and VolumesFrom volumes where
            there are conflicts.
            Optional.
          items:
            $ref: '#/components/schemas/NamedVolume'
          x-go-name: Volumes
        volumes_from:
          type: array
          description: |-
            VolumesFrom is a set of containers whose volumes will be added to
            this container. The name or ID of the container must be provided, and
            may optionally be followed by a : and then one or more
            comma-separated options. Valid options are 'ro', 'rw', and 'z'.
            Options will be used for all volumes sourced from the container.
          items:
            type: string
          x-go-name: VolumesFrom
        work_dir:
          type: string
          description: |-
            WorkDir is the container's working directory.
            If unset, the default, /, will be used.
            Optional.
          x-go-name: WorkDir
      description: |-
        ContainerStorageConfig contains information on the storage configuration of a
        container.
      x-go-package: github.com/containers/podman/pkg/specgen
    ContainerStore:
      type: object
      properties:
        number:
          type: integer
          format: int64
          x-go-name: Number
        paused:
          type: integer
          format: int64
          x-go-name: Paused
        running:
          type: integer
          format: int64
          x-go-name: Running
        stopped:
          type: integer
          format: int64
          x-go-name: Stopped
      description: |-
        ContainerStore describes the quantity of containers in the
        store by status
      example:
        running: 4
        number: 3
        paused: 2
        stopped: 7
      x-go-package: github.com/containers/podman/libpod/define
    ContainerTopOKBody:
      required:
      - Processes
      - Titles
      type: object
      properties:
        Processes:
          type: array
          description: |-
            Each process running in the container, where each is process
            is an array of values corresponding to the titles.
          items:
            type: array
            items:
              type: string
        Titles:
          type: array
          description: The ps column titles
          items:
            type: string
      description: ContainerTopOKBody OK response to ContainerTop operation
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/container
    ContainerUpdateOKBody:
      required:
      - Warnings
      type: object
      properties:
        Warnings:
          type: array
          description: warnings
          items:
            type: string
      description: ContainerUpdateOKBody OK response to ContainerUpdate operation
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/container
    ContainerWaitOKBody:
      required:
      - Error
      - StatusCode
      type: object
      properties:
        Error:
          $ref: '#/components/schemas/ContainerWaitOKBodyError'
        StatusCode:
          type: integer
          description: Exit code of the container
          format: int64
      description: ContainerWaitOKBody OK response to ContainerWait operation
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/container
    ContainerWaitOKBodyError:
      type: object
      properties:
        Message:
          type: string
          description: Details of an error
      description: ContainerWaitOKBodyError container waiting error, if any
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/container
    ContainersPruneReport:
      type: object
      properties:
        ContainersDeleted:
          type: array
          items:
            type: string
        SpaceReclaimed:
          type: integer
          format: uint64
      example:
        SpaceReclaimed: 0
        ContainersDeleted:
        - ContainersDeleted
        - ContainersDeleted
      x-go-package: github.com/containers/podman/pkg/api/handlers
    CreateConfig:
      type: object
      properties:
        Annotations:
          type: object
          additionalProperties:
            type: string
        Args:
          type: array
          items:
            type: string
        BuiltinImgVolumes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        Cgroup:
          $ref: '#/components/schemas/CgroupConfig'
        CidFile:
          type: string
        Command:
          type: array
          items:
            type: string
        ConmonPidFile:
          type: string
        Detach:
          type: boolean
        Devices:
          type: array
          items:
            type: string
        Entrypoint:
          type: array
          items:
            type: string
        Env:
          type: object
          additionalProperties:
            type: string
        HealthCheck:
          $ref: '#/components/schemas/Schema2HealthConfig'
        Image:
          type: string
        ImageID:
          type: string
        ImageVolumeType:
          type: string
        Init:
          type: boolean
        InitPath:
          type: string
        Interactive:
          type: boolean
        Ipc:
          $ref: '#/components/schemas/IpcConfig'
        Labels:
          type: object
          additionalProperties:
            type: string
        LogDriver:
          type: string
        LogDriverOpt:
          type: array
          items:
            type: string
        Mounts:
          type: array
          items:
            $ref: '#/components/schemas/Mount'
        MountsFlag:
          type: array
          items:
            type: string
        Name:
          type: string
        NamedVolumes:
          type: array
          items:
            $ref: '#/components/schemas/ContainerNamedVolume'
        Network:
          $ref: '#/components/schemas/NetworkConfig'
        Pid:
          $ref: '#/components/schemas/PidConfig'
        Pod:
          type: string
        PodmanPath:
          type: string
        Quiet:
          type: boolean
        RawImageName:
          type: string
        Resources:
          $ref: '#/components/schemas/CreateResourceConfig'
        RestartPolicy:
          type: string
        Rm:
          type: boolean
        Rmi:
          type: boolean
        Rootfs:
          type: string
        Security:
          $ref: '#/components/schemas/SecurityConfig'
        StopSignal:
          $ref: '#/components/schemas/Signal'
        StopTimeout:
          type: integer
          format: uint64
        Syslog:
          type: boolean
        Systemd:
          type: boolean
        Tmpfs:
          type: array
          items:
            type: string
        Tty:
          type: boolean
        User:
          $ref: '#/components/schemas/UserConfig'
        UserCommand:
          type: array
          items:
            type: string
        Uts:
          $ref: '#/components/schemas/UtsConfig'
        Volumes:
          type: array
          items:
            type: string
        VolumesFrom:
          type: array
          items:
            type: string
        WorkDir:
          type: string
      description: CreateConfig is a pre OCI spec structure.  It represents user input
        from varlink or the CLI
      x-go-package: github.com/containers/podman/pkg/spec
    CreateResourceConfig:
      type: object
      properties:
        BlkioWeight:
          type: integer
          format: uint16
        BlkioWeightDevice:
          type: array
          items:
            type: string
        CPUPeriod:
          type: integer
          format: uint64
        CPUQuota:
          type: integer
          format: int64
        CPURtPeriod:
          type: integer
          format: uint64
        CPURtRuntime:
          type: integer
          format: int64
        CPUShares:
          type: integer
          format: uint64
        CPUs:
          type: number
          format: double
        CPUsetCPUs:
          type: string
        CPUsetMems:
          type: string
        CgroupConf:
          type: object
          additionalProperties:
            type: string
        DeviceCgroupRules:
          type: array
          items:
            type: string
        DeviceReadBps:
          type: array
          items:
            type: string
        DeviceReadIOps:
          type: array
          items:
            type: string
        DeviceWriteBps:
          type: array
          items:
            type: string
        DeviceWriteIOps:
          type: array
          items:
            type: string
        DisableOomKiller:
          type: boolean
        KernelMemory:
          type: integer
          format: int64
        Memory:
          type: integer
          format: int64
        MemoryReservation:
          type: integer
          format: int64
        MemorySwap:
          type: integer
          format: int64
        MemorySwappiness:
          type: integer
          format: int64
        OomScoreAdj:
          type: integer
          format: int64
        PidsLimit:
          type: integer
          format: int64
        ShmSize:
          type: integer
          format: int64
        Ulimit:
          type: array
          items:
            type: string
      description: |-
        CreateResourceConfig represents resource elements in CreateConfig
        structures
      x-go-package: github.com/containers/podman/pkg/spec
    Data:
      type: object
      properties:
        Data:
          type: object
          additionalProperties:
            type: string
        Name:
          type: string
      description: Data handles the data for a storage driver
      example:
        Data:
          key: Data
        Name: Name
      x-go-package: github.com/containers/podman/libpod/driver
    DeviceMapping:
      title: DeviceMapping represents the device mapping between the host and the
        container.
      type: object
      properties:
        CgroupPermissions:
          type: string
        PathInContainer:
          type: string
        PathOnHost:
          type: string
      example:
        CgroupPermissions: CgroupPermissions
        PathInContainer: PathInContainer
        PathOnHost: PathOnHost
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/container
    DeviceRequest:
      title: DeviceRequest represents a request for devices from a device driver.
      type: object
      properties:
        Capabilities:
          type: array
          items:
            type: array
            items:
              type: string
        Count:
          type: integer
          format: int64
        DeviceIDs:
          type: array
          items:
            type: string
        Driver:
          type: string
        Options:
          type: object
          additionalProperties:
            type: string
      description: Used by GPU device drivers.
      example:
        DeviceIDs:
        - DeviceIDs
        - DeviceIDs
        Options:
          key: Options
        Capabilities:
        - - Capabilities
          - Capabilities
        - - Capabilities
          - Capabilities
        Driver: Driver
        Count: 1
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/container
    Digest:
      title: |-
        Digest allows simple protection of hex formatted digest strings, prefixed
        by their algorithm. Strings of type Digest have some guarantee of being in
        the correct format and it provides quick access to the components of a
        digest string.
      type: string
      description: |-
        The following is an example of the contents of Digest types:

        sha256:7173b809ca12ec5dee4506cd86be934c4596dd234ee82c0662eac04a8c2c71dc

        This allows to abstract the digest behind this type and work only in those
        terms.
      x-go-package: github.com/containers/podman/vendor/github.com/opencontainers/go-digest
    DistributionInfo:
      type: object
      properties:
        distribution:
          type: string
          x-go-name: Distribution
        version:
          type: string
          x-go-name: Version
      description: |-
        DistributionInfo describes the host distribution
        for libpod
      example:
        distribution: distribution
        version: version
      x-go-package: github.com/containers/podman/libpod/define
    DockerVolumeCreate:
      $ref: '#/components/schemas/VolumeCreateBody'
    Duration:
      type: integer
      description: |-
        A Duration represents the elapsed time between two instants
        as an int64 nanosecond count. The representation limits the
        largest representable duration to approximately 290 years.
      format: int64
      x-go-package: time
    EndpointIPAMConfig:
      type: object
      properties:
        IPv4Address:
          type: string
        IPv6Address:
          type: string
        LinkLocalIPs:
          type: array
          items:
            type: string
      description: EndpointIPAMConfig represents IPAM configurations for the endpoint
      example:
        LinkLocalIPs:
        - LinkLocalIPs
        - LinkLocalIPs
        IPv6Address: IPv6Address
        IPv4Address: IPv4Address
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/network
    EndpointResource:
      type: object
      properties:
        EndpointID:
          type: string
        IPv4Address:
          type: string
        IPv6Address:
          type: string
        MacAddress:
          type: string
        Name:
          type: string
      description: EndpointResource contains network resources allocated and used
        for a container in a network
      example:
        EndpointID: EndpointID
        IPv6Address: IPv6Address
        MacAddress: MacAddress
        IPv4Address: IPv4Address
        Name: Name
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    EndpointSettings:
      type: object
      properties:
        Aliases:
          type: array
          items:
            type: string
        DriverOpts:
          type: object
          additionalProperties:
            type: string
        EndpointID:
          type: string
        Gateway:
          type: string
        GlobalIPv6Address:
          type: string
        GlobalIPv6PrefixLen:
          type: integer
          format: int64
        IPAMConfig:
          $ref: '#/components/schemas/EndpointIPAMConfig'
        IPAddress:
          type: string
        IPPrefixLen:
          type: integer
          format: int64
        IPv6Gateway:
          type: string
        Links:
          type: array
          items:
            type: string
        MacAddress:
          type: string
        NetworkID:
          type: string
          description: Operational data
      description: EndpointSettings stores the network endpoint details
      example:
        GlobalIPv6Address: GlobalIPv6Address
        GlobalIPv6PrefixLen: 6
        IPPrefixLen: 3
        Aliases:
        - Aliases
        - Aliases
        MacAddress: MacAddress
        NetworkID: NetworkID
        IPAMConfig:
          LinkLocalIPs:
          - LinkLocalIPs
          - LinkLocalIPs
          IPv6Address: IPv6Address
          IPv4Address: IPv4Address
        DriverOpts:
          key: DriverOpts
        Gateway: Gateway
        EndpointID: EndpointID
        Links:
        - Links
        - Links
        IPv6Gateway: IPv6Gateway
        IPAddress: IPAddress
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/network
    ErrorResponse:
      title: ErrorResponse Represents an error.
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: The error message.
          x-go-name: Message
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    FileMode:
      title: A FileMode represents a file's mode and permission bits.
      type: integer
      description: |-
        The bits have the same definition on all systems, so that
        information about files can be moved from one system
        to another portably. Not all bits apply to all systems.
        The only required bit is ModeDir for directories.
      format: uint32
      x-go-package: os
    GraphDriverData:
      title: GraphDriverData Information about a container's graph driver.
      required:
      - Data
      - Name
      type: object
      properties:
        Data:
          type: object
          additionalProperties:
            type: string
          description: data
        Name:
          type: string
          description: name
      example:
        Data:
          key: Data
        Name: Name
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    HardwareAddr:
      title: A HardwareAddr represents a physical hardware address.
      type: array
      items:
        type: integer
        format: uint8
      x-go-package: net
      x-schema-name: HardwareAddr
    Health:
      type: object
      properties:
        FailingStreak:
          type: integer
          format: int64
        Log:
          type: array
          items:
            $ref: '#/components/schemas/HealthcheckResult'
        Status:
          type: string
      description: Health stores information about the container's healthcheck results
      example:
        Status: Status
        Log:
        - Start: 2000-01-23T04:56:07.000+00:00
          ExitCode: 7
          Output: Output
          End: 2000-01-23T04:56:07.000+00:00
        - Start: 2000-01-23T04:56:07.000+00:00
          ExitCode: 7
          Output: Output
          End: 2000-01-23T04:56:07.000+00:00
        FailingStreak: 8
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    HealthCheckLog:
      type: object
      properties:
        End:
          type: string
          description: End time as a string
        ExitCode:
          type: integer
          description: Exitcode is 0 or 1
          format: int64
        Output:
          type: string
          description: Output is the stdout/stderr from the healthcheck command
        Start:
          type: string
          description: Start time as string
      description: HealthCheckLog describes the results of a single healthcheck
      example:
        Start: Start
        ExitCode: 6
        Output: Output
        End: End
      x-go-package: github.com/containers/podman/libpod/define
    HealthCheckResults:
      type: object
      properties:
        FailingStreak:
          type: integer
          description: FailingStreak is the number of consecutive failed healthchecks
          format: int64
        Log:
          type: array
          description: Log describes healthcheck attempts and results
          items:
            $ref: '#/components/schemas/HealthCheckLog'
        Status:
          type: string
          description: Status healthy or unhealthy
      description: HealthCheckResults describes the results/logs from a healthcheck
      example:
        Status: Status
        Log:
        - Start: Start
          ExitCode: 6
          Output: Output
          End: End
        - Start: Start
          ExitCode: 6
          Output: Output
          End: End
        FailingStreak: 6
      x-go-package: github.com/containers/podman/libpod/define
    HealthConfig:
      title: HealthConfig holds configuration settings for the HEALTHCHECK feature.
      type: object
      properties:
        Interval:
          $ref: '#/components/schemas/Duration'
        Retries:
          type: integer
          description: |-
            Retries is the number of consecutive failures needed to consider a container as unhealthy.
            Zero means inherit.
          format: int64
        StartPeriod:
          $ref: '#/components/schemas/Duration'
        Test:
          type: array
          description: |-
            Test is the test to perform to check that the container is healthy.
            An empty slice means to inherit the default.
            The options are:
            {} : inherit healthcheck
            {"NONE"} : disable healthcheck
            {"CMD", args...} : exec arguments directly
            {"CMD-SHELL", command} : run command with system's default shell
          items:
            type: string
        Timeout:
          $ref: '#/components/schemas/Duration'
      example:
        Test:
        - Test
        - Test
        Retries: 6
        Timeout: null
        Interval: 0
        StartPeriod: null
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/container
    HealthcheckResult:
      type: object
      properties:
        End:
          type: string
          format: date-time
        ExitCode:
          type: integer
          format: int64
        Output:
          type: string
        Start:
          type: string
          format: date-time
      description: HealthcheckResult stores information about a single run of a healthcheck
        probe
      example:
        Start: 2000-01-23T04:56:07.000+00:00
        ExitCode: 7
        Output: Output
        End: 2000-01-23T04:56:07.000+00:00
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    History:
      title: History describes the history of a layer.
      type: object
      properties:
        author:
          type: string
          description: Author is the author of the build point.
          x-go-name: Author
        comment:
          type: string
          description: Comment is a custom message set when creating the layer.
          x-go-name: Comment
        created:
          type: string
          description: Created is the combined date and time at which the layer was
            created, formatted as defined by RFC 3339, section 5.6.
          format: date-time
          x-go-name: Created
        created_by:
          type: string
          description: CreatedBy is the command which created the layer.
          x-go-name: CreatedBy
        empty_layer:
          type: boolean
          description: EmptyLayer is used to mark if the history item created a filesystem
            diff.
          x-go-name: EmptyLayer
      example:
        author: author
        created: 2000-01-23T04:56:07.000+00:00
        empty_layer: true
        comment: comment
        created_by: created_by
      x-go-package: github.com/containers/podman/vendor/github.com/opencontainers/image-spec/specs-go/v1
    HistoryResponseItem:
      required:
      - Comment
      - Created
      - CreatedBy
      - Id
      - Size
      - Tags
      type: object
      properties:
        Comment:
          type: string
          description: comment
        Created:
          type: integer
          description: created
          format: int64
        CreatedBy:
          type: string
          description: created by
        Id:
          type: string
          description: Id
          x-go-name: ID
        Size:
          type: integer
          description: size
          format: int64
        Tags:
          type: array
          description: tags
          items:
            type: string
      description: HistoryResponseItem individual image layer information in response
        to ImageHistory operation
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/image
    HostConfig:
      title: HostConfig the non-portable Config structure of a container.
      type: object
      properties:
        AutoRemove:
          type: boolean
        Binds:
          type: array
          description: Applicable to all platforms
          items:
            type: string
        BlkioDeviceReadBps:
          type: array
          items:
            $ref: '#/components/schemas/ThrottleDevice'
        BlkioDeviceReadIOps:
          type: array
          items:
            $ref: '#/components/schemas/ThrottleDevice'
        BlkioDeviceWriteBps:
          type: array
          items:
            $ref: '#/components/schemas/ThrottleDevice'
        BlkioDeviceWriteIOps:
          type: array
          items:
            $ref: '#/components/schemas/ThrottleDevice'
        BlkioWeight:
          type: integer
          format: uint16
        BlkioWeightDevice:
          type: array
          items:
            $ref: '#/components/schemas/WeightDevice'
        CapAdd:
          $ref: '#/components/schemas/StrSlice'
        CapDrop:
          $ref: '#/components/schemas/StrSlice'
        Cgroup:
          $ref: '#/components/schemas/CgroupSpec'
        CgroupParent:
          type: string
          description: Applicable to UNIX platforms
        CgroupnsMode:
          $ref: '#/components/schemas/CgroupnsMode'
        ConsoleSize:
          type: array
          description: Applicable to Windows
          items:
            type: integer
            format: uint64
        ContainerIDFile:
          type: string
        CpuCount:
          type: integer
          description: Applicable to Windows
          format: int64
          x-go-name: CPUCount
        CpuPercent:
          type: integer
          format: int64
          x-go-name: CPUPercent
        CpuPeriod:
          type: integer
          format: int64
          x-go-name: CPUPeriod
        CpuQuota:
          type: integer
          format: int64
          x-go-name: CPUQuota
        CpuRealtimePeriod:
          type: integer
          format: int64
          x-go-name: CPURealtimePeriod
        CpuRealtimeRuntime:
          type: integer
          format: int64
          x-go-name: CPURealtimeRuntime
        CpuShares:
          type: integer
          description: Applicable to all platforms
          format: int64
          x-go-name: CPUShares
        CpusetCpus:
          type: string
        CpusetMems:
          type: string
        DeviceCgroupRules:
          type: array
          items:
            type: string
        DeviceRequests:
          type: array
          items:
            $ref: '#/components/schemas/DeviceRequest'
        Devices:
          type: array
          items:
            $ref: '#/components/schemas/DeviceMapping'
        Dns:
          type: array
          items:
            type: string
          x-go-name: DNS
        DnsOptions:
          type: array
          items:
            type: string
          x-go-name: DNSOptions
        DnsSearch:
          type: array
          items:
            type: string
          x-go-name: DNSSearch
        ExtraHosts:
          type: array
          items:
            type: string
        GroupAdd:
          type: array
          items:
            type: string
        IOMaximumBandwidth:
          type: integer
          format: uint64
        IOMaximumIOps:
          type: integer
          format: uint64
        Init:
          type: boolean
          description: Run a custom init inside the container, if null, use the daemon's
            configured settings
        IpcMode:
          $ref: '#/components/schemas/IpcMode'
        Isolation:
          $ref: '#/components/schemas/Isolation'
        KernelMemory:
          type: integer
          format: int64
        KernelMemoryTCP:
          type: integer
          format: int64
        Links:
          type: array
          items:
            type: string
        LogConfig:
          $ref: '#/components/schemas/LogConfig'
        MaskedPaths:
          type: array
          description: MaskedPaths is the list of paths to be masked inside the container
            (this overrides the default set of paths)
          items:
            type: string
        Memory:
          type: integer
          format: int64
        MemoryReservation:
          type: integer
          format: int64
        MemorySwap:
          type: integer
          format: int64
        MemorySwappiness:
          type: integer
          format: int64
        Mounts:
          type: array
          description: Mounts specs used by the container
          items:
            $ref: '#/components/schemas/Mount'
        NanoCpus:
          type: integer
          format: int64
          x-go-name: NanoCPUs
        NetworkMode:
          $ref: '#/components/schemas/NetworkMode'
        OomKillDisable:
          type: boolean
        OomScoreAdj:
          type: integer
          format: int64
        PidMode:
          $ref: '#/components/schemas/PidMode'
        PidsLimit:
          type: integer
          format: int64
        PortBindings:
          $ref: '#/components/schemas/PortMap'
        Privileged:
          type: boolean
        PublishAllPorts:
          type: boolean
        ReadonlyPaths:
          type: array
          description: ReadonlyPaths is the list of paths to be set as read-only inside
            the container (this overrides the default set of paths)
          items:
            type: string
        ReadonlyRootfs:
          type: boolean
        RestartPolicy:
          $ref: '#/components/schemas/RestartPolicy'
        Runtime:
          type: string
        SecurityOpt:
          type: array
          items:
            type: string
        ShmSize:
          type: integer
          format: int64
        StorageOpt:
          type: object
          additionalProperties:
            type: string
        Sysctls:
          type: object
          additionalProperties:
            type: string
        Tmpfs:
          type: object
          additionalProperties:
            type: string
        UTSMode:
          $ref: '#/components/schemas/UTSMode'
        Ulimits:
          type: array
          items:
            $ref: '#/components/schemas/Ulimit'
        UsernsMode:
          $ref: '#/components/schemas/UsernsMode'
        VolumeDriver:
          type: string
        VolumesFrom:
          type: array
          items:
            type: string
      description: |-
        Here, "non-portable" means "dependent of the host we are running on".
        Portable information *should* appear in Config.
      example:
        ReadonlyRootfs: true
        StorageOpt:
          key: StorageOpt
        BlkioWeightDevice:
        - Path: Path
          Weight: 2
        - Path: Path
          Weight: 2
        DnsOptions:
        - DnsOptions
        - DnsOptions
        Memory: 5
        CpuPeriod: 2
        Dns:
        - Dns
        - Dns
        PortBindings:
          key:
          - HostIp: HostIp
            HostPort: HostPort
          - HostIp: HostIp
            HostPort: HostPort
        VolumesFrom:
        - VolumesFrom
        - VolumesFrom
        MaskedPaths:
        - MaskedPaths
        - MaskedPaths
        Devices:
        - CgroupPermissions: CgroupPermissions
          PathInContainer: PathInContainer
          PathOnHost: PathOnHost
        - CgroupPermissions: CgroupPermissions
          PathInContainer: PathInContainer
          PathOnHost: PathOnHost
        MemorySwappiness: 6
        BlkioWeight: 5
        CgroupnsMode: CgroupnsMode
        Init: true
        Runtime: Runtime
        DeviceCgroupRules:
        - DeviceCgroupRules
        - DeviceCgroupRules
        UsernsMode: UsernsMode
        Ulimits:
        - Hard: 1
          Soft: 2
          Name: Name
        - Hard: 1
          Soft: 2
          Name: Name
        CpusetCpus: CpusetCpus
        MemoryReservation: 9
        Mounts:
        - destination: destination
          options:
          - options
          - options
          source: source
          type: type
        - destination: destination
          options:
          - options
          - options
          source: source
          type: type
        ExtraHosts:
        - ExtraHosts
        - ExtraHosts
        BlkioDeviceWriteIOps:
        - null
        - null
        ReadonlyPaths:
        - ReadonlyPaths
        - ReadonlyPaths
        UTSMode: UTSMode
        Cgroup: Cgroup
        CpuQuota: 4
        CpuRealtimeRuntime: 1
        DnsSearch:
        - DnsSearch
        - DnsSearch
        CpuShares: 1
        ContainerIDFile: ContainerIDFile
        OomScoreAdj: 9
        KernelMemory: 1
        LogConfig:
          path: path
          driver: driver
          options:
            key: options
        DeviceRequests:
        - DeviceIDs:
          - DeviceIDs
          - DeviceIDs
          Options:
            key: Options
          Capabilities:
          - - Capabilities
            - Capabilities
          - - Capabilities
            - Capabilities
          Driver: Driver
          Count: 1
        - DeviceIDs:
          - DeviceIDs
          - DeviceIDs
          Options:
            key: Options
          Capabilities:
          - - Capabilities
            - Capabilities
          - - Capabilities
            - Capabilities
          Driver: Driver
          Count: 1
        OomKillDisable: true
        IOMaximumBandwidth: 6
        Privileged: true
        Sysctls:
          key: Sysctls
        GroupAdd:
        - GroupAdd
        - GroupAdd
        AutoRemove: true
        KernelMemoryTCP: 4
        CpuPercent: 3
        ConsoleSize:
        - 7
        - 7
        IOMaximumIOps: 7
        CapAdd: null
        VolumeDriver: VolumeDriver
        CapDrop: null
        CpuCount: 9
        PublishAllPorts: true
        Tmpfs:
          key: Tmpfs
        CpuRealtimePeriod: 7
        IpcMode: IpcMode
        Binds:
        - Binds
        - Binds
        CpusetMems: CpusetMems
        BlkioDeviceWriteBps:
        - null
        - null
        RestartPolicy:
          MaximumRetryCount: 3
          Name: Name
        NetworkMode: NetworkMode
        PidMode: PidMode
        BlkioDeviceReadBps:
        - Path: Path
          Rate: 5
        - Path: Path
          Rate: 5
        CgroupParent: CgroupParent
        NanoCpus: 8
        MemorySwap: 9
        Isolation: Isolation
        Links:
        - Links
        - Links
        PidsLimit: 6
        BlkioDeviceReadIOps:
        - null
        - null
        SecurityOpt:
        - SecurityOpt
        - SecurityOpt
        ShmSize: 6
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/container
    HostInfo:
      type: object
      properties:
        arch:
          type: string
          x-go-name: Arch
        buildahVersion:
          type: string
          x-go-name: BuildahVersion
        cgroupManager:
          type: string
          x-go-name: CgroupManager
        cgroupVersion:
          type: string
          x-go-name: CGroupsVersion
        conmon:
          $ref: '#/components/schemas/ConmonInfo'
        cpus:
          type: integer
          format: int64
          x-go-name: CPUs
        distribution:
          $ref: '#/components/schemas/DistributionInfo'
        eventLogger:
          type: string
          x-go-name: EventLogger
        hostname:
          type: string
          x-go-name: Hostname
        idMappings:
          $ref: '#/components/schemas/IDMappings'
        kernel:
          type: string
          x-go-name: Kernel
        linkmode:
          type: string
          x-go-name: Linkmode
        memFree:
          type: integer
          format: int64
          x-go-name: MemFree
        memTotal:
          type: integer
          format: int64
          x-go-name: MemTotal
        ociRuntime:
          $ref: '#/components/schemas/OCIRuntimeInfo'
        os:
          type: string
          x-go-name: OS
        remoteSocket:
          $ref: '#/components/schemas/RemoteSocket'
        rootless:
          type: boolean
          x-go-name: Rootless
        runtimeInfo:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          x-go-name: RuntimeInfo
        slirp4netns:
          $ref: '#/components/schemas/SlirpInfo'
        swapFree:
          type: integer
          format: int64
          x-go-name: SwapFree
        swapTotal:
          type: integer
          format: int64
          x-go-name: SwapTotal
        uptime:
          type: string
          x-go-name: Uptime
      description: HostInfo describes the libpod host
      example:
        swapFree: 7
        memFree: 5
        rootless: true
        buildahVersion: buildahVersion
        linkmode: linkmode
        os: os
        cpus: 0
        kernel: kernel
        memTotal: 2
        swapTotal: 9
        remoteSocket:
          path: path
          exists: true
        distribution:
          distribution: distribution
          version: version
        idMappings:
          uidmap:
          - null
          - null
          gidmap:
          - size: 5
            container_id: 6
            host_id: 1
          - size: 5
            container_id: 6
            host_id: 1
        eventLogger: eventLogger
        uptime: uptime
        cgroupVersion: cgroupVersion
        cgroupManager: cgroupManager
        hostname: hostname
        conmon:
          path: path
          package: package
          version: version
        ociRuntime:
          path: path
          package: package
          name: name
          version: version
        arch: arch
        runtimeInfo:
          key: {}
        slirp4netns:
          package: package
          version: version
          executable: executable
      x-go-package: github.com/containers/podman/libpod/define
    IDMap:
      type: object
      properties:
        container_id:
          type: integer
          format: int64
          x-go-name: ContainerID
        host_id:
          type: integer
          format: int64
          x-go-name: HostID
        size:
          type: integer
          format: int64
          x-go-name: Size
      description: |-
        IDMap contains a single entry for user namespace range remapping. An array
        of IDMap entries represents the structure that will be provided to the Linux
        kernel for creating a user namespace.
      example:
        size: 5
        container_id: 6
        host_id: 1
      x-go-package: github.com/containers/podman/vendor/github.com/containers/storage/pkg/idtools
    IDMappingOptions:
      type: object
      properties:
        AutoUserNs:
          type: boolean
        AutoUserNsOpts:
          $ref: '#/components/schemas/AutoUserNsOptions'
        GIDMap:
          type: array
          items:
            $ref: '#/components/schemas/IDMap'
        HostGIDMapping:
          type: boolean
        HostUIDMapping:
          type: boolean
          description: |-
            UIDMap and GIDMap are used for setting up a layer's root filesystem
            for use inside of a user namespace where ID mapping is being used.
            If HostUIDMapping/HostGIDMapping is true, no mapping of the
            respective type will be used.  Otherwise, if UIDMap and/or GIDMap
            contain at least one mapping, one or both will be used.  By default,
            if neither of those conditions apply, if the layer has a parent
            layer, the parent layer's mapping will be used, and if it does not
            have a parent layer, the mapping which was passed to the Store
            object when it was initialized will be used.
        UIDMap:
          type: array
          items:
            $ref: '#/components/schemas/IDMap'
      description: |-
        IDMappingOptions are used for specifying how ID mapping should be set up for
        a layer or container.
      x-go-package: github.com/containers/podman/vendor/github.com/containers/storage
    IDMappings:
      type: object
      properties:
        gidmap:
          type: array
          items:
            $ref: '#/components/schemas/IDMap'
          x-go-name: GIDMap
        uidmap:
          type: array
          items:
            $ref: '#/components/schemas/IDMap'
          x-go-name: UIDMap
      description: IDMappings describe the GID and UID mappings
      example:
        uidmap:
        - null
        - null
        gidmap:
        - size: 5
          container_id: 6
          host_id: 1
        - size: 5
          container_id: 6
          host_id: 1
      x-go-package: github.com/containers/podman/libpod/define
    IDResponse:
      type: object
      properties:
        Id:
          type: string
          description: ID
          x-go-name: ID
      x-go-package: github.com/containers/podman/pkg/api/handlers
    IP:
      title: |-
        An IP is a single IP address, a slice of bytes.
        Functions in this package accept either 4-byte (IPv4)
        or 16-byte (IPv6) slices as input.
      type: array
      description: |-
        Note that in this documentation, referring to an
        IP address as an IPv4 address or an IPv6 address
        is a semantic property of the address, not just the
        length of the byte slice: a 16-byte slice can still
        be an IPv4 address.
      items:
        type: integer
        format: uint8
      x-go-package: net
      x-schema-name: IP
    IPAM:
      type: object
      properties:
        Config:
          type: array
          items:
            $ref: '#/components/schemas/IPAMConfig'
        Driver:
          type: string
        Options:
          type: object
          additionalProperties:
            type: string
      description: IPAM represents IP Address Management
      example:
        Options:
          key: Options
        Config:
        - AuxiliaryAddresses:
            key: AuxiliaryAddresses
          Gateway: Gateway
          Subnet: Subnet
          IPRange: IPRange
        - AuxiliaryAddresses:
            key: AuxiliaryAddresses
          Gateway: Gateway
          Subnet: Subnet
          IPRange: IPRange
        Driver: Driver
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/network
    IPAMConfig:
      type: object
      properties:
        AuxiliaryAddresses:
          type: object
          additionalProperties:
            type: string
          x-go-name: AuxAddress
        Gateway:
          type: string
        IPRange:
          type: string
        Subnet:
          type: string
      description: IPAMConfig represents IPAM configurations
      example:
        AuxiliaryAddresses:
          key: AuxiliaryAddresses
        Gateway: Gateway
        Subnet: Subnet
        IPRange: IPRange
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/network
    IPMask:
      title: |-
        An IPMask is a bitmask that can be used to manipulate
        IP addresses for IP addressing and routing.
      type: array
      description: See type IPNet and func ParseCIDR for details.
      items:
        type: integer
        format: uint8
      x-go-package: net
      x-schema-name: IPMask
    IPNet:
      title: An IPNet represents an IP network.
      type: object
      properties:
        IP:
          $ref: '#/components/schemas/IP'
        Mask:
          $ref: '#/components/schemas/IPMask'
      x-go-package: net
    IdResponse:
      required:
      - Id
      type: object
      properties:
        Id:
          type: string
          description: The id of the newly created object.
          x-go-name: ID
      description: IDResponse Response to an API call that returns just an Id
      x-go-name: IDResponse
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    ImageConfig:
      title: ImageConfig defines the execution parameters which should be used as
        a base when running a container using an image.
      type: object
      properties:
        Cmd:
          type: array
          description: Cmd defines the default arguments to the entrypoint of the
            container.
          items:
            type: string
        Entrypoint:
          type: array
          description: Entrypoint defines a list of arguments to use as the command
            to execute when the container starts.
          items:
            type: string
        Env:
          type: array
          description: Env is a list of environment variables to be used in a container.
          items:
            type: string
        ExposedPorts:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          description: ExposedPorts a set of ports to expose from a container running
            this image.
        Labels:
          type: object
          additionalProperties:
            type: string
          description: Labels contains arbitrary metadata for the container.
        StopSignal:
          type: string
          description: StopSignal contains the system call signal that will be sent
            to the container to exit.
        User:
          type: string
          description: User defines the username or UID which the process in the container
            should run as.
        Volumes:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          description: Volumes is a set of directories describing where the process
            is likely write data specific to a container instance.
        WorkingDir:
          type: string
          description: WorkingDir sets the current working directory of the entrypoint
            process in the container.
      example:
        WorkingDir: WorkingDir
        StopSignal: StopSignal
        User: User
        Volumes:
          key: {}
        Entrypoint:
        - Entrypoint
        - Entrypoint
        Labels:
          key: Labels
        Cmd:
        - Cmd
        - Cmd
        Env:
        - Env
        - Env
        ExposedPorts:
          key: {}
      x-go-package: github.com/containers/podman/vendor/github.com/opencontainers/image-spec/specs-go/v1
    ImageDeleteResponse:
      type: object
      properties:
        deleted:
          type: string
          x-go-name: Deleted
        untagged:
          type: array
          items:
            type: string
          x-go-name: Untagged
      description: |-
        ImageDeleteResponse is the response for removing an image from storage and containers
        what was untagged vs actually removed
      example:
        deleted: deleted
        untagged:
        - untagged
        - untagged
      x-go-package: github.com/containers/podman/libpod/image
    ImageDeleteResponseItem:
      type: object
      properties:
        Deleted:
          type: string
          description: The image ID of an image that was deleted
        Untagged:
          type: string
          description: The image ID of an image that was untagged
      description: ImageDeleteResponseItem image delete response item
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    ImageImportReport:
      type: object
      properties:
        Id:
          type: string
      example:
        Id: Id
      x-go-package: github.com/containers/podman/pkg/domain/entities
    ImageLayer:
      type: object
      x-go-package: github.com/containers/podman/pkg/api/handlers
    ImageLoadReport:
      type: object
      properties:
        Names:
          type: array
          items:
            type: string
      example:
        Names:
        - Names
        - Names
      x-go-package: github.com/containers/podman/pkg/domain/entities
    ImageMetadata:
      type: object
      properties:
        LastTagTime:
          type: string
          format: date-time
      description: ImageMetadata contains engine-local data about the image
      example:
        LastTagTime: 2000-01-23T04:56:07.000+00:00
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    ImageStore:
      type: object
      properties:
        number:
          type: integer
          format: int64
          x-go-name: Number
      description: |-
        ImageStore describes the image store.  Right now only the number
        of images present
      example:
        number: 1
      x-go-package: github.com/containers/podman/libpod/define
    ImageSummary:
      required:
      - Containers
      - Created
      - Id
      - Labels
      - ParentId
      - RepoDigests
      - RepoTags
      - SharedSize
      - Size
      - VirtualSize
      type: object
      properties:
        Containers:
          type: integer
          description: containers
          format: int64
        Created:
          type: integer
          description: created
          format: int64
        Id:
          type: string
          description: Id
          x-go-name: ID
        Labels:
          type: object
          additionalProperties:
            type: string
          description: labels
        ParentId:
          type: string
          description: parent Id
          x-go-name: ParentID
        RepoDigests:
          type: array
          description: repo digests
          items:
            type: string
        RepoTags:
          type: array
          description: repo tags
          items:
            type: string
        SharedSize:
          type: integer
          description: shared size
          format: int64
        Size:
          type: integer
          description: size
          format: int64
        VirtualSize:
          type: integer
          description: virtual size
          format: int64
      description: ImageSummary image summary
      example:
        ParentId: ParentId
        RepoDigests:
        - RepoDigests
        - RepoDigests
        SharedSize: 1
        VirtualSize: 5
        RepoTags:
        - RepoTags
        - RepoTags
        Size: 5
        Containers: 0
        Labels:
          key: Labels
        Id: Id
        Created: 6
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    Info:
      type: object
      properties:
        host:
          $ref: '#/components/schemas/HostInfo'
        registries:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          x-go-name: Registries
        store:
          $ref: '#/components/schemas/StoreInfo'
        version:
          $ref: '#/components/schemas/Version'
      description: |-
        Info is the overall struct that describes the host system
        running libpod/podman
      example:
        host:
          swapFree: 7
          memFree: 5
          rootless: true
          buildahVersion: buildahVersion
          linkmode: linkmode
          os: os
          cpus: 0
          kernel: kernel
          memTotal: 2
          swapTotal: 9
          remoteSocket:
            path: path
            exists: true
          distribution:
            distribution: distribution
            version: version
          idMappings:
            uidmap:
            - null
            - null
            gidmap:
            - size: 5
              container_id: 6
              host_id: 1
            - size: 5
              container_id: 6
              host_id: 1
          eventLogger: eventLogger
          uptime: uptime
          cgroupVersion: cgroupVersion
          cgroupManager: cgroupManager
          hostname: hostname
          conmon:
            path: path
            package: package
            version: version
          ociRuntime:
            path: path
            package: package
            name: name
            version: version
          arch: arch
          runtimeInfo:
            key: {}
          slirp4netns:
            package: package
            version: version
            executable: executable
        registries:
          key: {}
        store:
          graphStatus:
            key: graphStatus
          configFile: configFile
          containerStore:
            running: 4
            number: 3
            paused: 2
            stopped: 7
          graphRoot: graphRoot
          graphDriverName: graphDriverName
          volumePath: volumePath
          graphOptions:
            key: {}
          imageStore:
            number: 1
          runRoot: runRoot
        version:
          GitCommit: GitCommit
          APIVersion: APIVersion
          Version: Version
          Built: 1
          OsArch: OsArch
          BuiltTime: BuiltTime
          GoVersion: GoVersion
      x-go-package: github.com/containers/podman/libpod/define
    InspectAdditionalNetwork:
      type: object
      properties:
        AdditionalMACAddresses:
          type: array
          description: |-
            AdditionalMacAddresses is a set of additional MAC Addresses beyond
            the first. CNI may configure more than one interface for a single
            network, which can cause this.
          items:
            type: string
          x-go-name: AdditionalMacAddresses
        DriverOpts:
          type: object
          additionalProperties:
            type: string
          description: |-
            DriverOpts is presently unused and maintained exclusively for
            compatibility.
        EndpointID:
          type: string
          description: EndpointID is unused, maintained exclusively for compatibility.
        Gateway:
          type: string
          description: Gateway is the IP address of the gateway this network will
            use.
        GlobalIPv6Address:
          type: string
          description: GlobalIPv6Address is the global-scope IPv6 Address for this
            network.
        GlobalIPv6PrefixLen:
          type: integer
          description: GlobalIPv6PrefixLen is the length of the subnet mask of this
            network.
          format: int64
        IPAMConfig:
          type: object
          additionalProperties:
            type: string
          description: |-
            IPAMConfig is presently unused and maintained exclusively for
            compatibility.
        IPAddress:
          type: string
          description: IPAddress is the IP address for this network.
        IPPrefixLen:
          type: integer
          description: IPPrefixLen is the length of the subnet mask of this network.
          format: int64
        IPv6Gateway:
          type: string
          description: IPv6Gateway is the IPv6 gateway this network will use.
        Links:
          type: array
          description: |-
            Links is presently unused and maintained exclusively for
            compatibility.
          items:
            type: string
        MacAddress:
          type: string
          description: MacAddress is the MAC address for the interface in this network.
        NetworkID:
          type: string
          description: Name of the network we're connecting to.
        SecondaryIPAddresses:
          type: array
          description: |-
            SecondaryIPAddresses is a list of extra IP Addresses that the
            container has been assigned in this network.
          items:
            type: string
        SecondaryIPv6Addresses:
          type: array
          description: |-
            SecondaryIPv6Addresses is a list of extra IPv6 Addresses that the
            container has been assigned in this networ.
          items:
            type: string
      description: |-
        InspectAdditionalNetwork holds information about non-default CNI networks the
        container has been connected to.
        As with InspectNetworkSettings, many fields are unused and maintained only
        for compatibility with Docker.
      example:
        GlobalIPv6Address: GlobalIPv6Address
        GlobalIPv6PrefixLen: 5
        IPPrefixLen: 6
        AdditionalMACAddresses:
        - AdditionalMACAddresses
        - AdditionalMACAddresses
        MacAddress: MacAddress
        NetworkID: NetworkID
        IPAMConfig:
          key: IPAMConfig
        DriverOpts:
          key: DriverOpts
        Gateway: Gateway
        EndpointID: EndpointID
        Links:
        - Links
        - Links
        SecondaryIPv6Addresses:
        - SecondaryIPv6Addresses
        - SecondaryIPv6Addresses
        IPv6Gateway: IPv6Gateway
        SecondaryIPAddresses:
        - SecondaryIPAddresses
        - SecondaryIPAddresses
        IPAddress: IPAddress
      x-go-package: github.com/containers/podman/libpod/define
    InspectBlkioThrottleDevice:
      type: object
      properties:
        Path:
          type: string
          description: Path is the path to the device this applies to.
        Rate:
          type: integer
          description: |-
            Rate is the maximum rate. It is in either bytes per second or iops
            per second, determined by where it is used - documentation will
            indicate which is appropriate.
          format: uint64
      description: |-
        InspectBlkioThrottleDevice holds information about a speed cap for a device
        node. This cap applies to a specific operation (read, write, etc) on the given
        node.
      example:
        Path: Path
        Rate: 5
      x-go-package: github.com/containers/podman/libpod/define
    InspectBlkioWeightDevice:
      type: object
      properties:
        Path:
          type: string
          description: Path is the path to the device this applies to.
        Weight:
          type: integer
          description: |-
            Weight is the relative weight the scheduler will use when scheduling
            I/O.
          format: uint16
      description: |-
        InspectBlkioWeightDevice holds information about the relative weight
        of an individual device node. Weights are used in the I/O scheduler to give
        relative priority to some accesses.
      example:
        Path: Path
        Weight: 2
      x-go-package: github.com/containers/podman/libpod/define
    InspectContainerConfig:
      type: object
      properties:
        Annotations:
          type: object
          additionalProperties:
            type: string
          description: Container annotations
        AttachStderr:
          type: boolean
          description: Unused, at present
        AttachStdin:
          type: boolean
          description: Unused, at present
        AttachStdout:
          type: boolean
          description: Unused, at present
        Cmd:
          type: array
          description: Container command
          items:
            type: string
        CreateCommand:
          type: array
          description: |-
            CreateCommand is the full command plus arguments of the process the
            container has been created with.
          items:
            type: string
        Domainname:
          type: string
          description: Container domain name - unused at present
          x-go-name: DomainName
        Entrypoint:
          type: string
          description: Container entrypoint
        Env:
          type: array
          description: Container environment variables
          items:
            type: string
        Healthcheck:
          $ref: '#/components/schemas/Schema2HealthConfig'
        Hostname:
          type: string
          description: Container hostname
        Image:
          type: string
          description: Container image
        Labels:
          type: object
          additionalProperties:
            type: string
          description: Container labels
        OnBuild:
          type: string
          description: On-build arguments - presently unused. More of Buildah's domain.
        OpenStdin:
          type: boolean
          description: Whether the container leaves STDIN open
        StdinOnce:
          type: boolean
          description: |-
            Whether STDIN is only left open once.
            Presently not supported by Podman, unused.
        StopSignal:
          type: integer
          description: Container stop signal
          format: uint64
        SystemdMode:
          type: boolean
          description: |-
            SystemdMode is whether the container is running in systemd mode. In
            systemd mode, the container configuration is customized to optimize
            running systemd in the container.
        Timezone:
          type: string
          description: |-
            Timezone is the timezone inside the container.
            Local means it has the same timezone as the host machine
        Tty:
          type: boolean
          description: Whether the container creates a TTY
        Umask:
          type: string
          description: Umask is the umask inside the container.
        User:
          type: string
          description: User the container was launched with
        Volumes:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          description: Unused, at present. I've never seen this field populated.
        WorkingDir:
          type: string
          description: Container working directory
      description: |-
        InspectContainerConfig holds further data about how a container was initially
        configured.
      example:
        Timezone: Timezone
        Umask: Umask
        StopSignal: 1
        CreateCommand:
        - CreateCommand
        - CreateCommand
        User: User
        Entrypoint: Entrypoint
        AttachStderr: true
        SystemdMode: true
        Hostname: Hostname
        Labels:
          key: Labels
        OpenStdin: true
        Healthcheck:
          Test:
          - Test
          - Test
          Retries: 6
          Timeout: null
          Interval: 0
          StartPeriod: null
        Env:
        - Env
        - Env
        Image: Image
        StdinOnce: true
        AttachStdout: true
        WorkingDir: WorkingDir
        Annotations:
          key: Annotations
        Volumes:
          key: {}
        OnBuild: OnBuild
        AttachStdin: true
        Domainname: Domainname
        Tty: true
        Cmd:
        - Cmd
        - Cmd
      x-go-package: github.com/containers/podman/libpod/define
    InspectContainerHostConfig:
      type: object
      properties:
        AutoRemove:
          type: boolean
          description: |-
            AutoRemove is whether the container will be automatically removed on
            exiting.
            It is not handled directly within libpod and is stored in an
            annotation.
        Binds:
          type: array
          description: |-
            Binds contains an array of user-added mounts.
            Both volume mounts and named volumes are included.
            Tmpfs mounts are NOT included.
            In 'docker inspect' this is separated into 'Binds' and 'Mounts' based
            on how a mount was added. We do not make this distinction and do not
            include a Mounts field in inspect.
            Format: <src>:<destination>[:<comma-separated options>]
          items:
            type: string
        BlkioDeviceReadBps:
          type: array
          description: |-
            BlkioDeviceReadBps is an array of I/O throttle parameters for
            individual device nodes.
            This specifically sets read rate cap in bytes per second for device
            nodes.
            As with BlkioWeightDevice, we pull the path from /sys/dev, and we
            don't guarantee the path will be identical to the original (though
            the node will be).
          items:
            $ref: '#/components/schemas/InspectBlkioThrottleDevice'
        BlkioDeviceReadIOps:
          type: array
          description: |-
            BlkioDeviceReadIOps is an array of I/O throttle parameters for
            individual device nodes.
            This specifically sets the read rate cap in iops per second for
            device nodes.
            As with BlkioWeightDevice, we pull the path from /sys/dev, and we
            don't guarantee the path will be identical to the original (though
            the node will be).
          items:
            $ref: '#/components/schemas/InspectBlkioThrottleDevice'
        BlkioDeviceWriteBps:
          type: array
          description: |-
            BlkioDeviceWriteBps is an array of I/O throttle parameters for
            individual device nodes.
            this specifically sets write rate cap in bytes per second for device
            nodes.
            as with BlkioWeightDevice, we pull the path from /sys/dev, and we
            don't guarantee the path will be identical to the original (though
            the node will be).
          items:
            $ref: '#/components/schemas/InspectBlkioThrottleDevice'
        BlkioDeviceWriteIOps:
          type: array
          description: |-
            BlkioDeviceWriteIOps is an array of I/O throttle parameters for
            individual device nodes.
            This specifically sets the write rate cap in iops per second for
            device nodes.
            As with BlkioWeightDevice, we pull the path from /sys/dev, and we
            don't guarantee the path will be identical to the original (though
            the node will be).
          items:
            $ref: '#/components/schemas/InspectBlkioThrottleDevice'
        BlkioWeight:
          type: integer
          description: |-
            BlkioWeight indicates the I/O resources allocated to the container.
            It is a relative weight in the scheduler for assigning I/O time
            versus other CGroups.
          format: uint16
        BlkioWeightDevice:
          type: array
          description: |-
            BlkioWeightDevice is an array of I/O resource priorities for
            individual device nodes.
            Unfortunately, the spec only stores the device's Major/Minor numbers
            and not the path, which is used here.
            Fortunately, the kernel provides an interface for retrieving the path
            of a given node by major:minor at /sys/dev/. However, the exact path
            in use may not be what was used in the original CLI invocation -
            though it is guaranteed that the device node will be the same, and
            using the given path will be functionally identical.
          items:
            $ref: '#/components/schemas/InspectBlkioWeightDevice'
        CapAdd:
          type: array
          description: |-
            CapAdd is a list of capabilities added to the container.
            It is not directly stored by Libpod, and instead computed from the
            capabilities listed in the container's spec, compared against a set
            of default capabilities.
          items:
            type: string
        CapDrop:
          type: array
          description: |-
            CapDrop is a list of capabilities removed from the container.
            It is not directly stored by libpod, and instead computed from the
            capabilities listed in the container's spec, compared against a set
            of default capabilities.
          items:
            type: string
        Cgroup:
          type: string
          description: |-
            Cgroup contains the container's cgroup. It is presently not
            populated.
            TODO.
        CgroupConf:
          type: object
          additionalProperties:
            type: string
          description: CgroupConf is the configuration for cgroup v2.
        CgroupMode:
          type: string
          description: |-
            CgroupMode is the configuration of the container's cgroup namespace.
            Populated as follows:
            private - a cgroup namespace has been created
            host - No cgroup namespace created
            container:<id> - Using another container's cgroup namespace
            ns:<path> - A path to a cgroup namespace has been specified
        CgroupParent:
          type: string
          description: |-
            CgroupParent is the CGroup parent of the container.
            Only set if not default.
        Cgroups:
          type: string
          description: |-
            Cgroups contains the container's CGroup mode.
            Allowed values are "default" (container is creating CGroups) and
            "disabled" (container is not creating CGroups).
            This is Libpod-specific and not included in `docker inspect`.
        ConsoleSize:
          type: array
          description: |-
            ConsoleSize is an array of 2 integers showing the size of the
            container's console.
            It is only set if the container is creating a terminal.
            TODO.
          items:
            type: integer
            format: uint64
        ContainerIDFile:
          type: string
          description: |-
            ContainerIDFile is a file created during container creation to hold
            the ID of the created container.
            This is not handled within libpod and is stored in an annotation.
        CpuCount:
          type: integer
          description: CpuCount is Windows-only and not presently implemented.
          format: uint64
        CpuPercent:
          type: integer
          description: CpuPercent is Windows-only and not presently implemented.
          format: uint64
        CpuPeriod:
          type: integer
          description: |-
            CpuPeriod is the length of a CPU period in microseconds.
            It relates directly to CpuQuota.
          format: uint64
        CpuQuota:
          type: integer
          description: |-
            CpuPeriod is the amount of time (in microseconds) that a container
            can use the CPU in every CpuPeriod.
          format: int64
        CpuRealtimePeriod:
          type: integer
          description: |-
            CpuRealtimePeriod is the length of time (in microseconds) of the CPU
            realtime period. If set to 0, no time will be allocated to realtime
            tasks.
          format: uint64
        CpuRealtimeRuntime:
          type: integer
          description: |-
            CpuRealtimeRuntime is the length of time (in microseconds) allocated
            for realtime tasks within every CpuRealtimePeriod.
          format: int64
        CpuShares:
          type: integer
          description: |-
            CpuShares indicates the CPU resources allocated to the container.
            It is a relative weight in the scheduler for assigning CPU time
            versus other CGroups.
          format: uint64
        CpusetCpus:
          type: string
          description: |-
            CpusetCpus is the is the set of CPUs that the container will execute
            on. Formatted as `0-3` or `0,2`. Default (if unset) is all CPUs.
        CpusetMems:
          type: string
          description: |-
            CpusetMems is the set of memory nodes the container will use.
            Formatted as `0-3` or `0,2`. Default (if unset) is all memory nodes.
        Devices:
          type: array
          description: |-
            Devices is a list of device nodes that will be added to the
            container.
            These are stored in the OCI spec only as type, major, minor while we
            display the host path. We convert this with /sys/dev, but we cannot
            guarantee that the host path will be identical - only that the actual
            device will be.
          items:
            $ref: '#/components/schemas/InspectDevice'
        DiskQuota:
          type: integer
          description: |-
            DiskQuota is the maximum amount of disk space the container may use
            (in bytes).
            Presently not populated.
            TODO.
          format: uint64
        Dns:
          type: array
          description: |-
            Dns is a list of DNS nameservers that will be added to the
            container's resolv.conf
          items:
            type: string
        DnsOptions:
          type: array
          description: |-
            DnsOptions is a list of DNS options that will be set in the
            container's resolv.conf
          items:
            type: string
        DnsSearch:
          type: array
          description: |-
            DnsSearch is a list of DNS search domains that will be set in the
            container's resolv.conf
          items:
            type: string
        ExtraHosts:
          type: array
          description: |-
            ExtraHosts contains hosts that will be aded to the container's
            etc/hosts.
          items:
            type: string
        GroupAdd:
          type: array
          description: |-
            GroupAdd contains groups that the user inside the container will be
            added to.
          items:
            type: string
        IOMaximumBandwidth:
          type: integer
          description: IOMaximumBandwidth is Windows-only and not presently implemented.
          format: uint64
        IOMaximumIOps:
          type: integer
          description: IOMaximumIOps is Windows-only and not presently implemented.
          format: uint64
        Init:
          type: boolean
          description: Init indicates whether the container has an init mounted into
            it.
        IpcMode:
          type: string
          description: |-
            IpcMode represents the configuration of the container's IPC
            namespace.
            Populated as follows:
            "" (empty string) - Default, an IPC namespace will be created
            host - No IPC namespace created
            container:<id> - Using another container's IPC namespace
            ns:<path> - A path to an IPC namespace has been specified
        Isolation:
          type: string
          description: |-
            Isolation is presently unused and provided solely for Docker
            compatibility.
        KernelMemory:
          type: integer
          description: |-
            KernelMemory is the maximum amount of memory the kernel will devote
            to the container.
          format: int64
        Links:
          type: array
          description: Links is unused, and provided purely for Docker compatibility.
          items:
            type: string
        LogConfig:
          $ref: '#/components/schemas/InspectLogConfig'
        Memory:
          type: integer
          description: |-
            Memory indicates the memory resources allocated to the container.
            This is the limit (in bytes) of RAM the container may use.
          format: int64
        MemoryReservation:
          type: integer
          description: |-
            MemoryReservation is the reservation (soft limit) of memory available
            to the container. Soft limits are warnings only and can be exceeded.
          format: int64
        MemorySwap:
          type: integer
          description: |-
            MemorySwap is the total limit for all memory available to the
            container, including swap. 0 indicates that there is no limit to the
            amount of memory available.
          format: int64
        MemorySwappiness:
          type: integer
          description: |-
            MemorySwappiness is the willingness of the kernel to page container
            memory to swap. It is an integer from 0 to 100, with low numbers
            being more likely to be put into swap.
            1, the default, will not set swappiness and use the system defaults.
          format: int64
        NanoCpus:
          type: integer
          description: |-
            NanoCpus indicates number of CPUs allocated to the container.
            It is an integer where one full CPU is indicated by 1000000000 (one
            billion).
            Thus, 2.5 CPUs (fractional portions of CPUs are allowed) would be
            2500000000 (2.5 billion).
            In 'docker inspect' this is set exclusively of two further options in
            the output (CpuPeriod and CpuQuota) which are both used to implement
            this functionality.
            We can't distinguish here, so if CpuQuota is set to the default of
            100000, we will set both CpuQuota, CpuPeriod, and NanoCpus. If
            CpuQuota is not the default, we will not set NanoCpus.
          format: int64
        NetworkMode:
          type: string
          description: |-
            NetworkMode is the configuration of the container's network
            namespace.
            Populated as follows:
            default - A network namespace is being created and configured via CNI
            none - A network namespace is being created, not configured via CNI
            host - No network namespace created
            container:<id> - Using another container's network namespace
            ns:<path> - A path to a network namespace has been specified
        OomKillDisable:
          type: boolean
          description: |-
            OomKillDisable indicates whether the kernel OOM killer is disabled
            for the container.
        OomScoreAdj:
          type: integer
          description: |-
            OOMScoreAdj is an adjustment that will be made to the container's OOM
            score.
          format: int64
        PidMode:
          type: string
          description: |-
            PidMode represents the configuration of the container's PID
            namespace.
            Populated as follows:
            "" (empty string) - Default, a PID namespace will be created
            host - No PID namespace created
            container:<id> - Using another container's PID namespace
            ns:<path> - A path to a PID namespace has been specified
        PidsLimit:
          type: integer
          description: |-
            PidsLimit is the maximum number of PIDs what may be created within
            the container. 0, the default, indicates no limit.
          format: int64
        PortBindings:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/InspectHostPort'
          description: |-
            PortBindings contains the container's port bindings.
            It is formatted as map[string][]InspectHostPort.
            The string key here is formatted as <integer port number>/<protocol>
            and represents the container port. A single container port may be
            bound to multiple host ports (on different IPs).
        Privileged:
          type: boolean
          description: |-
            Privileged indicates whether the container is running with elevated
            privileges.
            This has a very specific meaning in the Docker sense, so it's very
            difficult to decode from the spec and config, and so is stored as an
            annotation.
        PublishAllPorts:
          type: boolean
          description: |-
            PublishAllPorts indicates whether image ports are being published.
            This is not directly stored in libpod and is saved as an annotation.
        ReadonlyRootfs:
          type: boolean
          description: ReadonlyRootfs is whether the container will be mounted read-only.
        RestartPolicy:
          $ref: '#/components/schemas/InspectRestartPolicy'
        Runtime:
          type: string
          description: |-
            Runtime is provided purely for Docker compatibility.
            It is set unconditionally to "oci" as Podman does not presently
            support non-OCI runtimes.
        SecurityOpt:
          type: array
          description: |-
            SecurityOpt is a list of security-related options that are set in the
            container.
          items:
            type: string
        ShmSize:
          type: integer
          description: ShmSize is the size of the container's SHM device.
          format: int64
        Tmpfs:
          type: object
          additionalProperties:
            type: string
          description: |-
            Tmpfs is a list of tmpfs filesystems that will be mounted into the
            container.
            It is a map of destination path to options for the mount.
        UTSMode:
          type: string
          description: |-
            UTSMode represents the configuration of the container's UID
            namespace.
            Populated as follows:
            "" (empty string) - Default, a UTS namespace will be created
            host - no UTS namespace created
            container:<id> - Using another container's UTS namespace
            ns:<path> - A path to a UTS namespace has been specified
        Ulimits:
          type: array
          description: Ulimits is a set of ulimits that will be set within the container.
          items:
            $ref: '#/components/schemas/InspectUlimit'
        UsernsMode:
          type: string
          description: |-
            UsernsMode represents the configuration of the container's user
            namespace.
            When running rootless, a user namespace is created outside of libpod
            to allow some privileged operations. This will not be reflected here.
            Populated as follows:
            "" (empty string) - No user namespace will be created
            private - The container will be run in a user namespace
            container:<id> - Using another container's user namespace
            ns:<path> - A path to a user namespace has been specified
            TODO Rootless has an additional 'keep-id' option, presently not
            reflected here.
        VolumeDriver:
          type: string
          description: |-
            VolumeDriver is presently unused and is retained for Docker
            compatibility.
        VolumesFrom:
          type: array
          description: |-
            VolumesFrom is a list of containers which this container uses volumes
            from. This is not handled directly within libpod and is stored in an
            annotation.
            It is formatted as an array of container names and IDs.
          items:
            type: string
      description: |-
        InspectContainerHostConfig holds information used when the container was
        created.
        It's very much a Docker-specific struct, retained (mostly) as-is for
        compatibility. We fill individual fields as best as we can, inferring as much
        as possible from the spec and container config.
        Some things cannot be inferred. These will be populated by spec annotations
        (if available).
        Field names are fixed for compatibility and cannot be changed.
        As such, silence lint warnings about them.
        nolint
      example:
        ReadonlyRootfs: true
        DiskQuota: 1
        BlkioWeightDevice:
        - Path: Path
          Weight: 2
        - Path: Path
          Weight: 2
        DnsOptions:
        - DnsOptions
        - DnsOptions
        Memory: 4
        CpuPeriod: 2
        Dns:
        - Dns
        - Dns
        PortBindings:
          key:
          - HostIp: HostIp
            HostPort: HostPort
          - HostIp: HostIp
            HostPort: HostPort
        VolumesFrom:
        - VolumesFrom
        - VolumesFrom
        Devices:
        - CgroupPermissions: CgroupPermissions
          PathInContainer: PathInContainer
          PathOnHost: PathOnHost
        - CgroupPermissions: CgroupPermissions
          PathInContainer: PathInContainer
          PathOnHost: PathOnHost
        MemorySwappiness: 9
        BlkioWeight: 5
        CgroupMode: CgroupMode
        Init: true
        Runtime: Runtime
        UsernsMode: UsernsMode
        Ulimits:
        - Hard: 6
          Soft: 1
          Name: Name
        - Hard: 6
          Soft: 1
          Name: Name
        CpusetCpus: CpusetCpus
        MemoryReservation: 5
        ExtraHosts:
        - ExtraHosts
        - ExtraHosts
        BlkioDeviceWriteIOps:
        - null
        - null
        Cgroups: Cgroups
        UTSMode: UTSMode
        Cgroup: Cgroup
        CpuQuota: 4
        CpuRealtimeRuntime: 1
        DnsSearch:
        - DnsSearch
        - DnsSearch
        CgroupConf:
          key: CgroupConf
        CpuShares: 1
        ContainerIDFile: ContainerIDFile
        OomScoreAdj: 8
        KernelMemory: 1
        LogConfig:
          Type: Type
          Config:
            key: Config
        OomKillDisable: true
        IOMaximumBandwidth: 6
        Privileged: true
        GroupAdd:
        - GroupAdd
        - GroupAdd
        AutoRemove: true
        CpuPercent: 3
        ConsoleSize:
        - 7
        - 7
        IOMaximumIOps: 7
        CapAdd:
        - CapAdd
        - CapAdd
        VolumeDriver: VolumeDriver
        CapDrop:
        - CapDrop
        - CapDrop
        CpuCount: 9
        PublishAllPorts: true
        Tmpfs:
          key: Tmpfs
        CpuRealtimePeriod: 7
        IpcMode: IpcMode
        Binds:
        - Binds
        - Binds
        CpusetMems: CpusetMems
        BlkioDeviceWriteBps:
        - null
        - null
        RestartPolicy:
          MaximumRetryCount: 6
          Name: Name
        NetworkMode: NetworkMode
        PidMode: PidMode
        BlkioDeviceReadBps:
        - Path: Path
          Rate: 5
        - Path: Path
          Rate: 5
        CgroupParent: CgroupParent
        NanoCpus: 6
        MemorySwap: 9
        Isolation: Isolation
        Links:
        - Links
        - Links
        PidsLimit: 9
        BlkioDeviceReadIOps:
        - null
        - null
        SecurityOpt:
        - SecurityOpt
        - SecurityOpt
        ShmSize: 3
      x-go-package: github.com/containers/podman/libpod/define
    InspectContainerState:
      type: object
      properties:
        ConmonPid:
          type: integer
          format: int64
        Dead:
          type: boolean
        Error:
          type: string
        ExitCode:
          type: integer
          format: int32
        FinishedAt:
          type: string
          format: date-time
        Healthcheck:
          $ref: '#/components/schemas/HealthCheckResults'
        OOMKilled:
          type: boolean
        OciVersion:
          type: string
        Paused:
          type: boolean
        Pid:
          type: integer
          format: int64
        Restarting:
          type: boolean
        Running:
          type: boolean
        StartedAt:
          type: string
          format: date-time
        Status:
          type: string
      description: |-
        InspectContainerState provides a detailed record of a container's current
        state. It is returned as part of InspectContainerData.
        As with InspectContainerData, many portions of this struct are matched to
        Docker, but here we see more fields that are unused (nonsensical in the
        context of Libpod).
      example:
        Status: Status
        Dead: true
        ExitCode: 7
        ConmonPid: 0
        Error: Error
        OciVersion: OciVersion
        Pid: 0
        Healthcheck:
          Status: Status
          Log:
          - Start: Start
            ExitCode: 6
            Output: Output
            End: End
          - Start: Start
            ExitCode: 6
            Output: Output
            End: End
          FailingStreak: 6
        Restarting: true
        Running: true
        FinishedAt: 2000-01-23T04:56:07.000+00:00
        OOMKilled: true
        StartedAt: 2000-01-23T04:56:07.000+00:00
        Paused: true
      x-go-package: github.com/containers/podman/libpod/define
    InspectDevice:
      title: InspectDevice is a single device that will be mounted into the container.
      type: object
      properties:
        CgroupPermissions:
          type: string
          description: |-
            CgroupPermissions is the permissions of the mounted device.
            Presently not populated.
            TODO.
        PathInContainer:
          type: string
          description: PathInContainer is the path of the device within the container.
        PathOnHost:
          type: string
          description: PathOnHost is the path of the device on the host.
      example:
        CgroupPermissions: CgroupPermissions
        PathInContainer: PathInContainer
        PathOnHost: PathOnHost
      x-go-package: github.com/containers/podman/libpod/define
    InspectHostPort:
      type: object
      properties:
        HostIp:
          type: string
          description: |-
            IP on the host we are bound to. "" if not specified (binding to all
            IPs).
          x-go-name: HostIP
        HostPort:
          type: string
          description: |-
            Port on the host we are bound to. No special formatting - just an
            integer stuffed into a string.
      description: |-
        InspectHostPort provides information on a port on the host that a container's
        port is bound to.
      example:
        HostIp: HostIp
        HostPort: HostPort
      x-go-package: github.com/containers/podman/libpod/define
    InspectLogConfig:
      type: object
      properties:
        Config:
          type: object
          additionalProperties:
            type: string
        Type:
          type: string
      description: |-
        InspectLogConfig holds information about a container's configured log driver
        and is presently unused. It is retained for Docker compatibility.
      example:
        Type: Type
        Config:
          key: Config
      x-go-package: github.com/containers/podman/libpod/define
    InspectMount:
      type: object
      properties:
        Destination:
          type: string
          description: |-
            The destination directory for the volume. Specified as a path within
            the container, as it would be passed into the OCI runtime.
        Driver:
          type: string
          description: The driver used for the named volume. Empty for bind mounts.
        Mode:
          type: string
          description: |-
            Contains SELinux :z/:Z mount options. Unclear what, if anything, else
            goes in here.
        Name:
          type: string
          description: The name of the volume. Empty for bind mounts.
        Options:
          type: array
          description: |-
            All remaining mount options. Additional data, not present in the
            original output.
          items:
            type: string
        Propagation:
          type: string
          description: |-
            Mount propagation for the mount. Can be empty if not specified, but
            is always printed - no omitempty.
        RW:
          type: boolean
          description: Whether the volume is read-write
        Source:
          type: string
          description: The source directory for the volume.
        Type:
          type: string
          description: |-
            Whether the mount is a volume or bind mount. Allowed values are
            "volume" and "bind".
      description: |-
        InspectMount provides a record of a single mount in a container. It contains
        fields for both named and normal volumes. Only user-specified volumes will be
        included, and tmpfs volumes are not included even if the user specified them.
      example:
        Destination: Destination
        Options:
        - Options
        - Options
        Type: Type
        Propagation: Propagation
        RW: true
        Mode: Mode
        Driver: Driver
        Source: Source
        Name: Name
      x-go-package: github.com/containers/podman/libpod/define
    InspectNetworkSettings:
      type: object
      properties:
        AdditionalMACAddresses:
          type: array
          description: |-
            AdditionalMacAddresses is a set of additional MAC Addresses beyond
            the first. CNI may configure more than one interface for a single
            network, which can cause this.
          items:
            type: string
          x-go-name: AdditionalMacAddresses
        Bridge:
          type: string
        EndpointID:
          type: string
          description: EndpointID is unused, maintained exclusively for compatibility.
        Gateway:
          type: string
          description: Gateway is the IP address of the gateway this network will
            use.
        GlobalIPv6Address:
          type: string
          description: GlobalIPv6Address is the global-scope IPv6 Address for this
            network.
        GlobalIPv6PrefixLen:
          type: integer
          description: GlobalIPv6PrefixLen is the length of the subnet mask of this
            network.
          format: int64
        HairpinMode:
          type: boolean
        IPAddress:
          type: string
          description: IPAddress is the IP address for this network.
        IPPrefixLen:
          type: integer
          description: IPPrefixLen is the length of the subnet mask of this network.
          format: int64
        IPv6Gateway:
          type: string
          description: IPv6Gateway is the IPv6 gateway this network will use.
        LinkLocalIPv6Address:
          type: string
        LinkLocalIPv6PrefixLen:
          type: integer
          format: int64
        MacAddress:
          type: string
          description: MacAddress is the MAC address for the interface in this network.
        Networks:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/InspectAdditionalNetwork'
          description: |-
            Networks contains information on non-default CNI networks this
            container has joined.
            It is a map of network name to network information.
        Ports:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/InspectHostPort'
        SandboxID:
          type: string
        SandboxKey:
          type: string
        SecondaryIPAddresses:
          type: array
          description: |-
            SecondaryIPAddresses is a list of extra IP Addresses that the
            container has been assigned in this network.
          items:
            type: string
        SecondaryIPv6Addresses:
          type: array
          description: |-
            SecondaryIPv6Addresses is a list of extra IPv6 Addresses that the
            container has been assigned in this networ.
          items:
            type: string
      description: |-
        InspectNetworkSettings holds information about the network settings of the
        container.
        Many fields are maintained only for compatibility with `docker inspect` and
        are unused within Libpod.
      example:
        HairpinMode: true
        Networks:
          key:
            GlobalIPv6Address: GlobalIPv6Address
            GlobalIPv6PrefixLen: 5
            IPPrefixLen: 6
            AdditionalMACAddresses:
            - AdditionalMACAddresses
            - AdditionalMACAddresses
            MacAddress: MacAddress
            NetworkID: NetworkID
            IPAMConfig:
              key: IPAMConfig
            DriverOpts:
              key: DriverOpts
            Gateway: Gateway
            EndpointID: EndpointID
            Links:
            - Links
            - Links
            SecondaryIPv6Addresses:
            - SecondaryIPv6Addresses
            - SecondaryIPv6Addresses
            IPv6Gateway: IPv6Gateway
            SecondaryIPAddresses:
            - SecondaryIPAddresses
            - SecondaryIPAddresses
            IPAddress: IPAddress
        SandboxKey: SandboxKey
        GlobalIPv6Address: GlobalIPv6Address
        Ports:
          key:
          - null
          - null
        GlobalIPv6PrefixLen: 2
        IPPrefixLen: 6
        AdditionalMACAddresses:
        - AdditionalMACAddresses
        - AdditionalMACAddresses
        MacAddress: MacAddress
        SandboxID: SandboxID
        LinkLocalIPv6Address: LinkLocalIPv6Address
        LinkLocalIPv6PrefixLen: 6
        Gateway: Gateway
        EndpointID: EndpointID
        SecondaryIPv6Addresses:
        - SecondaryIPv6Addresses
        - SecondaryIPv6Addresses
        IPv6Gateway: IPv6Gateway
        SecondaryIPAddresses:
        - SecondaryIPAddresses
        - SecondaryIPAddresses
        IPAddress: IPAddress
        Bridge: Bridge
      x-go-package: github.com/containers/podman/libpod/define
    InspectPodContainerInfo:
      title: InspectPodContainerInfo contains information on a container in a pod.
      type: object
      properties:
        Id:
          type: string
          description: ID is the ID of the container.
          x-go-name: ID
        Name:
          type: string
          description: Name is the name of the container.
        State:
          type: string
          description: State is the current status of the container.
      example:
        State: State
        Id: Id
        Name: Name
      x-go-package: github.com/containers/podman/libpod/define
    InspectPodInfraConfig:
      type: object
      properties:
        DNSOption:
          type: array
          description: |-
            DNSOption is a set of DNS options that will be used by the infra
            container's resolv.conf and shared with the remainder of the pod.
          items:
            type: string
        DNSSearch:
          type: array
          description: |-
            DNSSearch is a set of DNS search domains that will be used by the
            infra container's resolv.conf and shared with the remainder of the
            pod.
          items:
            type: string
        DNSServer:
          type: array
          description: |-
            DNSServer is a set of DNS Servers that will be used by the infra
            container's resolv.conf and shared with the remainder of the pod.
          items:
            type: string
        HostAdd:
          type: array
          description: |-
            HostAdd adds a number of hosts to the infra container's resolv.conf
            which will be shared with the rest of the pod.
          items:
            type: string
        HostNetwork:
          type: boolean
          description: |-
            HostNetwork is whether the infra container (and thus the whole pod)
            will use the host's network and not create a network namespace.
        NetworkOptions:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: NetworkOptions are additional options for each network
        Networks:
          type: array
          description: Networks is a list of CNI networks the pod will join.
          items:
            type: string
        NoManageHosts:
          type: boolean
          description: |-
            NoManageHosts indicates that the pod will not manage /etc/hosts and
            instead each container will handle their own.
        NoManageResolvConf:
          type: boolean
          description: |-
            NoManageResolvConf indicates that the pod will not manage resolv.conf
            and instead each container will handle their own.
        PortBindings:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/InspectHostPort'
          description: |-
            PortBindings are ports that will be forwarded to the infra container
            and then shared with the pod.
        StaticIP:
          $ref: '#/components/schemas/IP'
        StaticMAC:
          $ref: '#/components/schemas/HardwareAddr'
      description: |-
        InspectPodInfraConfig contains the configuration of the pod's infra
        container.
      example:
        NetworkOptions:
          key:
          - NetworkOptions
          - NetworkOptions
        Networks:
        - Networks
        - Networks
        DNSOption:
        - DNSOption
        - DNSOption
        NoManageHosts: true
        PortBindings:
          key:
          - HostIp: HostIp
            HostPort: HostPort
          - HostIp: HostIp
            HostPort: HostPort
        DNSServer:
        - DNSServer
        - DNSServer
        StaticIP:
        - 0
        - 0
        DNSSearch:
        - DNSSearch
        - DNSSearch
        HostNetwork: true
        HostAdd:
        - HostAdd
        - HostAdd
        NoManageResolvConf: true
        StaticMAC:
        - 6
        - 6
      x-go-package: github.com/containers/podman/libpod/define
    InspectRestartPolicy:
      title: InspectRestartPolicy holds information about the container's restart
        policy.
      type: object
      properties:
        MaximumRetryCount:
          type: integer
          description: |-
            MaximumRetryCount is the maximum number of retries allowed if the
            "on-failure" restart policy is in use. Not used if "on-failure" is
            not set.
          format: uint64
        Name:
          type: string
          description: |-
            Name contains the container's restart policy.
            Allowable values are "no" or "" (take no action),
            "on-failure" (restart on non-zero exit code, with an optional max
            retry count), and "always" (always restart on container stop, unless
            explicitly requested by API).
            Note that this is NOT actually a name of any sort - the poor naming
            is for Docker compatibility.
      example:
        MaximumRetryCount: 6
        Name: Name
      x-go-package: github.com/containers/podman/libpod/define
    InspectUlimit:
      title: InspectUlimit is a ulimit that will be applied to the container.
      type: object
      properties:
        Hard:
          type: integer
          description: Hard is the hard limit that will be applied.
          format: uint64
        Name:
          type: string
          description: Name is the name (type) of the ulimit.
        Soft:
          type: integer
          description: Soft is the soft limit that will be applied.
          format: uint64
      example:
        Hard: 6
        Soft: 1
        Name: Name
      x-go-package: github.com/containers/podman/libpod/define
    IpcConfig:
      type: object
      properties:
        IpcMode:
          $ref: '#/components/schemas/IpcMode'
      description: IpcConfig configures the ipc namespace for the container
      x-go-package: github.com/containers/podman/pkg/spec
    IpcMode:
      title: IpcMode represents the container ipc stack.
      type: string
      x-go-package: github.com/containers/podman/pkg/namespaces
    Isolation:
      type: string
      description: |-
        Isolation represents the isolation technology of a container. The supported
        values are platform specific
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/container
    LibpodContainersPruneReport:
      type: object
      properties:
        error:
          type: string
          x-go-name: PruneError
        id:
          type: string
          x-go-name: ID
        space:
          type: integer
          format: int64
          x-go-name: SpaceReclaimed
      example:
        id: id
        error: error
        space: 0
      x-go-package: github.com/containers/podman/pkg/api/handlers
    LibpodImagesPullReport:
      type: object
      properties:
        error:
          type: string
          description: Error contains text of errors from c/image
          x-go-name: Error
        id:
          type: string
          description: ID contains image id (retained for backwards compatibility)
          x-go-name: ID
        images:
          type: array
          description: Images contains the ID's of the images pulled
          items:
            type: string
          x-go-name: Images
        stream:
          type: string
          description: Stream used to provide output from c/image
          x-go-name: Stream
      example:
        images:
        - images
        - images
        stream: stream
        id: id
        error: error
      x-go-package: github.com/containers/podman/pkg/api/handlers
    LibpodImagesRemoveReport:
      type: object
      properties:
        Deleted:
          type: array
          description: Deleted images.
          items:
            type: string
        Errors:
          type: array
          description: Image removal requires is to return data and an error.
          items:
            type: string
        ExitCode:
          type: integer
          description: |-
            ExitCode describes the exit codes as described in the `podman rmi`
            man page.
          format: int64
        Untagged:
          type: array
          description: Untagged images. Can be longer than Deleted.
          items:
            type: string
      description: |-
        LibpodImagesRemoveReport is the return type for image removal via the rest
        api.
      example:
        Errors:
        - Errors
        - Errors
        ExitCode: 0
        Deleted:
        - Deleted
        - Deleted
        Untagged:
        - Untagged
        - Untagged
      x-go-package: github.com/containers/podman/pkg/api/handlers
    LinuxBlockIO:
      type: object
      properties:
        leafWeight:
          type: integer
          description: Specifies tasks' weight in the given cgroup while competing
            with the cgroup's child cgroups, CFQ scheduler only
          format: uint16
          x-go-name: LeafWeight
        throttleReadBpsDevice:
          type: array
          description: IO read rate limit per cgroup per device, bytes per second
          items:
            $ref: '#/components/schemas/LinuxThrottleDevice'
          x-go-name: ThrottleReadBpsDevice
        throttleReadIOPSDevice:
          type: array
          description: IO read rate limit per cgroup per device, IO per second
          items:
            $ref: '#/components/schemas/LinuxThrottleDevice'
          x-go-name: ThrottleReadIOPSDevice
        throttleWriteBpsDevice:
          type: array
          description: IO write rate limit per cgroup per device, bytes per second
          items:
            $ref: '#/components/schemas/LinuxThrottleDevice'
          x-go-name: ThrottleWriteBpsDevice
        throttleWriteIOPSDevice:
          type: array
          description: IO write rate limit per cgroup per device, IO per second
          items:
            $ref: '#/components/schemas/LinuxThrottleDevice'
          x-go-name: ThrottleWriteIOPSDevice
        weight:
          type: integer
          description: Specifies per cgroup weight
          format: uint16
          x-go-name: Weight
        weightDevice:
          type: array
          description: Weight per cgroup per device, can override BlkioWeight
          items:
            $ref: '#/components/schemas/LinuxWeightDevice'
          x-go-name: WeightDevice
      description: LinuxBlockIO for Linux cgroup 'blkio' resource management
      x-go-package: github.com/containers/podman/vendor/github.com/opencontainers/runtime-spec/specs-go
    LinuxCPU:
      type: object
      properties:
        cpus:
          type: string
          description: CPUs to use within the cpuset. Default is to use any CPU available.
          x-go-name: Cpus
        mems:
          type: string
          description: List of memory nodes in the cpuset. Default is to use any available
            memory node.
          x-go-name: Mems
        period:
          type: integer
          description: CPU period to be used for hardcapping (in usecs).
          format: uint64
          x-go-name: Period
        quota:
          type: integer
          description: CPU hardcap limit (in usecs). Allowed cpu time in a given period.
          format: int64
          x-go-name: Quota
        realtimePeriod:
          type: integer
          description: CPU period to be used for realtime scheduling (in usecs).
          format: uint64
          x-go-name: RealtimePeriod
        realtimeRuntime:
          type: integer
          description: How much time realtime scheduling may use (in usecs).
          format: int64
          x-go-name: RealtimeRuntime
        shares:
          type: integer
          description: CPU shares (relative weight (ratio) vs. other cgroups with
            cpu shares).
          format: uint64
          x-go-name: Shares
      description: LinuxCPU for Linux cgroup 'cpu' resource management
      x-go-package: github.com/containers/podman/vendor/github.com/opencontainers/runtime-spec/specs-go
    LinuxDevice:
      type: object
      properties:
        fileMode:
          $ref: '#/components/schemas/FileMode'
        gid:
          type: integer
          description: Gid of the device.
          format: uint32
          x-go-name: GID
        major:
          type: integer
          description: Major is the device's major number.
          format: int64
          x-go-name: Major
        minor:
          type: integer
          description: Minor is the device's minor number.
          format: int64
          x-go-name: Minor
        path:
          type: string
          description: Path to the device.
          x-go-name: Path
        type:
          type: string
          description: Device type, block, char, etc.
          x-go-name: Type
        uid:
          type: integer
          description: UID of the device.
          format: uint32
          x-go-name: UID
      description: LinuxDevice represents the mknod information for a Linux special
        device file
      x-go-package: github.com/containers/podman/vendor/github.com/opencontainers/runtime-spec/specs-go
    LinuxDeviceCgroup:
      type: object
      properties:
        access:
          type: string
          description: Cgroup access permissions format, rwm.
          x-go-name: Access
        allow:
          type: boolean
          description: Allow or deny
          x-go-name: Allow
        major:
          type: integer
          description: Major is the device's major number.
          format: int64
          x-go-name: Major
        minor:
          type: integer
          description: Minor is the device's minor number.
          format: int64
          x-go-name: Minor
        type:
          type: string
          description: Device type, block, char, etc.
          x-go-name: Type
      description: |-
        LinuxDeviceCgroup represents a device rule for the devices specified to
        the device controller
      x-go-package: github.com/containers/podman/vendor/github.com/opencontainers/runtime-spec/specs-go
    LinuxHugepageLimit:
      type: object
      properties:
        limit:
          type: integer
          description: Limit is the limit of "hugepagesize" hugetlb usage
          format: uint64
          x-go-name: Limit
        pageSize:
          type: string
          description: |-
            Pagesize is the hugepage size
            Format: "<size><unit-prefix>B' (e.g. 64KB, 2MB, 1GB, etc.)
          x-go-name: Pagesize
      description: LinuxHugepageLimit structure corresponds to limiting kernel hugepages
      x-go-package: github.com/containers/podman/vendor/github.com/opencontainers/runtime-spec/specs-go
    LinuxInterfacePriority:
      type: object
      properties:
        name:
          type: string
          description: Name is the name of the network interface
          x-go-name: Name
        priority:
          type: integer
          description: Priority for the interface
          format: uint32
          x-go-name: Priority
      description: LinuxInterfacePriority for network interfaces
      x-go-package: github.com/containers/podman/vendor/github.com/opencontainers/runtime-spec/specs-go
    LinuxMemory:
      type: object
      properties:
        disableOOMKiller:
          type: boolean
          description: DisableOOMKiller disables the OOM killer for out of memory
            conditions
          x-go-name: DisableOOMKiller
        kernel:
          type: integer
          description: Kernel memory limit (in bytes).
          format: int64
          x-go-name: Kernel
        kernelTCP:
          type: integer
          description: Kernel memory limit for tcp (in bytes)
          format: int64
          x-go-name: KernelTCP
        limit:
          type: integer
          description: Memory limit (in bytes).
          format: int64
          x-go-name: Limit
        reservation:
          type: integer
          description: Memory reservation or soft_limit (in bytes).
          format: int64
          x-go-name: Reservation
        swap:
          type: integer
          description: Total memory limit (memory + swap).
          format: int64
          x-go-name: Swap
        swappiness:
          type: integer
          description: How aggressive the kernel will swap memory pages.
          format: uint64
          x-go-name: Swappiness
        useHierarchy:
          type: boolean
          description: Enables hierarchical memory accounting
          x-go-name: UseHierarchy
      description: LinuxMemory for Linux cgroup 'memory' resource management
      x-go-package: github.com/containers/podman/vendor/github.com/opencontainers/runtime-spec/specs-go
    LinuxNetwork:
      type: object
      properties:
        classID:
          type: integer
          description: Set class identifier for container's network packets
          format: uint32
          x-go-name: ClassID
        priorities:
          type: array
          description: Set priority of network traffic for container
          items:
            $ref: '#/components/schemas/LinuxInterfacePriority'
          x-go-name: Priorities
      description: LinuxNetwork identification and priority configuration
      x-go-package: github.com/containers/podman/vendor/github.com/opencontainers/runtime-spec/specs-go
    LinuxPids:
      type: object
      properties:
        limit:
          type: integer
          description: Maximum number of PIDs. Default is "no limit".
          format: int64
          x-go-name: Limit
      description: LinuxPids for Linux cgroup 'pids' resource management (Linux 4.3)
      x-go-package: github.com/containers/podman/vendor/github.com/opencontainers/runtime-spec/specs-go
    LinuxRdma:
      type: object
      properties:
        hcaHandles:
          type: integer
          description: Maximum number of HCA handles that can be opened. Default is
            "no limit".
          format: uint32
          x-go-name: HcaHandles
        hcaObjects:
          type: integer
          description: Maximum number of HCA objects that can be created. Default
            is "no limit".
          format: uint32
          x-go-name: HcaObjects
      description: LinuxRdma for Linux cgroup 'rdma' resource management (Linux 4.11)
      x-go-package: github.com/containers/podman/vendor/github.com/opencontainers/runtime-spec/specs-go
    LinuxResources:
      type: object
      properties:
        blockIO:
          $ref: '#/components/schemas/LinuxBlockIO'
        cpu:
          $ref: '#/components/schemas/LinuxCPU'
        devices:
          type: array
          description: Devices configures the device allowlist.
          items:
            $ref: '#/components/schemas/LinuxDeviceCgroup'
          x-go-name: Devices
        hugepageLimits:
          type: array
          description: Hugetlb limit (in bytes)
          items:
            $ref: '#/components/schemas/LinuxHugepageLimit'
          x-go-name: HugepageLimits
        memory:
          $ref: '#/components/schemas/LinuxMemory'
        network:
          $ref: '#/components/schemas/LinuxNetwork'
        pids:
          $ref: '#/components/schemas/LinuxPids'
        rdma:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LinuxRdma'
          description: |-
            Rdma resource restriction configuration.
            Limits are a set of key value pairs that define RDMA resource limits,
            where the key is device name and value is resource limits.
          x-go-name: Rdma
        unified:
          type: object
          additionalProperties:
            type: string
          description: Unified resources.
          x-go-name: Unified
      description: LinuxResources has container runtime resource constraints
      x-go-package: github.com/containers/podman/vendor/github.com/opencontainers/runtime-spec/specs-go
    LinuxThrottleDevice:
      type: object
      properties:
        major:
          type: integer
          description: Major is the device's major number.
          format: int64
          x-go-name: Major
        minor:
          type: integer
          description: Minor is the device's minor number.
          format: int64
          x-go-name: Minor
        rate:
          type: integer
          description: Rate is the IO rate limit per cgroup per device
          format: uint64
          x-go-name: Rate
      description: LinuxThrottleDevice struct holds a `major:minor rate_per_second`
        pair
      x-go-package: github.com/containers/podman/vendor/github.com/opencontainers/runtime-spec/specs-go
    LinuxWeightDevice:
      type: object
      properties:
        leafWeight:
          type: integer
          description: LeafWeight is the bandwidth rate for the device while competing
            with the cgroup's child cgroups, CFQ scheduler only
          format: uint16
          x-go-name: LeafWeight
        major:
          type: integer
          description: Major is the device's major number.
          format: int64
          x-go-name: Major
        minor:
          type: integer
          description: Minor is the device's minor number.
          format: int64
          x-go-name: Minor
        weight:
          type: integer
          description: Weight is the bandwidth rate for the device.
          format: uint16
          x-go-name: Weight
      description: LinuxWeightDevice struct holds a `major:minor weight` pair for
        weightDevice
      x-go-package: github.com/containers/podman/vendor/github.com/opencontainers/runtime-spec/specs-go
    List:
      title: List is an interface for parsing, modifying lists of image manifests.
      type: object
      properties:
        Clone:
          $ref: '#/components/schemas/List'
        Instances:
          type: array
          description: Instances returns a list of the manifests that this list knows
            of, other than its own.
          items:
            $ref: '#/components/schemas/Digest'
        MIMEType:
          type: string
          description: MIMEType returns the MIME type of this particular manifest
            list.
      description: |-
        Callers can either use this abstract interface without understanding the details of the formats,
        or instantiate a specific implementation (e.g. manifest.OCI1Index) and access the public members
        directly.
      example:
        Instances:
        - Instances
        - Instances
        MIMEType: MIMEType
        Clone: null
      x-go-package: github.com/containers/podman/vendor/github.com/containers/image/v5/manifest
    ListContainer:
      type: object
      properties:
        Command:
          type: array
          description: Container command
          items:
            type: string
        Created:
          type: integer
          description: Container creation time
          format: int64
        CreatedAt:
          type: string
          description: Human readable container creation time.
        ExitCode:
          type: integer
          description: If container has exited, the return code from the command
          format: int32
        Exited:
          type: boolean
          description: If container has exited/stopped
        ExitedAt:
          type: integer
          description: Time container exited
          format: int64
        Id:
          type: string
          description: The unique identifier for the container
          x-go-name: ID
        Image:
          type: string
          description: Container image
        ImageID:
          type: string
          description: Container image ID
        IsInfra:
          type: boolean
          description: If this container is a Pod infra container
        Labels:
          type: object
          additionalProperties:
            type: string
          description: Labels for container
        Mounts:
          type: array
          description: User volume mounts
          items:
            type: string
        Names:
          type: array
          description: The names assigned to the container
          items:
            type: string
        Namespaces:
          $ref: '#/components/schemas/ListContainerNamespaces'
        Pid:
          type: integer
          description: The process id of the container
          format: int64
        Pod:
          type: string
          description: |-
            If the container is part of Pod, the Pod ID. Requires the pod
            boolean to be set
        PodName:
          type: string
          description: |-
            If the container is part of Pod, the Pod name. Requires the pod
            boolean to be set
        Ports:
          type: array
          description: Port mappings
          items:
            $ref: '#/components/schemas/PortMapping'
        Size:
          $ref: '#/components/schemas/ContainerSize'
        StartedAt:
          type: integer
          description: Time when container started
          format: int64
        State:
          type: string
          description: State of container
        Status:
          type: string
          description: Status is a human-readable approximation of a duration for
            json output
      description: Listcontainer describes a container suitable for listing
      example:
        Status: Status
        Namespaces:
          Mnt: Mnt
          User: User
          Uts: Uts
          Pidns: Pidns
          Cgroup: Cgroup
          Net: Net
          Ipc: Ipc
        Mounts:
        - Mounts
        - Mounts
        Pod: Pod
        Size:
          rootFsSize: 9
          rwSize: 3
        CreatedAt: CreatedAt
        ExitCode: 6
        Ports:
        - container_port: 5
          host_ip: host_ip
          protocol: protocol
          host_port: 2
          range: 7
        - container_port: 5
          host_ip: host_ip
          protocol: protocol
          host_port: 2
          range: 7
        Labels:
          key: Labels
        Pid: 5
        ExitedAt: 1
        Image: Image
        Created: 0
        Names:
        - Names
        - Names
        PodName: PodName
        Command:
        - Command
        - Command
        State: State
        Exited: true
        ImageID: ImageID
        IsInfra: true
        Id: Id
        StartedAt: 2
      x-go-package: github.com/containers/podman/pkg/domain/entities
    ListContainerNamespaces:
      type: object
      properties:
        Cgroup:
          type: string
          description: Cgroup namespace
        Ipc:
          type: string
          description: IPC namespace
          x-go-name: IPC
        Mnt:
          type: string
          description: Mount namespace
          x-go-name: MNT
        Net:
          type: string
          description: Network namespace
          x-go-name: NET
        Pidns:
          type: string
          description: PID namespace
          x-go-name: PIDNS
        User:
          type: string
          description: User namespace
        Uts:
          type: string
          description: UTS namespace
          x-go-name: UTS
      description: ListContainer Namespaces contains the identifiers of the container's
        Linux namespaces
      example:
        Mnt: Mnt
        User: User
        Uts: Uts
        Pidns: Pidns
        Cgroup: Cgroup
        Net: Net
        Ipc: Ipc
      x-go-package: github.com/containers/podman/pkg/domain/entities
    ListPodContainer:
      type: object
      properties:
        Id:
          type: string
        Names:
          type: string
        Status:
          type: string
      example:
        Names: Names
        Status: Status
        Id: Id
      x-go-package: github.com/containers/podman/pkg/domain/entities
    ListPodsReport:
      type: object
      properties:
        Cgroup:
          type: string
        Containers:
          type: array
          items:
            $ref: '#/components/schemas/ListPodContainer'
        Created:
          type: string
          format: date-time
        Id:
          type: string
        InfraId:
          type: string
        Labels:
          type: object
          additionalProperties:
            type: string
        Name:
          type: string
        Namespace:
          type: string
        Status:
          type: string
      example:
        Status: Status
        InfraId: InfraId
        Containers:
        - Names: Names
          Status: Status
          Id: Id
        - Names: Names
          Status: Status
          Id: Id
        Cgroup: Cgroup
        Labels:
          key: Labels
        Id: Id
        Namespace: Namespace
        Created: 2000-01-23T04:56:07.000+00:00
        Name: Name
      x-go-package: github.com/containers/podman/pkg/domain/entities
    ListRegistriesReport:
      type: object
      properties:
        Registries:
          type: array
          items:
            type: string
      description: |-
        ListRegistriesReport is the report when querying for a sorted list of
        registries which may be contacted during certain operations.
      x-go-package: github.com/containers/podman/pkg/domain/entities
    LogConfig:
      type: object
      properties:
        driver:
          type: string
          description: |-
            LogDriver is the container's log driver.
            Optional.
          x-go-name: Driver
        options:
          type: object
          additionalProperties:
            type: string
          description: |-
            A set of options to accompany the log driver.
            Optional.
          x-go-name: Options
        path:
          type: string
          description: |-
            LogPath is the path the container's logs will be stored at.
            Only available if LogDriver is set to "json-file" or "k8s-file".
            Optional.
          x-go-name: Path
      description: LogConfig describes the logging characteristics for a container
      example:
        path: path
        driver: driver
        options:
          key: options
      x-go-package: github.com/containers/podman/pkg/specgen
    ManifestAddOpts:
      type: object
      properties:
        all:
          type: boolean
          x-go-name: All
        annotation:
          type: object
          additionalProperties:
            type: string
          x-go-name: Annotation
        arch:
          type: string
          x-go-name: Arch
        features:
          type: array
          items:
            type: string
          x-go-name: Features
        images:
          type: array
          items:
            type: string
          x-go-name: Images
        os:
          type: string
          x-go-name: OS
        os_version:
          type: string
          x-go-name: OSVersion
        variant:
          type: string
          x-go-name: Variant
      description: Options for adding a manifest
      x-go-package: github.com/containers/podman/libpod/image
    Mount:
      title: Mount specifies a mount for a container.
      type: object
      properties:
        destination:
          type: string
          description: Destination is the absolute path where the mount will be placed
            in the container.
          x-go-name: Destination
        options:
          type: array
          description: Options are fstab style mount options.
          items:
            type: string
          x-go-name: Options
        source:
          type: string
          description: Source specifies the source path of the mount.
          x-go-name: Source
        type:
          type: string
          description: Type specifies the mount kind.
          x-go-name: Type
      example:
        destination: destination
        options:
        - options
        - options
        source: source
        type: type
      x-go-package: github.com/containers/podman/vendor/github.com/opencontainers/runtime-spec/specs-go
    MountPoint:
      title: MountPoint represents a mount point configuration inside the container.
      type: object
      properties:
        Destination:
          type: string
        Driver:
          type: string
        Mode:
          type: string
        Name:
          type: string
        Propagation:
          $ref: '#/components/schemas/Propagation'
        RW:
          type: boolean
        Source:
          type: string
        Type:
          $ref: '#/components/schemas/Type'
      description: This is used for reporting the mountpoints in use by a container.
      example:
        Destination: Destination
        Type: Type
        Propagation: Propagation
        RW: true
        Mode: Mode
        Driver: Driver
        Source: Source
        Name: Name
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    NamedVolume:
      type: object
      properties:
        Dest:
          type: string
          description: |-
            Destination to mount the named volume within the container. Must be
            an absolute path. Path will be created if it does not exist.
        Name:
          type: string
          description: |-
            Name is the name of the named volume to be mounted. May be empty.
            If empty, a new named volume with a pseudorandomly generated name
            will be mounted at the given destination.
        Options:
          type: array
          description: Options are options that the named volume will be mounted with.
          items:
            type: string
      description: |-
        NamedVolume holds information about a named volume that will be mounted into
        the container.
      x-go-package: github.com/containers/podman/pkg/specgen
    Namespace:
      type: object
      properties:
        nsmode:
          $ref: '#/components/schemas/NamespaceMode'
        string:
          type: string
          x-go-name: Value
      description: Namespace describes the namespace
      x-go-package: github.com/containers/podman/pkg/specgen
    NamespaceMode:
      type: string
      x-go-package: github.com/containers/podman/pkg/specgen
    NetworkConfig:
      type: object
      properties:
        DNSOpt:
          type: array
          items:
            type: string
        DNSSearch:
          type: array
          items:
            type: string
        DNSServers:
          type: array
          items:
            type: string
        ExposedPorts:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
        HTTPProxy:
          type: boolean
        IP6Address:
          type: string
        IPAddress:
          type: string
        LinkLocalIP:
          type: array
          items:
            type: string
        MacAddress:
          type: string
        NetMode:
          $ref: '#/components/schemas/NetworkMode'
        Network:
          type: string
        NetworkAlias:
          type: array
          items:
            type: string
        PortBindings:
          $ref: '#/components/schemas/PortMap'
        Publish:
          type: array
          items:
            type: string
        PublishAll:
          type: boolean
      description: NetworkConfig configures the network namespace for the container
      example:
        IP6Address: IP6Address
        NetMode: NetMode
        PortBindings:
          key:
          - HostIp: HostIp
            HostPort: HostPort
          - HostIp: HostIp
            HostPort: HostPort
        HTTPProxy: true
        MacAddress: MacAddress
        ExposedPorts:
          key: {}
        PublishAll: true
        DNSOpt:
        - DNSOpt
        - DNSOpt
        NetworkAlias:
        - NetworkAlias
        - NetworkAlias
        LinkLocalIP:
        - LinkLocalIP
        - LinkLocalIP
        Network: Network
        DNSSearch:
        - DNSSearch
        - DNSSearch
        IPAddress: IPAddress
        DNSServers:
        - DNSServers
        - DNSServers
        Publish:
        - Publish
        - Publish
      x-go-package: github.com/containers/podman/pkg/spec
    NetworkCreate:
      type: object
      properties:
        Attachable:
          type: boolean
        CheckDuplicate:
          type: boolean
          description: |-
            Check for networks with duplicate names.
            Network is primarily keyed based on a random ID and not on the name.
            Network name is strictly a user-friendly alias to the network
            which is uniquely identified using ID.
            And there is no guaranteed way to check for duplicates.
            Option CheckDuplicate is there to provide a best effort checking of any networks
            which has the same name but it is not guaranteed to catch all name collisions.
        ConfigFrom:
          $ref: '#/components/schemas/ConfigReference'
        ConfigOnly:
          type: boolean
        Driver:
          type: string
        EnableIPv6:
          type: boolean
        IPAM:
          $ref: '#/components/schemas/IPAM'
        Ingress:
          type: boolean
        Internal:
          type: boolean
        Labels:
          type: object
          additionalProperties:
            type: string
        Options:
          type: object
          additionalProperties:
            type: string
        Scope:
          type: string
      description: NetworkCreate is the expected body of the "create network" http
        request message
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    NetworkCreateOptions:
      type: object
      properties:
        DisableDNS:
          type: boolean
        Driver:
          type: string
        Gateway:
          $ref: '#/components/schemas/IP'
        Internal:
          type: boolean
        MacVLAN:
          type: string
        Range:
          $ref: '#/components/schemas/IPNet'
        Subnet:
          $ref: '#/components/schemas/IPNet'
      description: NetworkCreateOptions describes options to create a network
      x-go-package: github.com/containers/podman/pkg/domain/entities
    NetworkCreateReport:
      type: object
      properties:
        Filename:
          type: string
      description: NetworkCreateReport describes a created network for the cli
      example:
        Filename: Filename
      x-go-package: github.com/containers/podman/pkg/domain/entities
    NetworkCreateRequest:
      title: NetworkCreateRequest is the request message sent to the server for network
        create call.
      type: object
      properties:
        Attachable:
          type: boolean
        CheckDuplicate:
          type: boolean
          description: |-
            Check for networks with duplicate names.
            Network is primarily keyed based on a random ID and not on the name.
            Network name is strictly a user-friendly alias to the network
            which is uniquely identified using ID.
            And there is no guaranteed way to check for duplicates.
            Option CheckDuplicate is there to provide a best effort checking of any networks
            which has the same name but it is not guaranteed to catch all name collisions.
        ConfigFrom:
          $ref: '#/components/schemas/ConfigReference'
        ConfigOnly:
          type: boolean
        Driver:
          type: string
        EnableIPv6:
          type: boolean
        IPAM:
          $ref: '#/components/schemas/IPAM'
        Ingress:
          type: boolean
        Internal:
          type: boolean
        Labels:
          type: object
          additionalProperties:
            type: string
        Name:
          type: string
        Options:
          type: object
          additionalProperties:
            type: string
        Scope:
          type: string
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    NetworkInspectReport:
      type: object
      additionalProperties:
        type: object
        properties: {}
        example: {}
      description: NetworkInspectReport describes the results from inspect networks
      x-go-package: github.com/containers/podman/pkg/domain/entities
      x-schema-name: NetworkInspectReport
    NetworkListReport:
      type: object
      properties:
        Bytes:
          type: array
          items:
            type: integer
            format: uint8
        CNIVersion:
          type: string
        DisableCheck:
          type: boolean
        Name:
          type: string
        Plugins:
          type: array
          items:
            $ref: '#/components/schemas/NetworkConfig'
      description: NetworkListReport describes the results from listing networks
      example:
        Bytes:
        - 0
        - 0
        DisableCheck: true
        CNIVersion: CNIVersion
        Name: Name
        Plugins:
        - IP6Address: IP6Address
          NetMode: NetMode
          PortBindings:
            key:
            - HostIp: HostIp
              HostPort: HostPort
            - HostIp: HostIp
              HostPort: HostPort
          HTTPProxy: true
          MacAddress: MacAddress
          ExposedPorts:
            key: {}
          PublishAll: true
          DNSOpt:
          - DNSOpt
          - DNSOpt
          NetworkAlias:
          - NetworkAlias
          - NetworkAlias
          LinkLocalIP:
          - LinkLocalIP
          - LinkLocalIP
          Network: Network
          DNSSearch:
          - DNSSearch
          - DNSSearch
          IPAddress: IPAddress
          DNSServers:
          - DNSServers
          - DNSServers
          Publish:
          - Publish
          - Publish
        - IP6Address: IP6Address
          NetMode: NetMode
          PortBindings:
            key:
            - HostIp: HostIp
              HostPort: HostPort
            - HostIp: HostIp
              HostPort: HostPort
          HTTPProxy: true
          MacAddress: MacAddress
          ExposedPorts:
            key: {}
          PublishAll: true
          DNSOpt:
          - DNSOpt
          - DNSOpt
          NetworkAlias:
          - NetworkAlias
          - NetworkAlias
          LinkLocalIP:
          - LinkLocalIP
          - LinkLocalIP
          Network: Network
          DNSSearch:
          - DNSSearch
          - DNSSearch
          IPAddress: IPAddress
          DNSServers:
          - DNSServers
          - DNSServers
          Publish:
          - Publish
          - Publish
      x-go-package: github.com/containers/podman/pkg/domain/entities
    NetworkMode:
      title: NetworkMode represents the container network stack.
      type: string
      x-go-package: github.com/containers/podman/pkg/namespaces
    NetworkResource:
      type: object
      properties:
        Attachable:
          type: boolean
        ConfigFrom:
          $ref: '#/components/schemas/ConfigReference'
        ConfigOnly:
          type: boolean
        Containers:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/EndpointResource'
        Created:
          type: string
          format: date-time
        Driver:
          type: string
        EnableIPv6:
          type: boolean
        IPAM:
          $ref: '#/components/schemas/IPAM'
        Id:
          type: string
          x-go-name: ID
        Ingress:
          type: boolean
        Internal:
          type: boolean
        Labels:
          type: object
          additionalProperties:
            type: string
        Name:
          type: string
        Options:
          type: object
          additionalProperties:
            type: string
        Peers:
          type: array
          items:
            $ref: '#/components/schemas/PeerInfo'
        Scope:
          type: string
        Services:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ServiceInfo'
      description: NetworkResource is the body of the "get network" http response
        message
      example:
        Options:
          key: Options
        Internal: true
        Peers:
        - IP: IP
          Name: Name
        - IP: IP
          Name: Name
        Containers:
          key:
            EndpointID: EndpointID
            IPv6Address: IPv6Address
            MacAddress: MacAddress
            IPv4Address: IPv4Address
            Name: Name
        Driver: Driver
        Ingress: true
        Labels:
          key: Labels
        EnableIPv6: true
        Created: 2000-01-23T04:56:07.000+00:00
        Name: Name
        ConfigOnly: true
        IPAM:
          Options:
            key: Options
          Config:
          - AuxiliaryAddresses:
              key: AuxiliaryAddresses
            Gateway: Gateway
            Subnet: Subnet
            IPRange: IPRange
          - AuxiliaryAddresses:
              key: AuxiliaryAddresses
            Gateway: Gateway
            Subnet: Subnet
            IPRange: IPRange
          Driver: Driver
        Services:
          key:
            Tasks:
            - EndpointID: EndpointID
              EndpointIP: EndpointIP
              Info:
                key: Info
              Name: Name
            - EndpointID: EndpointID
              EndpointIP: EndpointIP
              Info:
                key: Info
              Name: Name
            Ports:
            - Ports
            - Ports
            LocalLBIndex: 0
            VIP: VIP
        Scope: Scope
        ConfigFrom:
          Network: Network
        Id: Id
        Attachable: true
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    NetworkRmReport:
      type: object
      properties:
        Err:
          type: string
        Name:
          type: string
      description: NetworkRmReport describes the results of network removal
      example:
        Err: Err
        Name: Name
      x-go-package: github.com/containers/podman/pkg/domain/entities
    NetworkSettings:
      type: object
      properties:
        Bridge:
          type: string
        EndpointID:
          type: string
        Gateway:
          type: string
        GlobalIPv6Address:
          type: string
        GlobalIPv6PrefixLen:
          type: integer
          format: int64
        HairpinMode:
          type: boolean
        IPAddress:
          type: string
        IPPrefixLen:
          type: integer
          format: int64
        IPv6Gateway:
          type: string
        LinkLocalIPv6Address:
          type: string
        LinkLocalIPv6PrefixLen:
          type: integer
          format: int64
        MacAddress:
          type: string
        Networks:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/EndpointSettings'
        Ports:
          $ref: '#/components/schemas/PortMap'
        SandboxID:
          type: string
        SandboxKey:
          type: string
        SecondaryIPAddresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        SecondaryIPv6Addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
      description: NetworkSettings exposes the network settings in the api
      example:
        HairpinMode: true
        Networks:
          key:
            GlobalIPv6Address: GlobalIPv6Address
            GlobalIPv6PrefixLen: 6
            IPPrefixLen: 3
            Aliases:
            - Aliases
            - Aliases
            MacAddress: MacAddress
            NetworkID: NetworkID
            IPAMConfig:
              LinkLocalIPs:
              - LinkLocalIPs
              - LinkLocalIPs
              IPv6Address: IPv6Address
              IPv4Address: IPv4Address
            DriverOpts:
              key: DriverOpts
            Gateway: Gateway
            EndpointID: EndpointID
            Links:
            - Links
            - Links
            IPv6Gateway: IPv6Gateway
            IPAddress: IPAddress
        SandboxKey: SandboxKey
        GlobalIPv6Address: GlobalIPv6Address
        Ports: null
        GlobalIPv6PrefixLen: 6
        IPPrefixLen: 6
        MacAddress: MacAddress
        SandboxID: SandboxID
        LinkLocalIPv6Address: LinkLocalIPv6Address
        LinkLocalIPv6PrefixLen: 5
        Gateway: Gateway
        EndpointID: EndpointID
        SecondaryIPv6Addresses:
        - null
        - null
        IPv6Gateway: IPv6Gateway
        SecondaryIPAddresses:
        - PrefixLen: 3
          Addr: Addr
        - PrefixLen: 3
          Addr: Addr
        IPAddress: IPAddress
        Bridge: Bridge
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    OCIRuntimeInfo:
      type: object
      properties:
        name:
          type: string
          x-go-name: Name
        package:
          type: string
          x-go-name: Package
        path:
          type: string
          x-go-name: Path
        version:
          type: string
          x-go-name: Version
      description: |-
        OCIRuntimeInfo describes the runtime (crun or runc) being
        used with podman
      example:
        path: path
        package: package
        name: name
        version: version
      x-go-package: github.com/containers/podman/libpod/define
    OverlayVolume:
      type: object
      properties:
        destination:
          type: string
          description: Destination is the absolute path where the mount will be placed
            in the container.
          x-go-name: Destination
        source:
          type: string
          description: Source specifies the source path of the mount.
          x-go-name: Source
      description: |-
        OverlayVolume holds information about a overlay volume that will be mounted into
        the container.
      x-go-package: github.com/containers/podman/pkg/specgen
    POSIXRlimit:
      type: object
      properties:
        hard:
          type: integer
          description: Hard is the hard limit for the specified type
          format: uint64
          x-go-name: Hard
        soft:
          type: integer
          description: Soft is the soft limit for the specified type
          format: uint64
          x-go-name: Soft
        type:
          type: string
          description: Type of the rlimit to set
          x-go-name: Type
      description: POSIXRlimit type and restrictions
      x-go-package: github.com/containers/podman/vendor/github.com/opencontainers/runtime-spec/specs-go
    PeerInfo:
      type: object
      properties:
        IP:
          type: string
        Name:
          type: string
      description: PeerInfo represents one peer of an overlay network
      example:
        IP: IP
        Name: Name
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/network
    PidConfig:
      type: object
      properties:
        PidMode:
          $ref: '#/components/schemas/PidMode'
      description: PidConfig configures the pid namespace for the container
      x-go-package: github.com/containers/podman/pkg/spec
    PidMode:
      title: PidMode represents the pid namespace of the container.
      type: string
      x-go-package: github.com/containers/podman/pkg/namespaces
    PlayKubePod:
      type: object
      properties:
        Containers:
          type: array
          description: Containers - the IDs of the containers running in the created
            pod.
          items:
            type: string
        ID:
          type: string
          description: ID - ID of the pod created as a result of play kube.
        Logs:
          type: array
          description: Logs - non-fatal errors and log messages while processing.
          items:
            type: string
      description: PlayKubePod represents a single pod and associated containers created
        by play kube
      example:
        Containers:
        - Containers
        - Containers
        ID: ID
        Logs:
        - Logs
        - Logs
      x-go-package: github.com/containers/podman/pkg/domain/entities
    PlayKubeReport:
      title: PlayKubeReport contains the results of running play kube.
      type: object
      properties:
        Pods:
          type: array
          description: Pods - pods created by play kube.
          items:
            $ref: '#/components/schemas/PlayKubePod'
      example:
        Pods:
        - Containers:
          - Containers
          - Containers
          ID: ID
          Logs:
          - Logs
          - Logs
        - Containers:
          - Containers
          - Containers
          ID: ID
          Logs:
          - Logs
          - Logs
      x-go-package: github.com/containers/podman/pkg/domain/entities
    Plugin:
      required:
      - Config
      - Enabled
      - Name
      - Settings
      type: object
      properties:
        Config:
          $ref: '#/components/schemas/PluginConfig'
        Enabled:
          type: boolean
          description: True if the plugin is running. False if the plugin is not running,
            only installed.
        Id:
          type: string
          description: Id
          x-go-name: ID
        Name:
          type: string
          description: name
        PluginReference:
          type: string
          description: plugin remote reference used to push/pull the plugin
        Settings:
          $ref: '#/components/schemas/PluginSettings'
      description: Plugin A plugin for the Engine API
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    PluginConfig:
      title: PluginConfig The config of a plugin.
      required:
      - Args
      - Description
      - Documentation
      - Entrypoint
      - Env
      - Interface
      - IpcHost
      - Linux
      - Mounts
      - Network
      - PidHost
      - PropagatedMount
      - WorkDir
      type: object
      properties:
        Args:
          $ref: '#/components/schemas/PluginConfigArgs'
        Description:
          type: string
          description: description
        DockerVersion:
          type: string
          description: Docker Version used to create the plugin
        Documentation:
          type: string
          description: documentation
        Entrypoint:
          type: array
          description: entrypoint
          items:
            type: string
        Env:
          type: array
          description: env
          items:
            $ref: '#/components/schemas/PluginEnv'
        Interface:
          $ref: '#/components/schemas/PluginConfigInterface'
        IpcHost:
          type: boolean
          description: ipc host
        Linux:
          $ref: '#/components/schemas/PluginConfigLinux'
        Mounts:
          type: array
          description: mounts
          items:
            $ref: '#/components/schemas/PluginMount'
        Network:
          $ref: '#/components/schemas/PluginConfigNetwork'
        PidHost:
          type: boolean
          description: pid host
        PropagatedMount:
          type: string
          description: propagated mount
        User:
          $ref: '#/components/schemas/PluginConfigUser'
        WorkDir:
          type: string
          description: work dir
        rootfs:
          $ref: '#/components/schemas/PluginConfigRootfs'
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    PluginConfigArgs:
      required:
      - Description
      - Name
      - Settable
      - Value
      type: object
      properties:
        Description:
          type: string
          description: description
        Name:
          type: string
          description: name
        Settable:
          type: array
          description: settable
          items:
            type: string
        Value:
          type: array
          description: value
          items:
            type: string
      description: PluginConfigArgs plugin config args
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    PluginConfigInterface:
      required:
      - Socket
      - Types
      type: object
      properties:
        ProtocolScheme:
          type: string
          description: Protocol to use for clients connecting to the plugin.
        Socket:
          type: string
          description: socket
        Types:
          type: array
          description: types
          items:
            $ref: '#/components/schemas/PluginInterfaceType'
      description: PluginConfigInterface The interface between Docker and the plugin
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    PluginConfigLinux:
      required:
      - AllowAllDevices
      - Capabilities
      - Devices
      type: object
      properties:
        AllowAllDevices:
          type: boolean
          description: allow all devices
        Capabilities:
          type: array
          description: capabilities
          items:
            type: string
        Devices:
          type: array
          description: devices
          items:
            $ref: '#/components/schemas/PluginDevice'
      description: PluginConfigLinux plugin config linux
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    PluginConfigNetwork:
      required:
      - Type
      type: object
      properties:
        Type:
          type: string
          description: type
      description: PluginConfigNetwork plugin config network
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    PluginConfigRootfs:
      type: object
      properties:
        diff_ids:
          type: array
          description: diff ids
          items:
            type: string
          x-go-name: DiffIds
        type:
          type: string
          description: type
          x-go-name: Type
      description: PluginConfigRootfs plugin config rootfs
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    PluginConfigUser:
      type: object
      properties:
        GID:
          type: integer
          description: g ID
          format: uint32
        UID:
          type: integer
          description: UID
          format: uint32
      description: PluginConfigUser plugin config user
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    PluginDevice:
      required:
      - Description
      - Name
      - Path
      - Settable
      type: object
      properties:
        Description:
          type: string
          description: description
        Name:
          type: string
          description: name
        Path:
          type: string
          description: path
        Settable:
          type: array
          description: settable
          items:
            type: string
      description: PluginDevice plugin device
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    PluginEnv:
      required:
      - Description
      - Name
      - Settable
      - Value
      type: object
      properties:
        Description:
          type: string
          description: description
        Name:
          type: string
          description: name
        Settable:
          type: array
          description: settable
          items:
            type: string
        Value:
          type: string
          description: value
      description: PluginEnv plugin env
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    PluginInterfaceType:
      required:
      - Capability
      - Prefix
      - Version
      type: object
      properties:
        Capability:
          type: string
          description: capability
        Prefix:
          type: string
          description: prefix
        Version:
          type: string
          description: version
      description: PluginInterfaceType plugin interface type
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    PluginMount:
      required:
      - Description
      - Destination
      - Name
      - Options
      - Settable
      - Source
      - Type
      type: object
      properties:
        Description:
          type: string
          description: description
        Destination:
          type: string
          description: destination
        Name:
          type: string
          description: name
        Options:
          type: array
          description: options
          items:
            type: string
        Settable:
          type: array
          description: settable
          items:
            type: string
        Source:
          type: string
          description: source
        Type:
          type: string
          description: type
      description: PluginMount plugin mount
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    PluginSettings:
      title: PluginSettings Settings that can be modified by users.
      required:
      - Args
      - Devices
      - Env
      - Mounts
      type: object
      properties:
        Args:
          type: array
          description: args
          items:
            type: string
        Devices:
          type: array
          description: devices
          items:
            $ref: '#/components/schemas/PluginDevice'
        Env:
          type: array
          description: env
          items:
            type: string
        Mounts:
          type: array
          description: mounts
          items:
            $ref: '#/components/schemas/PluginMount'
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    PodBasicConfig:
      title: PodBasicConfig contains basic configuration options for pods.
      type: object
      properties:
        hostname:
          type: string
          description: |-
            Hostname is the pod's hostname. If not set, the name of the pod will
            be used (if a name was not provided here, the name auto-generated for
            the pod will be used). This will be used by the infra container and
            all containers in the pod as long as the UTS namespace is shared.
            Optional.
          x-go-name: Hostname
        infra_command:
          type: array
          description: |-
            InfraCommand sets the command that will be used to start the infra
            container.
            If not set, the default set in the Libpod configuration file will be
            used.
            Conflicts with NoInfra=true.
            Optional.
          items:
            type: string
          x-go-name: InfraCommand
        infra_conmon_pid_file:
          type: string
          description: |-
            InfraConmonPidFile is a custom path to store the infra container's
            conmon PID.
          x-go-name: InfraConmonPidFile
        infra_image:
          type: string
          description: |-
            InfraImage is the image that will be used for the infra container.
            If not set, the default set in the Libpod configuration file will be
            used.
            Conflicts with NoInfra=true.
            Optional.
          x-go-name: InfraImage
        labels:
          type: object
          additionalProperties:
            type: string
          description: |-
            Labels are key-value pairs that are used to add metadata to pods.
            Optional.
          x-go-name: Labels
        name:
          type: string
          description: |-
            Name is the name of the pod.
            If not provided, a name will be generated when the pod is created.
            Optional.
          x-go-name: Name
        no_infra:
          type: boolean
          description: |-
            NoInfra tells the pod not to create an infra container. If this is
            done, many networking-related options will become unavailable.
            Conflicts with setting any options in PodNetworkConfig, and the
            InfraCommand and InfraImages in this struct.
            Optional.
          x-go-name: NoInfra
        pod_create_command:
          type: array
          description: |-
            PodCreateCommand is the command used to create this pod.
            This will be shown in the output of Inspect() on the pod, and may
            also be used by some tools that wish to recreate the pod
            (e.g. `podman generate systemd --new`).
            Optional.
          items:
            type: string
          x-go-name: PodCreateCommand
        shared_namespaces:
          type: array
          description: |-
            SharedNamespaces instructs the pod to share a set of namespaces.
            Shared namespaces will be joined (by default) by every container
            which joins the pod.
            If not set and NoInfra is false, the pod will set a default set of
            namespaces to share.
            Conflicts with NoInfra=true.
            Optional.
          items:
            type: string
          x-go-name: SharedNamespaces
      x-go-package: github.com/containers/podman/pkg/specgen
    PodCgroupConfig:
      title: PodCgroupConfig contains configuration options about a pod's cgroups.
      type: object
      properties:
        cgroup_parent:
          type: string
          description: |-
            CgroupParent is the parent for the CGroup that the pod will create.
            This pod cgroup will, in turn, be the default cgroup parent for all
            containers in the pod.
            Optional.
          x-go-name: CgroupParent
      description: This will be expanded in future updates to pods.
      x-go-package: github.com/containers/podman/pkg/specgen
    PodCreateConfig:
      type: object
      properties:
        cgroup-parent:
          type: string
          x-go-name: CGroupParent
        hostname:
          type: string
          x-go-name: Hostname
        infra:
          type: boolean
          x-go-name: Infra
        infra-command:
          type: string
          x-go-name: InfraCommand
        infra-image:
          type: string
          x-go-name: InfraImage
        labels:
          type: array
          items:
            type: string
          x-go-name: Labels
        name:
          type: string
          x-go-name: Name
        publish:
          type: array
          items:
            type: string
          x-go-name: Publish
        share:
          type: string
          x-go-name: Share
      x-go-package: github.com/containers/podman/pkg/api/handlers
    PodKillReport:
      type: object
      properties:
        Errs:
          type: array
          items:
            type: string
        Id:
          type: string
      example:
        Id: Id
        Errs:
        - Errs
        - Errs
      x-go-package: github.com/containers/podman/pkg/domain/entities
    PodNetworkConfig:
      title: PodNetworkConfig contains networking configuration for a pod.
      type: object
      properties:
        cni_networks:
          type: array
          description: |-
            CNINetworks is a list of CNI networks that the infra container will
            join. As, by default, containers share their network with the infra
            container, these networks will effectively be joined by the
            entire pod.
            Only available when NetNS is set to Bridge, the default for root.
            Optional.
          items:
            type: string
          x-go-name: CNINetworks
        dns_option:
          type: array
          description: |-
            DNSOption is a set of DNS options that will be used in the infra
            container's resolv.conf, which will, by default, be shared with all
            containers in the pod.
            Conflicts with NoInfra=true.
            Optional.
          items:
            type: string
          x-go-name: DNSOption
        dns_search:
          type: array
          description: |-
            DNSSearch is a set of DNS search domains that will be used in the
            infra container's resolv.conf, which will, by default, be shared with
            all containers in the pod.
            If not provided, DNS search domains from the host's resolv.conf will
            be used.
            Conflicts with NoInfra=true.
            Optional.
          items:
            type: string
          x-go-name: DNSSearch
        dns_server:
          type: array
          description: |-
            DNSServer is a set of DNS servers that will be used in the infra
            container's resolv.conf, which will, by default, be shared with all
            containers in the pod.
            If not provided, the host's DNS servers will be used, unless the only
            server set is a localhost address. As the container cannot connect to
            the host's localhost, a default server will instead be set.
            Conflicts with NoInfra=true.
            Optional.
          items:
            $ref: '#/components/schemas/IP'
          x-go-name: DNSServer
        hostadd:
          type: array
          description: |-
            HostAdd is a set of hosts that will be added to the infra container's
            etc/hosts that will, by default, be shared with all containers in
            the pod.
            Conflicts with NoInfra=true and NoManageHosts.
            Optional.
          items:
            type: string
          x-go-name: HostAdd
        netns:
          $ref: '#/components/schemas/Namespace'
        network_options:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: |-
            NetworkOptions are additional options for each network
            Optional.
          x-go-name: NetworkOptions
        no_manage_hosts:
          type: boolean
          description: |-
            NoManageHosts indicates that /etc/hosts should not be managed by the
            pod. Instead, each container will create a separate /etc/hosts as
            they would if not in a pod.
            Conflicts with HostAdd.
          x-go-name: NoManageHosts
        no_manage_resolv_conf:
          type: boolean
          description: |-
            NoManageResolvConf indicates that /etc/resolv.conf should not be
            managed by the pod. Instead, each container will create and manage a
            separate resolv.conf as if they had not joined a pod.
            Conflicts with NoInfra=true and DNSServer, DNSSearch, DNSOption.
            Optional.
          x-go-name: NoManageResolvConf
        portmappings:
          type: array
          description: |-
            PortMappings is a set of ports to map into the infra container.
            As, by default, containers share their network with the infra
            container, this will forward the ports to the entire pod.
            Only available if NetNS is set to Bridge or Slirp.
            Optional.
          items:
            $ref: '#/components/schemas/PortMapping'
          x-go-name: PortMappings
        static_ip:
          $ref: '#/components/schemas/IP'
        static_mac:
          $ref: '#/components/schemas/HardwareAddr'
      x-go-package: github.com/containers/podman/pkg/specgen
    PodPauseReport:
      type: object
      properties:
        Errs:
          type: array
          items:
            type: string
        Id:
          type: string
      example:
        Id: Id
        Errs:
        - Errs
        - Errs
      x-go-package: github.com/containers/podman/pkg/domain/entities
    PodPruneReport:
      type: object
      properties:
        Err:
          type: string
        Id:
          type: string
      example:
        Err: Err
        Id: Id
      x-go-package: github.com/containers/podman/pkg/domain/entities
    PodRestartReport:
      type: object
      properties:
        Errs:
          type: array
          items:
            type: string
        Id:
          type: string
      example:
        Id: Id
        Errs:
        - Errs
        - Errs
      x-go-package: github.com/containers/podman/pkg/domain/entities
    PodRmReport:
      type: object
      properties:
        Err:
          type: string
        Id:
          type: string
      example:
        Err: Err
        Id: Id
      x-go-package: github.com/containers/podman/pkg/domain/entities
    PodSpecGenerator:
      type: object
      properties:
        cgroup_parent:
          type: string
          description: |-
            CgroupParent is the parent for the CGroup that the pod will create.
            This pod cgroup will, in turn, be the default cgroup parent for all
            containers in the pod.
            Optional.
          x-go-name: CgroupParent
        cni_networks:
          type: array
          description: |-
            CNINetworks is a list of CNI networks that the infra container will
            join. As, by default, containers share their network with the infra
            container, these networks will effectively be joined by the
            entire pod.
            Only available when NetNS is set to Bridge, the default for root.
            Optional.
          items:
            type: string
          x-go-name: CNINetworks
        dns_option:
          type: array
          description: |-
            DNSOption is a set of DNS options that will be used in the infra
            container's resolv.conf, which will, by default, be shared with all
            containers in the pod.
            Conflicts with NoInfra=true.
            Optional.
          items:
            type: string
          x-go-name: DNSOption
        dns_search:
          type: array
          description: |-
            DNSSearch is a set of DNS search domains that will be used in the
            infra container's resolv.conf, which will, by default, be shared with
            all containers in the pod.
            If not provided, DNS search domains from the host's resolv.conf will
            be used.
            Conflicts with NoInfra=true.
            Optional.
          items:
            type: string
          x-go-name: DNSSearch
        dns_server:
          type: array
          description: |-
            DNSServer is a set of DNS servers that will be used in the infra
            container's resolv.conf, which will, by default, be shared with all
            containers in the pod.
            If not provided, the host's DNS servers will be used, unless the only
            server set is a localhost address. As the container cannot connect to
            the host's localhost, a default server will instead be set.
            Conflicts with NoInfra=true.
            Optional.
          items:
            $ref: '#/components/schemas/IP'
          x-go-name: DNSServer
        hostadd:
          type: array
          description: |-
            HostAdd is a set of hosts that will be added to the infra container's
            etc/hosts that will, by default, be shared with all containers in
            the pod.
            Conflicts with NoInfra=true and NoManageHosts.
            Optional.
          items:
            type: string
          x-go-name: HostAdd
        hostname:
          type: string
          description: |-
            Hostname is the pod's hostname. If not set, the name of the pod will
            be used (if a name was not provided here, the name auto-generated for
            the pod will be used). This will be used by the infra container and
            all containers in the pod as long as the UTS namespace is shared.
            Optional.
          x-go-name: Hostname
        infra_command:
          type: array
          description: |-
            InfraCommand sets the command that will be used to start the infra
            container.
            If not set, the default set in the Libpod configuration file will be
            used.
            Conflicts with NoInfra=true.
            Optional.
          items:
            type: string
          x-go-name: InfraCommand
        infra_conmon_pid_file:
          type: string
          description: |-
            InfraConmonPidFile is a custom path to store the infra container's
            conmon PID.
          x-go-name: InfraConmonPidFile
        infra_image:
          type: string
          description: |-
            InfraImage is the image that will be used for the infra container.
            If not set, the default set in the Libpod configuration file will be
            used.
            Conflicts with NoInfra=true.
            Optional.
          x-go-name: InfraImage
        labels:
          type: object
          additionalProperties:
            type: string
          description: |-
            Labels are key-value pairs that are used to add metadata to pods.
            Optional.
          x-go-name: Labels
        name:
          type: string
          description: |-
            Name is the name of the pod.
            If not provided, a name will be generated when the pod is created.
            Optional.
          x-go-name: Name
        netns:
          $ref: '#/components/schemas/Namespace'
        network_options:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: |-
            NetworkOptions are additional options for each network
            Optional.
          x-go-name: NetworkOptions
        no_infra:
          type: boolean
          description: |-
            NoInfra tells the pod not to create an infra container. If this is
            done, many networking-related options will become unavailable.
            Conflicts with setting any options in PodNetworkConfig, and the
            InfraCommand and InfraImages in this struct.
            Optional.
          x-go-name: NoInfra
        no_manage_hosts:
          type: boolean
          description: |-
            NoManageHosts indicates that /etc/hosts should not be managed by the
            pod. Instead, each container will create a separate /etc/hosts as
            they would if not in a pod.
            Conflicts with HostAdd.
          x-go-name: NoManageHosts
        no_manage_resolv_conf:
          type: boolean
          description: |-
            NoManageResolvConf indicates that /etc/resolv.conf should not be
            managed by the pod. Instead, each container will create and manage a
            separate resolv.conf as if they had not joined a pod.
            Conflicts with NoInfra=true and DNSServer, DNSSearch, DNSOption.
            Optional.
          x-go-name: NoManageResolvConf
        pod_create_command:
          type: array
          description: |-
            PodCreateCommand is the command used to create this pod.
            This will be shown in the output of Inspect() on the pod, and may
            also be used by some tools that wish to recreate the pod
            (e.g. `podman generate systemd --new`).
            Optional.
          items:
            type: string
          x-go-name: PodCreateCommand
        portmappings:
          type: array
          description: |-
            PortMappings is a set of ports to map into the infra container.
            As, by default, containers share their network with the infra
            container, this will forward the ports to the entire pod.
            Only available if NetNS is set to Bridge or Slirp.
            Optional.
          items:
            $ref: '#/components/schemas/PortMapping'
          x-go-name: PortMappings
        shared_namespaces:
          type: array
          description: |-
            SharedNamespaces instructs the pod to share a set of namespaces.
            Shared namespaces will be joined (by default) by every container
            which joins the pod.
            If not set and NoInfra is false, the pod will set a default set of
            namespaces to share.
            Conflicts with NoInfra=true.
            Optional.
          items:
            type: string
          x-go-name: SharedNamespaces
        static_ip:
          $ref: '#/components/schemas/IP'
        static_mac:
          $ref: '#/components/schemas/HardwareAddr'
      description: PodSpecGenerator describes options to create a pod
      x-go-package: github.com/containers/podman/pkg/specgen
    PodStartReport:
      type: object
      properties:
        Errs:
          type: array
          items:
            type: string
        Id:
          type: string
      example:
        Id: Id
        Errs:
        - Errs
        - Errs
      x-go-package: github.com/containers/podman/pkg/domain/entities
    PodStatsReport:
      title: PodStatsReport includes pod-resource statistics data.
      type: object
      properties:
        BlockIO:
          type: string
        CID:
          type: string
        CPU:
          type: string
        Mem:
          type: string
        MemUsage:
          type: string
        Name:
          type: string
        NetIO:
          type: string
        PIDS:
          type: string
        Pod:
          type: string
      x-go-package: github.com/containers/podman/pkg/domain/entities
    PodStopReport:
      type: object
      properties:
        Errs:
          type: array
          items:
            type: string
        Id:
          type: string
      example:
        Id: Id
        Errs:
        - Errs
        - Errs
      x-go-package: github.com/containers/podman/pkg/domain/entities
    PodUnpauseReport:
      type: object
      properties:
        Errs:
          type: array
          items:
            type: string
        Id:
          type: string
      example:
        Id: Id
        Errs:
        - Errs
        - Errs
      x-go-package: github.com/containers/podman/pkg/domain/entities
    Policy:
      title: Policy denotes a seccomp policy.
      type: integer
      format: int64
      x-go-package: github.com/containers/podman/pkg/seccomp
    Port:
      required:
      - PrivatePort
      - Type
      type: object
      properties:
        IP:
          type: string
          description: Host IP address that the container's port is mapped to
        PrivatePort:
          type: integer
          description: Port on the container
          format: uint16
        PublicPort:
          type: integer
          description: Port exposed on the host
          format: uint16
        Type:
          type: string
          description: type
      description: Port An open port on a container
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    PortBinding:
      type: object
      properties:
        HostIp:
          type: string
          description: HostIP is the host IP Address
          x-go-name: HostIP
        HostPort:
          type: string
          description: HostPort is the host port number
      description: PortBinding represents a binding between a Host IP address and
        a Host Port
      example:
        HostIp: HostIp
        HostPort: HostPort
      x-go-package: github.com/containers/podman/vendor/github.com/docker/go-connections/nat
    PortMap:
      type: object
      additionalProperties:
        type: array
        items:
          $ref: '#/components/schemas/PortBinding'
      description: PortMap is a collection of PortBinding indexed by Port
      x-go-package: github.com/containers/podman/vendor/github.com/docker/go-connections/nat
      x-schema-name: PortMap
    PortMapping:
      title: PortMapping is one or more ports that will be mapped into the container.
      type: object
      properties:
        container_port:
          type: integer
          description: |-
            ContainerPort is the port number that will be exposed from the
            container.
            Mandatory.
          format: uint16
          x-go-name: ContainerPort
        host_ip:
          type: string
          description: |-
            HostIP is the IP that we will bind to on the host.
            If unset, assumed to be 0.0.0.0 (all interfaces).
          x-go-name: HostIP
        host_port:
          type: integer
          description: |-
            HostPort is the port number that will be forwarded from the host into
            the container.
            If omitted, a random port on the host (guaranteed to be over 1024)
            will be assigned.
          format: uint16
          x-go-name: HostPort
        protocol:
          type: string
          description: |-
            Protocol is the protocol forward.
            Must be either "tcp", "udp", and "sctp", or some combination of these
            separated by commas.
            If unset, assumed to be TCP.
          x-go-name: Protocol
        range:
          type: integer
          description: |-
            Range is the number of ports that will be forwarded, starting at
            HostPort and ContainerPort and counting up.
            This is 1-indexed, so 1 is assumed to be a single port (only the
            Hostport:Containerport mapping will be added), 2 is two ports (both
            Hostport:Containerport and Hostport+1:Containerport+1), etc.
            If unset, assumed to be 1 (a single port).
            Both hostport + range and containerport + range must be less than
            65536.
          format: uint16
          x-go-name: Range
      example:
        container_port: 5
        host_ip: host_ip
        protocol: protocol
        host_port: 2
        range: 7
      x-go-package: github.com/containers/podman/pkg/specgen
    PortSet:
      type: object
      additionalProperties:
        type: object
        properties: {}
        example: {}
      description: PortSet is a collection of structs indexed by Port
      x-go-package: github.com/containers/podman/vendor/github.com/docker/go-connections/nat
      x-schema-name: PortSet
    Propagation:
      title: Propagation represents the propagation of a mount.
      type: string
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/mount
    RemoteSocket:
      type: object
      properties:
        exists:
          type: boolean
          x-go-name: Exists
        path:
          type: string
          x-go-name: Path
      description: RemoteSocket describes information about the API socket
      example:
        path: path
        exists: true
      x-go-package: github.com/containers/podman/libpod/define
    Report:
      type: object
      properties:
        Err:
          type: object
          additionalProperties:
            type: string
        Id:
          type: array
          items:
            type: string
      example:
        Err:
          key: Err
        Id:
        - Id
        - Id
      x-go-package: github.com/containers/podman/pkg/domain/entities
    RestartPolicy:
      title: RestartPolicy represents the restart policies of the container.
      type: object
      properties:
        MaximumRetryCount:
          type: integer
          format: int64
        Name:
          type: string
      example:
        MaximumRetryCount: 3
        Name: Name
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/container
    RootFS:
      type: object
      properties:
        Layers:
          type: array
          items:
            $ref: '#/components/schemas/Digest'
        Type:
          type: string
      description: RootFS holds the root fs information of an image
      example:
        Type: Type
        Layers:
        - Layers
        - Layers
      x-go-package: github.com/containers/podman/pkg/inspect
    Schema2HealthConfig:
      type: object
      properties:
        Interval:
          $ref: '#/components/schemas/Duration'
        Retries:
          type: integer
          description: |-
            Retries is the number of consecutive failures needed to consider a container as unhealthy.
            Zero means inherit.
          format: int64
        StartPeriod:
          $ref: '#/components/schemas/Duration'
        Test:
          type: array
          description: |-
            Test is the test to perform to check that the container is healthy.
            An empty slice means to inherit the default.
            The options are:
            {} : inherit healthcheck
            {"NONE"} : disable healthcheck
            {"CMD", args...} : exec arguments directly
            {"CMD-SHELL", command} : run command with system's default shell
          items:
            type: string
        Timeout:
          $ref: '#/components/schemas/Duration'
      description: |-
        Schema2HealthConfig is a HealthConfig, which holds configuration settings
        for the HEALTHCHECK feature, from docker/docker/api/types/container.
      example:
        Test:
        - Test
        - Test
        Retries: 6
        Timeout: null
        Interval: 0
        StartPeriod: null
      x-go-package: github.com/containers/podman/vendor/github.com/containers/image/v5/manifest
    SecurityConfig:
      type: object
      properties:
        ApparmorProfile:
          type: string
        CapAdd:
          type: array
          items:
            type: string
        CapDrop:
          type: array
          items:
            type: string
        CapRequired:
          type: array
          items:
            type: string
        LabelOpts:
          type: array
          items:
            type: string
        NoNewPrivs:
          type: boolean
        Privileged:
          type: boolean
        ProcOpts:
          type: array
          items:
            type: string
        ReadOnlyRootfs:
          type: boolean
        ReadOnlyTmpfs:
          type: boolean
        SeccompPolicy:
          $ref: '#/components/schemas/Policy'
        SeccompProfileFromImage:
          type: string
        SeccompProfilePath:
          type: string
        SecurityOpts:
          type: array
          items:
            type: string
        Sysctl:
          type: object
          additionalProperties:
            type: string
      description: SecurityConfig configures the security features for the container
      x-go-package: github.com/containers/podman/pkg/spec
    ServiceInfo:
      type: object
      properties:
        LocalLBIndex:
          type: integer
          format: int64
        Ports:
          type: array
          items:
            type: string
        Tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
        VIP:
          type: string
      description: ServiceInfo represents service parameters with the list of service's
        tasks
      example:
        Tasks:
        - EndpointID: EndpointID
          EndpointIP: EndpointIP
          Info:
            key: Info
          Name: Name
        - EndpointID: EndpointID
          EndpointIP: EndpointIP
          Info:
            key: Info
          Name: Name
        Ports:
        - Ports
        - Ports
        LocalLBIndex: 0
        VIP: VIP
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/network
    ServiceUpdateResponse:
      type: object
      properties:
        Warnings:
          type: array
          description: Optional warning messages
          items:
            type: string
      description: ServiceUpdateResponse service update response
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    Signal:
      title: A Signal is a number describing a process signal.
      type: integer
      description: It implements the os.Signal interface.
      format: int64
      x-go-package: syscall
    SlirpInfo:
      type: object
      properties:
        executable:
          type: string
          x-go-name: Executable
        package:
          type: string
          x-go-name: Package
        version:
          type: string
          x-go-name: Version
      description: |-
        SlirpInfo describes the slirp executable that
        is being being used.
      example:
        package: package
        version: version
        executable: executable
      x-go-package: github.com/containers/podman/libpod/define
    SpecGenerator:
      type: object
      properties:
        annotations:
          type: object
          additionalProperties:
            type: string
          description: |-
            Annotations are key-value options passed into the container runtime
            that can be used to trigger special behavior.
            Optional.
          x-go-name: Annotations
        apparmor_profile:
          type: string
          description: |-
            ApparmorProfile is the name of the Apparmor profile the container
            will use.
            Optional.
          x-go-name: ApparmorProfile
        cap_add:
          type: array
          description: |-
            CapAdd are capabilities which will be added to the container.
            Conflicts with Privileged.
            Optional.
          items:
            type: string
          x-go-name: CapAdd
        cap_drop:
          type: array
          description: |-
            CapDrop are capabilities which will be removed from the container.
            Conflicts with Privileged.
            Optional.
          items:
            type: string
          x-go-name: CapDrop
        cgroup_parent:
          type: string
          description: |-
            CgroupParent is the container's CGroup parent.
            If not set, the default for the current cgroup driver will be used.
            Optional.
          x-go-name: CgroupParent
        cgroupns:
          $ref: '#/components/schemas/Namespace'
        cgroups_mode:
          type: string
          description: |-
            CgroupsMode sets a policy for how cgroups will be created in the
            container, including the ability to disable creation entirely.
          x-go-name: CgroupsMode
        cni_networks:
          type: array
          description: |-
            CNINetworks is a list of CNI networks to join the container to.
            If this list is empty, the default CNI network will be joined
            instead. If at least one entry is present, we will not join the
            default network (unless it is part of this list).
            Only available if NetNS is set to bridge.
            Optional.
          items:
            type: string
          x-go-name: CNINetworks
        command:
          type: array
          description: |-
            Command is the container's command.
            If not given and Image is specified, this will be populated by the
            image's configuration.
            Optional.
          items:
            type: string
          x-go-name: Command
        conmon_pid_file:
          type: string
          description: |-
            ConmonPidFile is a path at which a PID file for Conmon will be
            placed.
            If not given, a default location will be used.
            Optional.
          x-go-name: ConmonPidFile
        containerCreateCommand:
          type: array
          description: |-
            ContainerCreateCommand is the command that was used to create this
            container.
            This will be shown in the output of Inspect() on the container, and
            may also be used by some tools that wish to recreate the container
            (e.g. `podman generate systemd --new`).
            Optional.
          items:
            type: string
          x-go-name: ContainerCreateCommand
        devices:
          type: array
          description: |-
            Devices are devices that will be added to the container.
            Optional.
          items:
            $ref: '#/components/schemas/LinuxDevice'
          x-go-name: Devices
        dns_option:
          type: array
          description: |-
            DNSOptions is a set of DNS options that will be used in the
            container's resolv.conf, replacing the host's DNS options which are
            used by default.
            Conflicts with UseImageResolvConf.
            Optional.
          items:
            type: string
          x-go-name: DNSOptions
        dns_search:
          type: array
          description: |-
            DNSSearch is a set of DNS search domains that will be used in the
            container's resolv.conf, replacing the host's DNS search domains
            which are used by default.
            Conflicts with UseImageResolvConf.
            Optional.
          items:
            type: string
          x-go-name: DNSSearch
        dns_server:
          type: array
          description: |-
            DNSServers is a set of DNS servers that will be used in the
            container's resolv.conf, replacing the host's DNS Servers which are
            used by default.
            Conflicts with UseImageResolvConf.
            Optional.
          items:
            $ref: '#/components/schemas/IP'
          x-go-name: DNSServers
        entrypoint:
          type: array
          description: |-
            Entrypoint is the container's entrypoint.
            If not given and Image is specified, this will be populated by the
            image's configuration.
            Optional.
          items:
            type: string
          x-go-name: Entrypoint
        env:
          type: object
          additionalProperties:
            type: string
          description: |-
            Env is a set of environment variables that will be set in the
            container.
            Optional.
          x-go-name: Env
        env_host:
          type: boolean
          description: |-
            EnvHost indicates that the host environment should be added to container
            Optional.
          x-go-name: EnvHost
        expose:
          type: object
          description: |-
            Expose is a number of ports that will be forwarded to the container
            if PublishExposedPorts is set.
            Expose is a map of uint16 (port number) to a string representing
            protocol. Allowed protocols are "tcp", "udp", and "sctp", or some
            combination of the three separated by commas.
            If protocol is set to "" we will assume TCP.
            Only available if NetNS is set to Bridge or Slirp, and
            PublishExposedPorts is set.
            Optional.
          x-go-name: Expose
        groups:
          type: array
          description: |-
            Groups are a list of supplemental groups the container's user will
            be granted access to.
            Optional.
          items:
            type: string
          x-go-name: Groups
        healthconfig:
          $ref: '#/components/schemas/Schema2HealthConfig'
        hostadd:
          type: array
          description: |-
            HostAdd is a set of hosts which will be added to the container's
            etc/hosts file.
            Conflicts with UseImageHosts.
            Optional.
          items:
            type: string
          x-go-name: HostAdd
        hostname:
          type: string
          description: |-
            Hostname is the container's hostname. If not set, the hostname will
            not be modified (if UtsNS is not private) or will be set to the
            container ID (if UtsNS is private).
            Conflicts with UtsNS if UtsNS is not set to private.
            Optional.
          x-go-name: Hostname
        httpproxy:
          type: boolean
          description: |-
            EnvHTTPProxy indicates that the http host proxy environment variables
            should be added to container
            Optional.
          x-go-name: HTTPProxy
        idmappings:
          $ref: '#/components/schemas/IDMappingOptions'
        image:
          type: string
          description: |-
            Image is the image the container will be based on. The image will be
            used as the container's root filesystem, and its environment vars,
            volumes, and other configuration will be applied to the container.
            Conflicts with Rootfs.
            At least one of Image or Rootfs must be specified.
          x-go-name: Image
        image_volume_mode:
          type: string
          description: |-
            ImageVolumeMode indicates how image volumes will be created.
            Supported modes are "ignore" (do not create), "tmpfs" (create as
            tmpfs), and "anonymous" (create as anonymous volumes).
            The default if unset is anonymous.
            Optional.
          x-go-name: ImageVolumeMode
        init:
          type: boolean
          description: |-
            Init specifies that an init binary will be mounted into the
            container, and will be used as PID1.
          x-go-name: Init
        init_path:
          type: string
          description: |-
            InitPath specifies the path to the init binary that will be added if
            Init is specified above. If not specified, the default set in the
            Libpod config will be used. Ignored if Init above is not set.
            Optional.
          x-go-name: InitPath
        ipcns:
          $ref: '#/components/schemas/Namespace'
        labels:
          type: object
          additionalProperties:
            type: string
          description: |-
            Labels are key-value pairs that are used to add metadata to
            containers.
            Optional.
          x-go-name: Labels
        log_configuration:
          $ref: '#/components/schemas/LogConfig'
        mounts:
          type: array
          description: |-
            Mounts are mounts that will be added to the container.
            These will supersede Image Volumes and VolumesFrom volumes where
            there are conflicts.
            Optional.
          items:
            $ref: '#/components/schemas/Mount'
          x-go-name: Mounts
        name:
          type: string
          description: |-
            Name is the name the container will be given.
            If no name is provided, one will be randomly generated.
            Optional.
          x-go-name: Name
        namespace:
          type: string
          description: |-
            Namespace is the libpod namespace the container will be placed in.
            Optional.
          x-go-name: Namespace
        netns:
          $ref: '#/components/schemas/Namespace'
        network_options:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: |-
            NetworkOptions are additional options for each network
            Optional.
          x-go-name: NetworkOptions
        no_new_privileges:
          type: boolean
          description: |-
            NoNewPrivileges is whether the container will set the no new
            privileges flag on create, which disables gaining additional
            privileges (e.g. via setuid) in the container.
          x-go-name: NoNewPrivileges
        oci_runtime:
          type: string
          description: |-
            OCIRuntime is the name of the OCI runtime that will be used to create
            the container.
            If not specified, the default will be used.
            Optional.
          x-go-name: OCIRuntime
        oom_score_adj:
          type: integer
          description: |-
            OOMScoreAdj adjusts the score used by the OOM killer to determine
            processes to kill for the container's process.
            Optional.
          format: int64
          x-go-name: OOMScoreAdj
        overlay_volumes:
          type: array
          description: |-
            Overlay volumes are named volumes that will be added to the container.
            Optional.
          items:
            $ref: '#/components/schemas/OverlayVolume'
          x-go-name: OverlayVolumes
        pidns:
          $ref: '#/components/schemas/Namespace'
        pod:
          type: string
          description: |-
            Pod is the ID of the pod the container will join.
            Optional.
          x-go-name: Pod
        portmappings:
          type: array
          description: |-
            PortBindings is a set of ports to map into the container.
            Only available if NetNS is set to bridge or slirp.
            Optional.
          items:
            $ref: '#/components/schemas/PortMapping'
          x-go-name: PortMappings
        privileged:
          type: boolean
          description: |-
            Privileged is whether the container is privileged.
            Privileged does the following:
            Adds all devices on the system to the container.
            Adds all capabilities to the container.
            Disables Seccomp, SELinux, and Apparmor confinement.
            (Though SELinux can be manually re-enabled).
            TODO: this conflicts with things.
            TODO: this does more.
          x-go-name: Privileged
        procfs_opts:
          type: array
          description: ProcOpts are the options used for the proc mount.
          items:
            type: string
          x-go-name: ProcOpts
        publish_image_ports:
          type: boolean
          description: |-
            PublishExposedPorts will publish ports specified in the image to
            random unused ports (guaranteed to be above 1024) on the host.
            This is based on ports set in Expose below, and any ports specified
            by the Image (if one is given).
            Only available if NetNS is set to Bridge or Slirp.
          x-go-name: PublishExposedPorts
        r_limits:
          type: array
          description: |-
            Rlimits are POSIX rlimits to apply to the container.
            Optional.
          items:
            $ref: '#/components/schemas/POSIXRlimit'
          x-go-name: Rlimits
        raw_image_name:
          type: string
          description: |-
            RawImageName is the user-specified and unprocessed input referring
            to a local or a remote image.
          x-go-name: RawImageName
        read_only_filesystem:
          type: boolean
          description: |-
            ReadOnlyFilesystem indicates that everything will be mounted
            as read-only
          x-go-name: ReadOnlyFilesystem
        remove:
          type: boolean
          description: |-
            Remove indicates if the container should be removed once it has been started
            and exits
          x-go-name: Remove
        resource_limits:
          $ref: '#/components/schemas/LinuxResources'
        restart_policy:
          type: string
          description: |-
            RestartPolicy is the container's restart policy - an action which
            will be taken when the container exits.
            If not given, the default policy, which does nothing, will be used.
            Optional.
          x-go-name: RestartPolicy
        restart_tries:
          type: integer
          description: |-
            RestartRetries is the number of attempts that will be made to restart
            the container.
            Only available when RestartPolicy is set to "on-failure".
            Optional.
          format: uint64
          x-go-name: RestartRetries
        rootfs:
          type: string
          description: |-
            Rootfs is the path to a directory that will be used as the
            container's root filesystem. No modification will be made to the
            directory, it will be directly mounted into the container as root.
            Conflicts with Image.
            At least one of Image or Rootfs must be specified.
          x-go-name: Rootfs
        rootfs_propagation:
          type: string
          description: |-
            RootfsPropagation is the rootfs propagation mode for the container.
            If not set, the default of rslave will be used.
            Optional.
          x-go-name: RootfsPropagation
        sdnotifyMode:
          type: string
          description: |-
            Determine how to handle the NOTIFY_SOCKET - do we participate or pass it through
            "container" - let the OCI runtime deal with it, advertise conmon's MAINPID
            "conmon-only" - advertise conmon's MAINPID, send READY when started, don't pass to OCI
            "ignore" - unset NOTIFY_SOCKET
          x-go-name: SdNotifyMode
        seccomp_policy:
          type: string
          description: |-
            SeccompPolicy determines which seccomp profile gets applied
            the container. valid values: empty,default,image
          x-go-name: SeccompPolicy
        seccomp_profile_path:
          type: string
          description: |-
            SeccompProfilePath is the path to a JSON file containing the
            container's Seccomp profile.
            If not specified, no Seccomp profile will be used.
            Optional.
          x-go-name: SeccompProfilePath
        selinux_opts:
          type: array
          description: |-
            SelinuxProcessLabel is the process label the container will use.
            If SELinux is enabled and this is not specified, a label will be
            automatically generated if not specified.
            Optional.
          items:
            type: string
          x-go-name: SelinuxOpts
        shm_size:
          type: integer
          description: |-
            ShmSize is the size of the tmpfs to mount in at /dev/shm, in bytes.
            Conflicts with ShmSize if IpcNS is not private.
            Optional.
          format: int64
          x-go-name: ShmSize
        static_ip:
          $ref: '#/components/schemas/IP'
        static_ipv6:
          $ref: '#/components/schemas/IP'
        static_mac:
          $ref: '#/components/schemas/HardwareAddr'
        stdin:
          type: boolean
          description: Stdin is whether the container will keep its STDIN open.
          x-go-name: Stdin
        stop_signal:
          $ref: '#/components/schemas/Signal'
        stop_timeout:
          type: integer
          description: |-
            StopTimeout is a timeout between the container's stop signal being
            sent and SIGKILL being sent.
            If not provided, the default will be used.
            If 0 is used, stop signal will not be sent, and SIGKILL will be sent
            instead.
            Optional.
          format: uint64
          x-go-name: StopTimeout
        sysctl:
          type: object
          additionalProperties:
            type: string
          description: Sysctl sets kernel parameters for the container
          x-go-name: Sysctl
        systemd:
          type: string
          description: |-
            Systemd is whether the container will be started in systemd mode.
            Valid options are "true", "false", and "always".
            "true" enables this mode only if the binary run in the container is
            sbin/init or systemd. "always" unconditionally enables systemd mode.
            "false" unconditionally disables systemd mode.
            If enabled, mounts and stop signal will be modified.
            If set to "always" or set to "true" and conditionally triggered,
            conflicts with StopSignal.
            If not specified, "false" will be assumed.
            Optional.
          x-go-name: Systemd
        terminal:
          type: boolean
          description: |-
            Terminal is whether the container will create a PTY.
            Optional.
          x-go-name: Terminal
        throttleReadBpsDevice:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LinuxThrottleDevice'
          description: IO read rate limit per cgroup per device, bytes per second
          x-go-name: ThrottleReadBpsDevice
        throttleReadIOPSDevice:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LinuxThrottleDevice'
          description: IO read rate limit per cgroup per device, IO per second
          x-go-name: ThrottleReadIOPSDevice
        throttleWriteBpsDevice:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LinuxThrottleDevice'
          description: IO write rate limit per cgroup per device, bytes per second
          x-go-name: ThrottleWriteBpsDevice
        throttleWriteIOPSDevice:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LinuxThrottleDevice'
          description: IO write rate limit per cgroup per device, IO per second
          x-go-name: ThrottleWriteIOPSDevice
        timezone:
          type: string
          description: |-
            Timezone is the timezone inside the container.
            Local means it has the same timezone as the host machine
          x-go-name: Timezone
        umask:
          type: string
          description: Umask is the umask the init process of the container will be
            run with.
          x-go-name: Umask
        unified:
          type: object
          additionalProperties:
            type: string
          description: |-
            CgroupConf are key-value options passed into the container runtime
            that are used to configure cgroup v2.
            Optional.
          x-go-name: CgroupConf
        use_image_hosts:
          type: boolean
          description: |-
            UseImageHosts indicates that /etc/hosts should not be managed by
            Podman, and instead sourced from the image.
            Conflicts with HostAdd.
          x-go-name: UseImageHosts
        use_image_resolve_conf:
          type: boolean
          description: |-
            UseImageResolvConf indicates that resolv.conf should not be managed
            by Podman, but instead sourced from the image.
            Conflicts with DNSServer, DNSSearch, DNSOption.
          x-go-name: UseImageResolvConf
        user:
          type: string
          description: |-
            User is the user the container will be run as.
            Can be given as a UID or a username; if a username, it will be
            resolved within the container, using the container's /etc/passwd.
            If unset, the container will be run as root.
            Optional.
          x-go-name: User
        userns:
          $ref: '#/components/schemas/Namespace'
        utsns:
          $ref: '#/components/schemas/Namespace'
        volumes:
          type: array
          description: |-
            Volumes are named volumes that will be added to the container.
            These will supersede Image Volumes and VolumesFrom volumes where
            there are conflicts.
            Optional.
          items:
            $ref: '#/components/schemas/NamedVolume'
          x-go-name: Volumes
        volumes_from:
          type: array
          description: |-
            VolumesFrom is a set of containers whose volumes will be added to
            this container. The name or ID of the container must be provided, and
            may optionally be followed by a : and then one or more
            comma-separated options. Valid options are 'ro', 'rw', and 'z'.
            Options will be used for all volumes sourced from the container.
          items:
            type: string
          x-go-name: VolumesFrom
        weightDevice:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LinuxWeightDevice'
          description: Weight per cgroup per device, can override BlkioWeight
          x-go-name: WeightDevice
        work_dir:
          type: string
          description: |-
            WorkDir is the container's working directory.
            If unset, the default, /, will be used.
            Optional.
          x-go-name: WorkDir
      description: |-
        SpecGenerator creates an OCI spec and Libpod configuration options to create
        a container based on the given configuration.
      x-go-package: github.com/containers/podman/pkg/specgen
    StoreInfo:
      type: object
      properties:
        configFile:
          type: string
          x-go-name: ConfigFile
        containerStore:
          $ref: '#/components/schemas/ContainerStore'
        graphDriverName:
          type: string
          x-go-name: GraphDriverName
        graphOptions:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          x-go-name: GraphOptions
        graphRoot:
          type: string
          x-go-name: GraphRoot
        graphStatus:
          type: object
          additionalProperties:
            type: string
          x-go-name: GraphStatus
        imageStore:
          $ref: '#/components/schemas/ImageStore'
        runRoot:
          type: string
          x-go-name: RunRoot
        volumePath:
          type: string
          x-go-name: VolumePath
      description: |-
        StoreInfo describes the container storage and its
        attributes
      example:
        graphStatus:
          key: graphStatus
        configFile: configFile
        containerStore:
          running: 4
          number: 3
          paused: 2
          stopped: 7
        graphRoot: graphRoot
        graphDriverName: graphDriverName
        volumePath: volumePath
        graphOptions:
          key: {}
        imageStore:
          number: 1
        runRoot: runRoot
      x-go-package: github.com/containers/podman/libpod/define
    StrSlice:
      title: StrSlice represents a string or an array of strings.
      type: array
      description: We need to override the json decoder to accept both options.
      items:
        type: string
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/strslice
      x-schema-name: StrSlice
    SystemDfContainerReport:
      type: object
      properties:
        Command:
          type: array
          items:
            type: string
        ContainerID:
          type: string
        Created:
          type: string
          format: date-time
        Image:
          type: string
        LocalVolumes:
          type: integer
          format: int64
        Names:
          type: string
        RWSize:
          type: integer
          format: int64
        Size:
          type: integer
          format: int64
        Status:
          type: string
      description: SystemDfContainerReport describes a container for use with df
      example:
        Names: Names
        Status: Status
        Command:
        - Command
        - Command
        ContainerID: ContainerID
        Size: 1
        RWSize: 6
        LocalVolumes: 0
        Image: Image
        Created: 2000-01-23T04:56:07.000+00:00
      x-go-package: github.com/containers/podman/pkg/domain/entities
    SystemDfImageReport:
      type: object
      properties:
        Containers:
          type: integer
          format: int64
        Created:
          type: string
          format: date-time
        ImageID:
          type: string
        Repository:
          type: string
        SharedSize:
          type: integer
          format: int64
        Size:
          type: integer
          format: int64
        Tag:
          type: string
        UniqueSize:
          type: integer
          format: int64
      description: SystemDfImageReport describes an image for use with df
      example:
        SharedSize: 5
        UniqueSize: 7
        Repository: Repository
        Size: 2
        Containers: 5
        ImageID: ImageID
        Tag: Tag
        Created: 2000-01-23T04:56:07.000+00:00
      x-go-package: github.com/containers/podman/pkg/domain/entities
    SystemDfVolumeReport:
      type: object
      properties:
        Links:
          type: integer
          format: int64
        ReclaimableSize:
          type: integer
          format: int64
        Size:
          type: integer
          format: int64
        VolumeName:
          type: string
      description: SystemDfVolumeReport describes a volume and its size
      example:
        VolumeName: VolumeName
        ReclaimableSize: 3
        Size: 2
        Links: 9
      x-go-package: github.com/containers/podman/pkg/domain/entities
    Task:
      type: object
      properties:
        EndpointID:
          type: string
        EndpointIP:
          type: string
        Info:
          type: object
          additionalProperties:
            type: string
        Name:
          type: string
      description: Task carries the information about one backend task
      example:
        EndpointID: EndpointID
        EndpointIP: EndpointIP
        Info:
          key: Info
        Name: Name
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/network
    ThrottleDevice:
      type: object
      properties:
        Path:
          type: string
        Rate:
          type: integer
          format: uint64
      description: ThrottleDevice is a structure that holds device:rate_per_second
        pair
      example:
        Path: Path
        Rate: 5
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/blkiodev
    Type:
      title: Type represents the type of a mount.
      type: string
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/mount
    UTSMode:
      title: UTSMode represents the UTS namespace of the container.
      type: string
      x-go-package: github.com/containers/podman/pkg/namespaces
    Ulimit:
      title: Ulimit is a human friendly version of Rlimit.
      type: object
      properties:
        Hard:
          type: integer
          format: int64
        Name:
          type: string
        Soft:
          type: integer
          format: int64
      example:
        Hard: 1
        Soft: 2
        Name: Name
      x-go-package: github.com/containers/podman/vendor/github.com/docker/go-units
    UserConfig:
      type: object
      properties:
        GroupAdd:
          type: array
          items:
            type: string
        IDMappings:
          $ref: '#/components/schemas/IDMappingOptions'
        User:
          type: string
        UsernsMode:
          $ref: '#/components/schemas/UsernsMode'
      description: UserConfig configures the user namespace for the container
      x-go-package: github.com/containers/podman/pkg/spec
    UsernsMode:
      title: UsernsMode represents userns mode in the container.
      type: string
      x-go-package: github.com/containers/podman/pkg/namespaces
    UtsConfig:
      type: object
      properties:
        HostAdd:
          type: array
          items:
            type: string
        Hostname:
          type: string
        NoHosts:
          type: boolean
        UtsMode:
          $ref: '#/components/schemas/UTSMode'
      description: UtsConfig configures the uts namespace for the container
      x-go-package: github.com/containers/podman/pkg/spec
    Version:
      type: object
      properties:
        APIVersion:
          type: string
        Built:
          type: integer
          format: int64
        BuiltTime:
          type: string
        GitCommit:
          type: string
        GoVersion:
          type: string
        OsArch:
          type: string
        Version:
          type: string
      description: Version is an output struct for API
      example:
        GitCommit: GitCommit
        APIVersion: APIVersion
        Version: Version
        Built: 1
        OsArch: OsArch
        BuiltTime: BuiltTime
        GoVersion: GoVersion
      x-go-package: github.com/containers/podman/libpod/define
    Volume:
      required:
      - Driver
      - Labels
      - Mountpoint
      - Name
      - Options
      - Scope
      type: object
      properties:
        CreatedAt:
          type: string
          description: Date/Time the volume was created.
        Driver:
          type: string
          description: Name of the volume driver used by the volume.
        Labels:
          type: object
          additionalProperties:
            type: string
          description: User-defined key/value metadata.
        Mountpoint:
          type: string
          description: Mount path of the volume on the host.
        Name:
          type: string
          description: Name of the volume.
        Options:
          type: object
          additionalProperties:
            type: string
          description: The driver specific options used when creating the volume.
        Scope:
          type: string
          description: |-
            The level at which the volume exists. Either `global` for cluster-wide,
            or `local` for machine level.
        Status:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          description: |-
            Low-level details about the volume, provided by the volume driver.
            Details are returned as a map with key/value pairs:
            `{"key":"value","key2":"value2"}`.

            The `Status` field is optional, and is omitted if the volume driver
            does not support this feature.
        UsageData:
          $ref: '#/components/schemas/VolumeUsageData'
      description: Volume volume
      example:
        Status:
          key: {}
        Options:
          key: Options
        Scope: Scope
        UsageData:
          RefCount: 0
          Size: 6
        CreatedAt: CreatedAt
        Driver: Driver
        Labels:
          key: Labels
        Mountpoint: Mountpoint
        Name: Name
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    VolumeCreate:
      type: object
      properties:
        Driver:
          type: string
          description: Volume driver to use
        Label:
          type: object
          additionalProperties:
            type: string
          description: User-defined key/value metadata.
        Name:
          type: string
          description: New volume's name. Can be left blank
        Options:
          type: object
          additionalProperties:
            type: string
          description: Mapping of driver options and values.
      x-go-name: VolumeCreateOptions
      x-go-package: github.com/containers/podman/pkg/domain/entities
    VolumeCreateBody:
      required:
      - Driver
      - DriverOpts
      - Labels
      - Name
      type: object
      properties:
        Driver:
          type: string
          description: Name of the volume driver to use.
        DriverOpts:
          type: object
          additionalProperties:
            type: string
          description: |-
            A mapping of driver options and values. These options are
            passed directly to the driver and are driver specific.
        Labels:
          type: object
          additionalProperties:
            type: string
          description: User-defined key/value metadata.
        Name:
          type: string
          description: The new volume's name. If not specified, Docker generates a
            name.
      description: VolumeCreateBody Volume configuration
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/volume
    VolumeInfo:
      required:
      - Driver
      - Mountpoint
      - Name
      - Options
      - Scope
      type: object
      properties:
        CreatedAt:
          type: string
          description: Date/Time the volume was created.
        Driver:
          type: string
          description: Name of the volume driver used by the volume. Only supports
            local driver
        Labels:
          type: object
          additionalProperties:
            type: string
          description: |-
            User-defined key/value metadata.
            Always included
        Mountpoint:
          type: string
          description: Mount path of the volume on the host.
        Name:
          type: string
          description: Name of the volume.
        Options:
          type: object
          additionalProperties:
            type: string
          description: The driver specific options used when creating the volume.
        Scope:
          type: string
          description: |-
            The level at which the volume exists.
            Libpod does not implement volume scoping, and this is provided solely for
            Docker compatibility. The value is only "local".
      description: VolumeInfo Volume list response
      example:
        Options:
          key: Options
        Scope: Scope
        CreatedAt: CreatedAt
        Driver: Driver
        Labels:
          key: Labels
        Mountpoint: Mountpoint
        Name: Name
      x-go-package: github.com/containers/podman/pkg/domain/entities
    VolumeListBody:
      type: object
      properties:
        Volumes:
          type: array
          items:
            $ref: '#/components/schemas/VolumeInfo'
      description: VolumeListBody Volume list response
      x-go-package: github.com/containers/podman/pkg/domain/entities
    VolumeListOKBody:
      required:
      - Volumes
      - Warnings
      type: object
      properties:
        Volumes:
          type: array
          description: List of volumes
          items:
            $ref: '#/components/schemas/Volume'
        Warnings:
          type: array
          description: Warnings that occurred when fetching the list of volumes.
          items:
            type: string
      description: VolumeListOKBody Volume list response
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/volume
    VolumePruneReport:
      type: object
      properties:
        Err:
          type: string
        Id:
          type: string
      example:
        Err: Err
        Id: Id
      x-go-package: github.com/containers/podman/pkg/domain/entities
    VolumeUsageData:
      required:
      - RefCount
      - Size
      type: object
      properties:
        RefCount:
          type: integer
          description: |-
            The number of containers referencing this volume. This field
            is set to `-1` if the reference-count is not available.
          format: int64
        Size:
          type: integer
          description: |-
            Amount of disk space used by the volume (in bytes). This information
            is only available for volumes created with the `"local"` volume
            driver. For volumes created with other volume drivers, this field
            is set to `-1` ("not available")
          format: int64
      description: |-
        VolumeUsageData Usage details about the volume. This information is used by the
        `GET /system/df` endpoint, and omitted in other endpoints.
      example:
        RefCount: 0
        Size: 6
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types
    WeightDevice:
      type: object
      properties:
        Path:
          type: string
        Weight:
          type: integer
          format: uint16
      description: WeightDevice is a structure that holds device:weight pair
      example:
        Path: Path
        Weight: 2
      x-go-package: github.com/containers/podman/vendor/github.com/docker/docker/api/types/blkiodev
    linuxBlockIODevice:
      type: object
      properties:
        major:
          type: integer
          description: Major is the device's major number.
          format: int64
          x-go-name: Major
        minor:
          type: integer
          description: Minor is the device's minor number.
          format: int64
          x-go-name: Minor
      description: linuxBlockIODevice holds major:minor format supported in blkio
        cgroup
      x-go-package: github.com/containers/podman/vendor/github.com/opencontainers/runtime-spec/specs-go
    inline_response_200:
      required:
      - stream
      type: object
      properties:
        stream:
          type: string
          description: output from build process
          example: |
            (build details...)
            Successfully built 8ba084515c724cbf90d447a63600c0a6
      example:
        stream: |
          (build details...)
          Successfully built 8ba084515c724cbf90d447a63600c0a6
    inline_response_400:
      type: object
      properties:
        cause:
          type: string
          description: API root cause formatted for automated parsing
          example: API root cause
          x-go-name: Because
        message:
          type: string
          description: human error message, formatted for a human to read
          example: human error message
          x-go-name: Message
        response:
          type: integer
          description: http response code
          format: int64
          x-go-name: ResponseCode
    body:
      type: object
      properties:
        AttachStderr:
          type: boolean
          description: Attach to stderr of the exec command
        AttachStdin:
          type: boolean
          description: Attach to stdin of the exec command
        AttachStdout:
          type: boolean
          description: Attach to stdout of the exec command
        Cmd:
          type: array
          description: Command to run, as a string or array of strings.
          items:
            type: string
        DetachKeys:
          type: string
          description: |
            "Override the key sequence for detaching a container. Format is a single character [a-Z] or ctrl-<value> where <value> is one of: a-z, @, ^, [, , or _."
        Env:
          type: array
          description: A list of environment variables in the form ["VAR=value", ...]
          items:
            type: string
        Privileged:
          type: boolean
          description: Runs the exec process with extended privileges
          default: false
        Tty:
          type: boolean
          description: Allocate a pseudo-TTY
        User:
          type: string
          description: |
            "The user, and optionally, group to run the exec process inside the container. Format is one of: user, user:group, uid, or uid:gid."
        WorkingDir:
          type: string
          description: The working directory for the exec process inside the container.
    body_1:
      type: object
      properties:
        AttachStderr:
          type: boolean
          description: Attach to stderr of the exec command
        AttachStdin:
          type: boolean
          description: Attach to stdin of the exec command
        AttachStdout:
          type: boolean
          description: Attach to stdout of the exec command
        Cmd:
          type: array
          description: Command to run, as a string or array of strings.
          items:
            type: string
        DetachKeys:
          type: string
          description: |
            "Override the key sequence for detaching a container. Format is a single character [a-Z] or ctrl-<value> where <value> is one of: a-z, @, ^, [, , or _."
        Env:
          type: array
          description: A list of environment variables in the form ["VAR=value", ...]
          items:
            type: string
        Privileged:
          type: boolean
          description: Runs the exec process with extended privileges
          default: false
        Tty:
          type: boolean
          description: Allocate a pseudo-TTY
        User:
          type: string
          description: |
            "The user, and optionally, group to run the exec process inside the container. Format is one of: user, user:group, uid, or uid:gid."
        WorkingDir:
          type: string
          description: The working directory for the exec process inside the container.
    inline_response_200_1:
      type: object
      properties:
        AppArmorProfile:
          type: string
        Args:
          type: array
          items:
            type: string
        Config:
          $ref: '#/components/schemas/Config'
        Created:
          type: string
        Driver:
          type: string
        ExecIDs:
          type: array
          items:
            type: string
        GraphDriver:
          $ref: '#/components/schemas/GraphDriverData'
        HostConfig:
          $ref: '#/components/schemas/HostConfig'
        HostnamePath:
          type: string
        HostsPath:
          type: string
        Id:
          type: string
          x-go-name: ID
        Image:
          type: string
        LogPath:
          type: string
        MountLabel:
          type: string
        Mounts:
          type: array
          items:
            $ref: '#/components/schemas/MountPoint'
        Name:
          type: string
        NetworkSettings:
          $ref: '#/components/schemas/NetworkSettings'
        Node:
          $ref: '#/components/schemas/ContainerNode'
        Path:
          type: string
        Platform:
          type: string
        ProcessLabel:
          type: string
        ResolvConfPath:
          type: string
        RestartCount:
          type: integer
          format: int64
        SizeRootFs:
          type: integer
          format: int64
        SizeRw:
          type: integer
          format: int64
        State:
          $ref: '#/components/schemas/ContainerState'
      example:
        Platform: Platform
        Config:
          User: User
          OpenStdin: true
          Env:
          - Env
          - Env
          Image: Image
          StdinOnce: true
          AttachStdout: true
          Shell: null
          Volumes:
            key: {}
          AttachStdin: true
          Domainname: Domainname
          Tty: true
          Cmd:
          - Cmd
          - Cmd
          StopTimeout: 1
          StopSignal: StopSignal
          Entrypoint: null
          AttachStderr: true
          ArgsEscaped: true
          Hostname: Hostname
          Labels:
            key: Labels
          Healthcheck:
            Test:
            - Test
            - Test
            Retries: 6
            Timeout: null
            Interval: 0
            StartPeriod: null
          MacAddress: MacAddress
          NetworkDisabled: true
          ExposedPorts:
            key: {}
          WorkingDir: WorkingDir
          OnBuild:
          - OnBuild
          - OnBuild
        Node:
          Memory: 0
          IP: IP
          Labels:
            key: Labels
          Cpus: 7
          ID: ID
          Addr: Addr
          Name: Name
        AppArmorProfile: AppArmorProfile
        Driver: Driver
        HostsPath: HostsPath
        HostnamePath: HostnamePath
        Image: Image
        Created: Created
        Name: Name
        MountLabel: MountLabel
        SizeRootFs: 6
        HostConfig:
          ReadonlyRootfs: true
          StorageOpt:
            key: StorageOpt
          BlkioWeightDevice:
          - Path: Path
            Weight: 2
          - Path: Path
            Weight: 2
          DnsOptions:
          - DnsOptions
          - DnsOptions
          Memory: 5
          CpuPeriod: 2
          Dns:
          - Dns
          - Dns
          PortBindings:
            key:
            - HostIp: HostIp
              HostPort: HostPort
            - HostIp: HostIp
              HostPort: HostPort
          VolumesFrom:
          - VolumesFrom
          - VolumesFrom
          MaskedPaths:
          - MaskedPaths
          - MaskedPaths
          Devices:
          - CgroupPermissions: CgroupPermissions
            PathInContainer: PathInContainer
            PathOnHost: PathOnHost
          - CgroupPermissions: CgroupPermissions
            PathInContainer: PathInContainer
            PathOnHost: PathOnHost
          MemorySwappiness: 6
          BlkioWeight: 5
          CgroupnsMode: CgroupnsMode
          Init: true
          Runtime: Runtime
          DeviceCgroupRules:
          - DeviceCgroupRules
          - DeviceCgroupRules
          UsernsMode: UsernsMode
          Ulimits:
          - Hard: 1
            Soft: 2
            Name: Name
          - Hard: 1
            Soft: 2
            Name: Name
          CpusetCpus: CpusetCpus
          MemoryReservation: 9
          Mounts:
          - destination: destination
            options:
            - options
            - options
            source: source
            type: type
          - destination: destination
            options:
            - options
            - options
            source: source
            type: type
          ExtraHosts:
          - ExtraHosts
          - ExtraHosts
          BlkioDeviceWriteIOps:
          - null
          - null
          ReadonlyPaths:
          - ReadonlyPaths
          - ReadonlyPaths
          UTSMode: UTSMode
          Cgroup: Cgroup
          CpuQuota: 4
          CpuRealtimeRuntime: 1
          DnsSearch:
          - DnsSearch
          - DnsSearch
          CpuShares: 1
          ContainerIDFile: ContainerIDFile
          OomScoreAdj: 9
          KernelMemory: 1
          LogConfig:
            path: path
            driver: driver
            options:
              key: options
          DeviceRequests:
          - DeviceIDs:
            - DeviceIDs
            - DeviceIDs
            Options:
              key: Options
            Capabilities:
            - - Capabilities
              - Capabilities
            - - Capabilities
              - Capabilities
            Driver: Driver
            Count: 1
          - DeviceIDs:
            - DeviceIDs
            - DeviceIDs
            Options:
              key: Options
            Capabilities:
            - - Capabilities
              - Capabilities
            - - Capabilities
              - Capabilities
            Driver: Driver
            Count: 1
          OomKillDisable: true
          IOMaximumBandwidth: 6
          Privileged: true
          Sysctls:
            key: Sysctls
          GroupAdd:
          - GroupAdd
          - GroupAdd
          AutoRemove: true
          KernelMemoryTCP: 4
          CpuPercent: 3
          ConsoleSize:
          - 7
          - 7
          IOMaximumIOps: 7
          CapAdd: null
          VolumeDriver: VolumeDriver
          CapDrop: null
          CpuCount: 9
          PublishAllPorts: true
          Tmpfs:
            key: Tmpfs
          CpuRealtimePeriod: 7
          IpcMode: IpcMode
          Binds:
          - Binds
          - Binds
          CpusetMems: CpusetMems
          BlkioDeviceWriteBps:
          - null
          - null
          RestartPolicy:
            MaximumRetryCount: 3
            Name: Name
          NetworkMode: NetworkMode
          PidMode: PidMode
          BlkioDeviceReadBps:
          - Path: Path
            Rate: 5
          - Path: Path
            Rate: 5
          CgroupParent: CgroupParent
          NanoCpus: 8
          MemorySwap: 9
          Isolation: Isolation
          Links:
          - Links
          - Links
          PidsLimit: 6
          BlkioDeviceReadIOps:
          - null
          - null
          SecurityOpt:
          - SecurityOpt
          - SecurityOpt
          ShmSize: 6
        Path: Path
        Args:
        - Args
        - Args
        Mounts:
        - Destination: Destination
          Type: Type
          Propagation: Propagation
          RW: true
          Mode: Mode
          Driver: Driver
          Source: Source
          Name: Name
        - Destination: Destination
          Type: Type
          Propagation: Propagation
          RW: true
          Mode: Mode
          Driver: Driver
          Source: Source
          Name: Name
        ProcessLabel: ProcessLabel
        SizeRw: 0
        GraphDriver:
          Data:
            key: Data
          Name: Name
        RestartCount: 7
        NetworkSettings:
          HairpinMode: true
          Networks:
            key:
              GlobalIPv6Address: GlobalIPv6Address
              GlobalIPv6PrefixLen: 6
              IPPrefixLen: 3
              Aliases:
              - Aliases
              - Aliases
              MacAddress: MacAddress
              NetworkID: NetworkID
              IPAMConfig:
                LinkLocalIPs:
                - LinkLocalIPs
                - LinkLocalIPs
                IPv6Address: IPv6Address
                IPv4Address: IPv4Address
              DriverOpts:
                key: DriverOpts
              Gateway: Gateway
              EndpointID: EndpointID
              Links:
              - Links
              - Links
              IPv6Gateway: IPv6Gateway
              IPAddress: IPAddress
          SandboxKey: SandboxKey
          GlobalIPv6Address: GlobalIPv6Address
          Ports: null
          GlobalIPv6PrefixLen: 6
          IPPrefixLen: 6
          MacAddress: MacAddress
          SandboxID: SandboxID
          LinkLocalIPv6Address: LinkLocalIPv6Address
          LinkLocalIPv6PrefixLen: 5
          Gateway: Gateway
          EndpointID: EndpointID
          SecondaryIPv6Addresses:
          - null
          - null
          IPv6Gateway: IPv6Gateway
          SecondaryIPAddresses:
          - PrefixLen: 3
            Addr: Addr
          - PrefixLen: 3
            Addr: Addr
          IPAddress: IPAddress
          Bridge: Bridge
        ResolvConfPath: ResolvConfPath
        State:
          Status: Status
          Restarting: true
          Dead: true
          Health:
            Status: Status
            Log:
            - Start: 2000-01-23T04:56:07.000+00:00
              ExitCode: 7
              Output: Output
              End: 2000-01-23T04:56:07.000+00:00
            - Start: 2000-01-23T04:56:07.000+00:00
              ExitCode: 7
              Output: Output
              End: 2000-01-23T04:56:07.000+00:00
            FailingStreak: 8
          ExitCode: 4
          Running: true
          Error: Error
          FinishedAt: FinishedAt
          OOMKilled: true
          Pid: 3
          StartedAt: StartedAt
          Paused: true
        ExecIDs:
        - ExecIDs
        - ExecIDs
        Id: Id
        LogPath: LogPath
    inline_response_200_2:
      required:
      - Processes
      - Titles
      type: object
      properties:
        Processes:
          type: array
          description: |-
            Each process running in the container, where each is process
            is an array of values corresponding to the titles.
          items:
            type: array
            items:
              type: string
        Titles:
          type: array
          description: The ps column titles
          items:
            type: string
      example:
        Processes:
        - - Processes
          - Processes
        - - Processes
          - Processes
        Titles:
        - Titles
        - Titles
    inline_response_200_3:
      type: object
      properties:
        Error:
          $ref: '#/components/schemas/inline_response_200_3_Error'
        StatusCode:
          type: integer
          description: container exit code
          format: int64
      example:
        Error:
          Message: Message
        StatusCode: 0
    inline_response_201:
      type: object
      properties:
        Id:
          type: string
          description: ID of the container created
          x-go-name: ID
        Warnings:
          type: array
          description: Warnings during container creation
          items:
            type: string
      example:
        Id: Id
        Warnings:
        - Warnings
        - Warnings
    body_2:
      type: object
      properties:
        Detach:
          type: boolean
          description: Detach from the command. Not presently supported.
        Tty:
          type: boolean
          description: Allocate a pseudo-TTY. Presently ignored.
    body_3:
      type: object
      properties:
        Detach:
          type: boolean
          description: Detach from the command. Not presently supported.
        Tty:
          type: boolean
          description: Allocate a pseudo-TTY. Presently ignored.
    inline_response_200_4:
      type: object
      properties:
        Comment:
          type: string
        Created:
          type: integer
          format: int64
        CreatedBy:
          type: string
        Id:
          type: string
          x-go-name: ID
        Size:
          type: integer
          format: int64
        Tags:
          type: array
          items:
            type: string
      example:
        Comment: Comment
        CreatedBy: CreatedBy
        Size: 6
        Id: Id
        Tags:
        - Tags
        - Tags
        Created: 0
    inline_response_200_5:
      type: object
      properties:
        Architecture:
          type: string
        Author:
          type: string
        Comment:
          type: string
        Config:
          $ref: '#/components/schemas/Config'
        Container:
          type: string
        ContainerConfig:
          $ref: '#/components/schemas/Config'
        Created:
          type: string
        DockerVersion:
          type: string
        GraphDriver:
          $ref: '#/components/schemas/GraphDriverData'
        Id:
          type: string
          x-go-name: ID
        Metadata:
          $ref: '#/components/schemas/ImageMetadata'
        Os:
          type: string
        OsVersion:
          type: string
        Parent:
          type: string
        RepoDigests:
          type: array
          items:
            type: string
        RepoTags:
          type: array
          items:
            type: string
        RootFS:
          $ref: '#/components/schemas/RootFS'
        Size:
          type: integer
          format: int64
        Variant:
          type: string
        VirtualSize:
          type: integer
          format: int64
      example:
        RepoDigests:
        - RepoDigests
        - RepoDigests
        Comment: Comment
        VirtualSize: 6
        Architecture: Architecture
        Os: Os
        Parent: Parent
        Config:
          User: User
          OpenStdin: true
          Env:
          - Env
          - Env
          Image: Image
          StdinOnce: true
          AttachStdout: true
          Shell: null
          Volumes:
            key: {}
          AttachStdin: true
          Domainname: Domainname
          Tty: true
          Cmd:
          - Cmd
          - Cmd
          StopTimeout: 1
          StopSignal: StopSignal
          Entrypoint: null
          AttachStderr: true
          ArgsEscaped: true
          Hostname: Hostname
          Labels:
            key: Labels
          Healthcheck:
            Test:
            - Test
            - Test
            Retries: 6
            Timeout: null
            Interval: 0
            StartPeriod: null
          MacAddress: MacAddress
          NetworkDisabled: true
          ExposedPorts:
            key: {}
          WorkingDir: WorkingDir
          OnBuild:
          - OnBuild
          - OnBuild
        Size: 0
        OsVersion: OsVersion
        Metadata:
          LastTagTime: 2000-01-23T04:56:07.000+00:00
        GraphDriver:
          Data:
            key: Data
          Name: Name
        Created: Created
        ContainerConfig: null
        Variant: Variant
        Container: Container
        RootFS:
          Type: Type
          Layers:
          - Layers
          - Layers
        DockerVersion: DockerVersion
        RepoTags:
        - RepoTags
        - RepoTags
        Author: Author
        Id: Id
    inline_response_200_6:
      type: object
      properties:
        Automated:
          type: string
          description: Automated indicates if the image was created by an automated
            build.
        Description:
          type: string
          description: Description of the image.
        Index:
          type: string
          description: Index is the image index (e.g., "docker.io" or "quay.io")
        Name:
          type: string
          description: Name is the canoncical name of the image (e.g., "docker.io/library/alpine").
        Official:
          type: string
          description: Official indicates if it's an official image.
        Stars:
          type: integer
          description: Stars is the number of stars of the image.
          format: int64
      example:
        Description: Description
        Automated: Automated
        Stars: 0
        Official: Official
        Index: Index
        Name: Name
    inline_response_200_7:
      type: object
      properties:
        FailingStreak:
          type: integer
          description: FailingStreak is the number of consecutive failed healthchecks
          format: int64
        Log:
          type: array
          description: Log describes healthcheck attempts and results
          items:
            $ref: '#/components/schemas/HealthCheckLog'
        Status:
          type: string
          description: Status healthy or unhealthy
      example:
        Status: Status
        Log:
        - Start: Start
          ExitCode: 6
          Output: Output
          End: End
        - Start: Start
          ExitCode: 6
          Output: Output
          End: End
        FailingStreak: 0
    body_4:
      type: object
      properties:
        AttachStderr:
          type: boolean
          description: Attach to stderr of the exec command
        AttachStdin:
          type: boolean
          description: Attach to stdin of the exec command
        AttachStdout:
          type: boolean
          description: Attach to stdout of the exec command
        Cmd:
          type: array
          description: Command to run, as a string or array of strings.
          items:
            type: string
        DetachKeys:
          type: string
          description: |
            "Override the key sequence for detaching a container. Format is a single character [a-Z] or ctrl-<value> where <value> is one of: a-z, @, ^, [, , or _."
        Env:
          type: array
          description: A list of environment variables in the form ["VAR=value", ...]
          items:
            type: string
        Privileged:
          type: boolean
          description: Runs the exec process with extended privileges
          default: false
        Tty:
          type: boolean
          description: Allocate a pseudo-TTY
        User:
          type: string
          description: |
            "The user, and optionally, group to run the exec process inside the container. Format is one of: user, user:group, uid, or uid:gid."
        WorkingDir:
          type: string
          description: The working directory for the exec process inside the container.
    body_5:
      type: object
      properties:
        AttachStderr:
          type: boolean
          description: Attach to stderr of the exec command
        AttachStdin:
          type: boolean
          description: Attach to stdin of the exec command
        AttachStdout:
          type: boolean
          description: Attach to stdout of the exec command
        Cmd:
          type: array
          description: Command to run, as a string or array of strings.
          items:
            type: string
        DetachKeys:
          type: string
          description: |
            "Override the key sequence for detaching a container. Format is a single character [a-Z] or ctrl-<value> where <value> is one of: a-z, @, ^, [, , or _."
        Env:
          type: array
          description: A list of environment variables in the form ["VAR=value", ...]
          items:
            type: string
        Privileged:
          type: boolean
          description: Runs the exec process with extended privileges
          default: false
        Tty:
          type: boolean
          description: Allocate a pseudo-TTY
        User:
          type: string
          description: |
            "The user, and optionally, group to run the exec process inside the container. Format is one of: user, user:group, uid, or uid:gid."
        WorkingDir:
          type: string
          description: The working directory for the exec process inside the container.
    inline_response_200_8:
      type: object
      properties:
        AppArmorProfile:
          type: string
        Args:
          type: array
          items:
            type: string
        BoundingCaps:
          type: array
          items:
            type: string
        Config:
          $ref: '#/components/schemas/InspectContainerConfig'
        ConmonPidFile:
          type: string
        Created:
          type: string
          format: date-time
        Dependencies:
          type: array
          items:
            type: string
        Driver:
          type: string
        EffectiveCaps:
          type: array
          items:
            type: string
        ExecIDs:
          type: array
          items:
            type: string
        ExitCommand:
          type: array
          items:
            type: string
        GraphDriver:
          $ref: '#/components/schemas/Data'
        HostConfig:
          $ref: '#/components/schemas/InspectContainerHostConfig'
        HostnamePath:
          type: string
        HostsPath:
          type: string
        Id:
          type: string
          x-go-name: ID
        Image:
          type: string
        ImageName:
          type: string
        IsInfra:
          type: boolean
        LogPath:
          type: string
        LogTag:
          type: string
        MountLabel:
          type: string
        Mounts:
          type: array
          items:
            $ref: '#/components/schemas/InspectMount'
        Name:
          type: string
        Namespace:
          type: string
        NetworkSettings:
          $ref: '#/components/schemas/InspectNetworkSettings'
        OCIConfigPath:
          type: string
        OCIRuntime:
          type: string
        Path:
          type: string
        Pod:
          type: string
        ProcessLabel:
          type: string
        ResolvConfPath:
          type: string
        RestartCount:
          type: integer
          format: int32
        Rootfs:
          type: string
        SizeRootFs:
          type: integer
          format: int64
        SizeRw:
          type: integer
          format: int64
        State:
          $ref: '#/components/schemas/InspectContainerState'
        StaticDir:
          type: string
      example:
        StaticDir: StaticDir
        Config:
          Timezone: Timezone
          Umask: Umask
          StopSignal: 1
          CreateCommand:
          - CreateCommand
          - CreateCommand
          User: User
          Entrypoint: Entrypoint
          AttachStderr: true
          SystemdMode: true
          Hostname: Hostname
          Labels:
            key: Labels
          OpenStdin: true
          Healthcheck:
            Test:
            - Test
            - Test
            Retries: 6
            Timeout: null
            Interval: 0
            StartPeriod: null
          Env:
          - Env
          - Env
          Image: Image
          StdinOnce: true
          AttachStdout: true
          WorkingDir: WorkingDir
          Annotations:
            key: Annotations
          Volumes:
            key: {}
          OnBuild: OnBuild
          AttachStdin: true
          Domainname: Domainname
          Tty: true
          Cmd:
          - Cmd
          - Cmd
        AppArmorProfile: AppArmorProfile
        Driver: Driver
        HostsPath: HostsPath
        HostnamePath: HostnamePath
        Image: Image
        Created: 2000-01-23T04:56:07.000+00:00
        Name: Name
        OCIRuntime: OCIRuntime
        MountLabel: MountLabel
        SizeRootFs: 3
        BoundingCaps:
        - BoundingCaps
        - BoundingCaps
        ConmonPidFile: ConmonPidFile
        HostConfig:
          ReadonlyRootfs: true
          DiskQuota: 1
          BlkioWeightDevice:
          - Path: Path
            Weight: 2
          - Path: Path
            Weight: 2
          DnsOptions:
          - DnsOptions
          - DnsOptions
          Memory: 4
          CpuPeriod: 2
          Dns:
          - Dns
          - Dns
          PortBindings:
            key:
            - HostIp: HostIp
              HostPort: HostPort
            - HostIp: HostIp
              HostPort: HostPort
          VolumesFrom:
          - VolumesFrom
          - VolumesFrom
          Devices:
          - CgroupPermissions: CgroupPermissions
            PathInContainer: PathInContainer
            PathOnHost: PathOnHost
          - CgroupPermissions: CgroupPermissions
            PathInContainer: PathInContainer
            PathOnHost: PathOnHost
          MemorySwappiness: 9
          BlkioWeight: 5
          CgroupMode: CgroupMode
          Init: true
          Runtime: Runtime
          UsernsMode: UsernsMode
          Ulimits:
          - Hard: 6
            Soft: 1
            Name: Name
          - Hard: 6
            Soft: 1
            Name: Name
          CpusetCpus: CpusetCpus
          MemoryReservation: 5
          ExtraHosts:
          - ExtraHosts
          - ExtraHosts
          BlkioDeviceWriteIOps:
          - null
          - null
          Cgroups: Cgroups
          UTSMode: UTSMode
          Cgroup: Cgroup
          CpuQuota: 4
          CpuRealtimeRuntime: 1
          DnsSearch:
          - DnsSearch
          - DnsSearch
          CgroupConf:
            key: CgroupConf
          CpuShares: 1
          ContainerIDFile: ContainerIDFile
          OomScoreAdj: 8
          KernelMemory: 1
          LogConfig:
            Type: Type
            Config:
              key: Config
          OomKillDisable: true
          IOMaximumBandwidth: 6
          Privileged: true
          GroupAdd:
          - GroupAdd
          - GroupAdd
          AutoRemove: true
          CpuPercent: 3
          ConsoleSize:
          - 7
          - 7
          IOMaximumIOps: 7
          CapAdd:
          - CapAdd
          - CapAdd
          VolumeDriver: VolumeDriver
          CapDrop:
          - CapDrop
          - CapDrop
          CpuCount: 9
          PublishAllPorts: true
          Tmpfs:
            key: Tmpfs
          CpuRealtimePeriod: 7
          IpcMode: IpcMode
          Binds:
          - Binds
          - Binds
          CpusetMems: CpusetMems
          BlkioDeviceWriteBps:
          - null
          - null
          RestartPolicy:
            MaximumRetryCount: 6
            Name: Name
          NetworkMode: NetworkMode
          PidMode: PidMode
          BlkioDeviceReadBps:
          - Path: Path
            Rate: 5
          - Path: Path
            Rate: 5
          CgroupParent: CgroupParent
          NanoCpus: 6
          MemorySwap: 9
          Isolation: Isolation
          Links:
          - Links
          - Links
          PidsLimit: 9
          BlkioDeviceReadIOps:
          - null
          - null
          SecurityOpt:
          - SecurityOpt
          - SecurityOpt
          ShmSize: 3
        OCIConfigPath: OCIConfigPath
        Dependencies:
        - Dependencies
        - Dependencies
        Path: Path
        Args:
        - Args
        - Args
        EffectiveCaps:
        - EffectiveCaps
        - EffectiveCaps
        Mounts:
        - Destination: Destination
          Options:
          - Options
          - Options
          Type: Type
          Propagation: Propagation
          RW: true
          Mode: Mode
          Driver: Driver
          Source: Source
          Name: Name
        - Destination: Destination
          Options:
          - Options
          - Options
          Type: Type
          Propagation: Propagation
          RW: true
          Mode: Mode
          Driver: Driver
          Source: Source
          Name: Name
        ProcessLabel: ProcessLabel
        ExitCommand:
        - ExitCommand
        - ExitCommand
        Pod: Pod
        SizeRw: 7
        LogTag: LogTag
        GraphDriver:
          Data:
            key: Data
          Name: Name
        Namespace: Namespace
        RestartCount: 3
        ImageName: ImageName
        NetworkSettings:
          HairpinMode: true
          Networks:
            key:
              GlobalIPv6Address: GlobalIPv6Address
              GlobalIPv6PrefixLen: 5
              IPPrefixLen: 6
              AdditionalMACAddresses:
              - AdditionalMACAddresses
              - AdditionalMACAddresses
              MacAddress: MacAddress
              NetworkID: NetworkID
              IPAMConfig:
                key: IPAMConfig
              DriverOpts:
                key: DriverOpts
              Gateway: Gateway
              EndpointID: EndpointID
              Links:
              - Links
              - Links
              SecondaryIPv6Addresses:
              - SecondaryIPv6Addresses
              - SecondaryIPv6Addresses
              IPv6Gateway: IPv6Gateway
              SecondaryIPAddresses:
              - SecondaryIPAddresses
              - SecondaryIPAddresses
              IPAddress: IPAddress
          SandboxKey: SandboxKey
          GlobalIPv6Address: GlobalIPv6Address
          Ports:
            key:
            - null
            - null
          GlobalIPv6PrefixLen: 2
          IPPrefixLen: 6
          AdditionalMACAddresses:
          - AdditionalMACAddresses
          - AdditionalMACAddresses
          MacAddress: MacAddress
          SandboxID: SandboxID
          LinkLocalIPv6Address: LinkLocalIPv6Address
          LinkLocalIPv6PrefixLen: 6
          Gateway: Gateway
          EndpointID: EndpointID
          SecondaryIPv6Addresses:
          - SecondaryIPv6Addresses
          - SecondaryIPv6Addresses
          IPv6Gateway: IPv6Gateway
          SecondaryIPAddresses:
          - SecondaryIPAddresses
          - SecondaryIPAddresses
          IPAddress: IPAddress
          Bridge: Bridge
        Rootfs: Rootfs
        ResolvConfPath: ResolvConfPath
        State:
          Status: Status
          Dead: true
          ExitCode: 7
          ConmonPid: 0
          Error: Error
          OciVersion: OciVersion
          Pid: 0
          Healthcheck:
            Status: Status
            Log:
            - Start: Start
              ExitCode: 6
              Output: Output
              End: End
            - Start: Start
              ExitCode: 6
              Output: Output
              End: End
            FailingStreak: 6
          Restarting: true
          Running: true
          FinishedAt: 2000-01-23T04:56:07.000+00:00
          OOMKilled: true
          StartedAt: 2000-01-23T04:56:07.000+00:00
          Paused: true
        ExecIDs:
        - ExecIDs
        - ExecIDs
        IsInfra: true
        Id: Id
        LogPath: LogPath
    body_6:
      type: object
      properties:
        Detach:
          type: boolean
          description: Detach from the command. Not presently supported.
        Tty:
          type: boolean
          description: Allocate a pseudo-TTY. Presently ignored.
    body_7:
      type: object
      properties:
        Detach:
          type: boolean
          description: Detach from the command. Not presently supported.
        Tty:
          type: boolean
          description: Allocate a pseudo-TTY. Presently ignored.
    inline_response_200_9:
      type: object
      properties:
        Annotations:
          type: object
          additionalProperties:
            type: string
        Architecture:
          type: string
        Author:
          type: string
        Comment:
          type: string
        Config:
          $ref: '#/components/schemas/ImageConfig'
        Created:
          type: string
          format: date-time
        Digest:
          $ref: '#/components/schemas/Digest'
        GraphDriver:
          $ref: '#/components/schemas/Data'
        Healthcheck:
          $ref: '#/components/schemas/Schema2HealthConfig'
        History:
          type: array
          items:
            $ref: '#/components/schemas/History'
        Id:
          type: string
          x-go-name: ID
        Labels:
          type: object
          additionalProperties:
            type: string
        ManifestType:
          type: string
        NamesHistory:
          type: array
          items:
            type: string
        Os:
          type: string
        Parent:
          type: string
        RepoDigests:
          type: array
          items:
            type: string
        RepoTags:
          type: array
          items:
            type: string
        RootFS:
          $ref: '#/components/schemas/RootFS'
        Size:
          type: integer
          format: int64
        User:
          type: string
        Version:
          type: string
        VirtualSize:
          type: integer
          format: int64
      example:
        NamesHistory:
        - NamesHistory
        - NamesHistory
        RepoDigests:
        - RepoDigests
        - RepoDigests
        Comment: Comment
        VirtualSize: 6
        ManifestType: ManifestType
        User: User
        Architecture: Architecture
        Os: Os
        Digest: Digest
        Parent: Parent
        Config:
          WorkingDir: WorkingDir
          StopSignal: StopSignal
          User: User
          Volumes:
            key: {}
          Entrypoint:
          - Entrypoint
          - Entrypoint
          Labels:
            key: Labels
          Cmd:
          - Cmd
          - Cmd
          Env:
          - Env
          - Env
          ExposedPorts:
            key: {}
        Size: 0
        Labels:
          key: Labels
        GraphDriver:
          Data:
            key: Data
          Name: Name
        Healthcheck:
          Test:
          - Test
          - Test
          Retries: 6
          Timeout: null
          Interval: 0
          StartPeriod: null
        History:
        - author: author
          created: 2000-01-23T04:56:07.000+00:00
          empty_layer: true
          comment: comment
          created_by: created_by
        - author: author
          created: 2000-01-23T04:56:07.000+00:00
          empty_layer: true
          comment: comment
          created_by: created_by
        Created: 2000-01-23T04:56:07.000+00:00
        RootFS:
          Type: Type
          Layers:
          - Layers
          - Layers
        Annotations:
          key: Annotations
        RepoTags:
        - RepoTags
        - RepoTags
        Version: Version
        Author: Author
        Id: Id
    inline_response_200_10:
      type: object
      properties:
        id:
          type: string
          x-go-name: ID
        layers:
          type: array
          items:
            $ref: '#/components/schemas/ImageLayer'
          x-go-name: Layers
        size:
          type: string
          x-go-name: Size
        tags:
          type: array
          items:
            type: string
          x-go-name: Tags
      example:
        size: size
        layers:
        - {}
        - {}
        id: id
        tags:
        - tags
        - tags
    body_8:
      required:
      - upload
      properties:
        upload:
          type: string
          description: tarball for imported image
          format: binary
    body_9:
      required:
      - upload
      properties:
        upload:
          type: string
          description: tarball for imported image
          format: binary
    body_10:
      required:
      - upload
      properties:
        upload:
          type: string
          description: tarball of container image
          format: binary
    body_11:
      required:
      - upload
      properties:
        upload:
          type: string
          description: tarball of container image
          format: binary
    inline_response_200_11:
      type: object
      properties:
        CgroupParent:
          type: string
          description: CgroupParent is the parent of the pod's CGroup.
        CgroupPath:
          type: string
          description: CgroupPath is the path to the pod's CGroup.
        Containers:
          type: array
          description: |-
            Containers gives a brief summary of all containers in the pod and
            their current status.
          items:
            $ref: '#/components/schemas/InspectPodContainerInfo'
        CreateCgroup:
          type: boolean
          description: |-
            CreateCgroup is whether this pod will create its own CGroup to group
            containers under.
        CreateCommand:
          type: array
          description: |-
            CreateCommand is the full command plus arguments of the process the
            container has been created with.
          items:
            type: string
        CreateInfra:
          type: boolean
          description: |-
            CreateInfra is whether this pod will create an infra container to
            share namespaces.
        Created:
          type: string
          description: Created is the time when the pod was created.
          format: date-time
        Hostname:
          type: string
          description: Hostname is the hostname that the pod will set.
        Id:
          type: string
          description: ID is the ID of the pod.
          x-go-name: ID
        InfraConfig:
          $ref: '#/components/schemas/InspectPodInfraConfig'
        InfraContainerID:
          type: string
          description: |-
            InfraContainerID is the ID of the pod's infra container, if one is
            present.
        Labels:
          type: object
          additionalProperties:
            type: string
          description: |-
            Labels is a set of key-value labels that have been applied to the
            pod.
        Name:
          type: string
          description: Name is the name of the pod.
        Namespace:
          type: string
          description: Namespace is the Libpod namespace the pod is placed in.
        NumContainers:
          type: integer
          description: |-
            NumContainers is the number of containers in the pod, including the
            infra container.
          format: uint64
        SharedNamespaces:
          type: array
          description: |-
            SharedNamespaces contains a list of namespaces that will be shared by
            containers within the pod. Can only be set if CreateInfra is true.
          items:
            type: string
        State:
          type: string
          description: State represents the current state of the pod.
      example:
        InfraConfig:
          NetworkOptions:
            key:
            - NetworkOptions
            - NetworkOptions
          Networks:
          - Networks
          - Networks
          DNSOption:
          - DNSOption
          - DNSOption
          NoManageHosts: true
          PortBindings:
            key:
            - HostIp: HostIp
              HostPort: HostPort
            - HostIp: HostIp
              HostPort: HostPort
          DNSServer:
          - DNSServer
          - DNSServer
          StaticIP:
          - 0
          - 0
          DNSSearch:
          - DNSSearch
          - DNSSearch
          HostNetwork: true
          HostAdd:
          - HostAdd
          - HostAdd
          NoManageResolvConf: true
          StaticMAC:
          - 6
          - 6
        CreateCommand:
        - CreateCommand
        - CreateCommand
        Containers:
        - State: State
          Id: Id
          Name: Name
        - State: State
          Id: Id
          Name: Name
        CreateCgroup: true
        Hostname: Hostname
        SharedNamespaces:
        - SharedNamespaces
        - SharedNamespaces
        Labels:
          key: Labels
        Namespace: Namespace
        NumContainers: 1
        Created: 2000-01-23T04:56:07.000+00:00
        Name: Name
        CgroupParent: CgroupParent
        CreateInfra: true
        CgroupPath: CgroupPath
        State: State
        Id: Id
        InfraContainerID: InfraContainerID
    inline_response_200_12:
      type: object
      properties:
        Containers:
          type: array
          items:
            $ref: '#/components/schemas/SystemDfContainerReport'
        Images:
          type: array
          items:
            $ref: '#/components/schemas/SystemDfImageReport'
        Volumes:
          type: array
          items:
            $ref: '#/components/schemas/SystemDfVolumeReport'
      example:
        Volumes:
        - VolumeName: VolumeName
          ReclaimableSize: 3
          Size: 2
          Links: 9
        - VolumeName: VolumeName
          ReclaimableSize: 3
          Size: 2
          Links: 9
        Images:
        - SharedSize: 5
          UniqueSize: 7
          Repository: Repository
          Size: 2
          Containers: 5
          ImageID: ImageID
          Tag: Tag
          Created: 2000-01-23T04:56:07.000+00:00
        - SharedSize: 5
          UniqueSize: 7
          Repository: Repository
          Size: 2
          Containers: 5
          ImageID: ImageID
          Tag: Tag
          Created: 2000-01-23T04:56:07.000+00:00
        Containers:
        - Names: Names
          Status: Status
          Command:
          - Command
          - Command
          ContainerID: ContainerID
          Size: 1
          RWSize: 6
          LocalVolumes: 0
          Image: Image
          Created: 2000-01-23T04:56:07.000+00:00
        - Names: Names
          Status: Status
          Command:
          - Command
          - Command
          ContainerID: ContainerID
          Size: 1
          RWSize: 6
          LocalVolumes: 0
          Image: Image
          Created: 2000-01-23T04:56:07.000+00:00
    inline_response_200_13:
      type: object
      properties:
        Err:
          type: object
          additionalProperties:
            type: string
        ID:
          type: object
          additionalProperties:
            type: integer
            format: int64
        PodPruneReport:
          type: array
          items:
            $ref: '#/components/schemas/PodPruneReport'
        Report:
          $ref: '#/components/schemas/Report'
        Size:
          type: integer
          format: int64
        VolumePruneReport:
          type: array
          items:
            $ref: '#/components/schemas/VolumePruneReport'
      example:
        Err:
          key: Err
        Report:
          Err:
            key: Err
          Id:
          - Id
          - Id
        Size: 6
        PodPruneReport:
        - Err: Err
          Id: Id
        - Err: Err
          Id: Id
        ID:
          key: 0
        VolumePruneReport:
        - Err: Err
          Id: Id
        - Err: Err
          Id: Id
    inline_response_200_14:
      type: object
      properties:
        Client:
          $ref: '#/components/schemas/Version'
        Server:
          $ref: '#/components/schemas/Version'
      example:
        Server: null
        Client:
          GitCommit: GitCommit
          APIVersion: APIVersion
          Version: Version
          Built: 1
          OsArch: OsArch
          BuiltTime: BuiltTime
          GoVersion: GoVersion
    inline_response_200_15:
      type: object
      properties:
        Anonymous:
          type: boolean
          description: |-
            Anonymous indicates that the volume was created as an anonymous
            volume for a specific container, and will be be removed when any
            container using it is removed.
        CreatedAt:
          type: string
          description: |-
            CreatedAt is the date and time the volume was created at. This is not
            stored for older Libpod volumes; if so, it will be omitted.
          format: date-time
        Driver:
          type: string
          description: |-
            Driver is the driver used to create the volume.
            This will be properly implemented in a future version.
        GID:
          type: integer
          description: GID is the GID that the volume was created with.
          format: int64
        Labels:
          type: object
          additionalProperties:
            type: string
          description: |-
            Labels includes the volume's configured labels, key:value pairs that
            can be passed during volume creation to provide information for third
            party tools.
        Mountpoint:
          type: string
          description: Mountpoint is the path on the host where the volume is mounted.
        Name:
          type: string
          description: Name is the name of the volume.
        Options:
          type: object
          additionalProperties:
            type: string
          description: |-
            Options is a set of options that were used when creating the volume.
            It is presently not used.
        Scope:
          type: string
          description: |-
            Scope is unused and provided solely for Docker compatibility. It is
            unconditionally set to "local".
        Status:
          type: object
          additionalProperties:
            type: string
          description: |-
            Status is presently unused and provided only for Docker compatibility.
            In the future it will be used to return information on the volume's
            current state.
        UID:
          type: integer
          description: UID is the UID that the volume was created with.
          format: int64
      example:
        Status:
          key: Status
        Options:
          key: Options
        UID: 6
        GID: 0
        Scope: Scope
        CreatedAt: 2000-01-23T04:56:07.000+00:00
        Driver: Driver
        Labels:
          key: Labels
        Anonymous: true
        Mountpoint: Mountpoint
        Name: Name
    inline_response_200_16:
      type: object
      properties:
        Attachable:
          type: boolean
        CheckDuplicate:
          type: boolean
          description: |-
            Check for networks with duplicate names.
            Network is primarily keyed based on a random ID and not on the name.
            Network name is strictly a user-friendly alias to the network
            which is uniquely identified using ID.
            And there is no guaranteed way to check for duplicates.
            Option CheckDuplicate is there to provide a best effort checking of any networks
            which has the same name but it is not guaranteed to catch all name collisions.
        ConfigFrom:
          $ref: '#/components/schemas/ConfigReference'
        ConfigOnly:
          type: boolean
        Driver:
          type: string
        EnableIPv6:
          type: boolean
        IPAM:
          $ref: '#/components/schemas/IPAM'
        Ingress:
          type: boolean
        Internal:
          type: boolean
        Labels:
          type: object
          additionalProperties:
            type: string
        Options:
          type: object
          additionalProperties:
            type: string
        Scope:
          type: string
      example:
        CheckDuplicate: true
        ConfigOnly: true
        IPAM:
          Options:
            key: Options
          Config:
          - AuxiliaryAddresses:
              key: AuxiliaryAddresses
            Gateway: Gateway
            Subnet: Subnet
            IPRange: IPRange
          - AuxiliaryAddresses:
              key: AuxiliaryAddresses
            Gateway: Gateway
            Subnet: Subnet
            IPRange: IPRange
          Driver: Driver
        Options:
          key: Options
        Scope: Scope
        ConfigFrom:
          Network: Network
        Internal: true
        Driver: Driver
        Ingress: true
        Labels:
          key: Labels
        Attachable: true
        EnableIPv6: true
    inline_response_200_17:
      type: object
      properties:
        Volumes:
          type: array
          items:
            $ref: '#/components/schemas/VolumeInfo'
      example:
        Volumes:
        - Options:
            key: Options
          Scope: Scope
          CreatedAt: CreatedAt
          Driver: Driver
          Labels:
            key: Labels
          Mountpoint: Mountpoint
          Name: Name
        - Options:
            key: Options
          Scope: Scope
          CreatedAt: CreatedAt
          Driver: Driver
          Labels:
            key: Labels
          Mountpoint: Mountpoint
          Name: Name
    inline_response_200_18:
      required:
      - Driver
      - Labels
      - Mountpoint
      - Name
      - Options
      - Scope
      type: object
      properties:
        CreatedAt:
          type: string
          description: Date/Time the volume was created.
        Driver:
          type: string
          description: Name of the volume driver used by the volume.
        Labels:
          type: object
          additionalProperties:
            type: string
          description: User-defined key/value metadata.
        Mountpoint:
          type: string
          description: Mount path of the volume on the host.
        Name:
          type: string
          description: Name of the volume.
        Options:
          type: object
          additionalProperties:
            type: string
          description: The driver specific options used when creating the volume.
        Scope:
          type: string
          description: |-
            The level at which the volume exists. Either `global` for cluster-wide,
            or `local` for machine level.
        Status:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          description: |-
            Low-level details about the volume, provided by the volume driver.
            Details are returned as a map with key/value pairs:
            `{"key":"value","key2":"value2"}`.

            The `Status` field is optional, and is omitted if the volume driver
            does not support this feature.
        UsageData:
          $ref: '#/components/schemas/VolumeUsageData'
      example:
        Status:
          key: {}
        Options:
          key: Options
        Scope: Scope
        UsageData:
          RefCount: 0
          Size: 6
        CreatedAt: CreatedAt
        Driver: Driver
        Labels:
          key: Labels
        Mountpoint: Mountpoint
        Name: Name
    inline_response_200_19:
      type: object
      properties:
        SpaceReclaimed:
          type: integer
          format: uint64
        VolumesDeleted:
          type: array
          items:
            type: string
      example:
        SpaceReclaimed: 0
        VolumesDeleted:
        - VolumesDeleted
        - VolumesDeleted
    inline_response_200_3_Error:
      type: object
      properties:
        Message:
          type: string
      example:
        Message: Message
  responses:
    BadParamError:
      description: Bad parameter in request
      content:
        application/json:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/plain:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/html:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
    Changes:
      description: Object Changes
      content:
        application/json:
          schema:
            type: object
            properties:
              Changes:
                type: array
                items:
                  $ref: '#/components/schemas/Change'
        text/plain:
          schema:
            type: object
            properties:
              Changes:
                type: array
                items:
                  $ref: '#/components/schemas/Change'
        text/html:
          schema:
            type: object
            properties:
              Changes:
                type: array
                items:
                  $ref: '#/components/schemas/Change'
    CompatNetworkCreate:
      description: Network create
      content:
        application/json:
          schema:
            type: object
            properties:
              Attachable:
                type: boolean
              CheckDuplicate:
                type: boolean
                description: |-
                  Check for networks with duplicate names.
                  Network is primarily keyed based on a random ID and not on the name.
                  Network name is strictly a user-friendly alias to the network
                  which is uniquely identified using ID.
                  And there is no guaranteed way to check for duplicates.
                  Option CheckDuplicate is there to provide a best effort checking of any networks
                  which has the same name but it is not guaranteed to catch all name collisions.
              ConfigFrom:
                $ref: '#/components/schemas/ConfigReference'
              ConfigOnly:
                type: boolean
              Driver:
                type: string
              EnableIPv6:
                type: boolean
              IPAM:
                $ref: '#/components/schemas/IPAM'
              Ingress:
                type: boolean
              Internal:
                type: boolean
              Labels:
                type: object
                additionalProperties:
                  type: string
              Options:
                type: object
                additionalProperties:
                  type: string
              Scope:
                type: string
        text/plain:
          schema:
            type: object
            properties:
              Attachable:
                type: boolean
              CheckDuplicate:
                type: boolean
                description: |-
                  Check for networks with duplicate names.
                  Network is primarily keyed based on a random ID and not on the name.
                  Network name is strictly a user-friendly alias to the network
                  which is uniquely identified using ID.
                  And there is no guaranteed way to check for duplicates.
                  Option CheckDuplicate is there to provide a best effort checking of any networks
                  which has the same name but it is not guaranteed to catch all name collisions.
              ConfigFrom:
                $ref: '#/components/schemas/ConfigReference'
              ConfigOnly:
                type: boolean
              Driver:
                type: string
              EnableIPv6:
                type: boolean
              IPAM:
                $ref: '#/components/schemas/IPAM'
              Ingress:
                type: boolean
              Internal:
                type: boolean
              Labels:
                type: object
                additionalProperties:
                  type: string
              Options:
                type: object
                additionalProperties:
                  type: string
              Scope:
                type: string
        text/html:
          schema:
            type: object
            properties:
              Attachable:
                type: boolean
              CheckDuplicate:
                type: boolean
                description: |-
                  Check for networks with duplicate names.
                  Network is primarily keyed based on a random ID and not on the name.
                  Network name is strictly a user-friendly alias to the network
                  which is uniquely identified using ID.
                  And there is no guaranteed way to check for duplicates.
                  Option CheckDuplicate is there to provide a best effort checking of any networks
                  which has the same name but it is not guaranteed to catch all name collisions.
              ConfigFrom:
                $ref: '#/components/schemas/ConfigReference'
              ConfigOnly:
                type: boolean
              Driver:
                type: string
              EnableIPv6:
                type: boolean
              IPAM:
                $ref: '#/components/schemas/IPAM'
              Ingress:
                type: boolean
              Internal:
                type: boolean
              Labels:
                type: object
                additionalProperties:
                  type: string
              Options:
                type: object
                additionalProperties:
                  type: string
              Scope:
                type: string
    CompatNetworkInspect:
      description: Network inspect
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NetworkResource'
        text/plain:
          schema:
            $ref: '#/components/schemas/NetworkResource'
        text/html:
          schema:
            $ref: '#/components/schemas/NetworkResource'
    CompatNetworkList:
      description: Network list
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/NetworkResource'
        text/plain:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/NetworkResource'
        text/html:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/NetworkResource'
    ConflictError:
      description: Conflict error in operation
      content:
        application/json:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/plain:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/html:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
    ContainerAlreadyStartedError:
      description: Container already started
      content:
        application/json:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/plain:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/html:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
    ContainerAlreadyStoppedError:
      description: Container already stopped
      content:
        application/json:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/plain:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/html:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
    ContainerCreateResponse:
      description: Create container
      content:
        application/json:
          schema:
            type: object
            properties:
              Id:
                type: string
                description: ID of the container created
                x-go-name: ID
              Warnings:
                type: array
                description: Warnings during container creation
                items:
                  type: string
        text/plain:
          schema:
            type: object
            properties:
              Id:
                type: string
                description: ID of the container created
                x-go-name: ID
              Warnings:
                type: array
                description: Warnings during container creation
                items:
                  type: string
        text/html:
          schema:
            type: object
            properties:
              Id:
                type: string
                description: ID of the container created
                x-go-name: ID
              Warnings:
                type: array
                description: Warnings during container creation
                items:
                  type: string
    ContainerWaitResponse:
      description: Wait container
      content:
        application/json:
          schema:
            type: object
            properties:
              Error:
                type: object
                properties:
                  Message:
                    type: string
              StatusCode:
                type: integer
                description: container exit code
                format: int64
        text/plain:
          schema:
            type: object
            properties:
              Error:
                type: object
                properties:
                  Message:
                    type: string
              StatusCode:
                type: integer
                description: container exit code
                format: int64
        text/html:
          schema:
            type: object
            properties:
              Error:
                type: object
                properties:
                  Message:
                    type: string
              StatusCode:
                type: integer
                description: container exit code
                format: int64
    DockerImageSummary:
      description: Image summary
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ImageSummary'
        text/plain:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ImageSummary'
        text/html:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ImageSummary'
    DockerVolumeInfoResponse:
      description: This response definition is used for both the create and inspect
        endpoints
      content:
        application/json:
          schema:
            required:
            - Driver
            - Labels
            - Mountpoint
            - Name
            - Options
            - Scope
            type: object
            properties:
              CreatedAt:
                type: string
                description: Date/Time the volume was created.
              Driver:
                type: string
                description: Name of the volume driver used by the volume.
              Labels:
                type: object
                additionalProperties:
                  type: string
                description: User-defined key/value metadata.
              Mountpoint:
                type: string
                description: Mount path of the volume on the host.
              Name:
                type: string
                description: Name of the volume.
              Options:
                type: object
                additionalProperties:
                  type: string
                description: The driver specific options used when creating the volume.
              Scope:
                type: string
                description: |-
                  The level at which the volume exists. Either `global` for cluster-wide,
                  or `local` for machine level.
              Status:
                type: object
                additionalProperties:
                  type: object
                  properties: {}
                description: |-
                  Low-level details about the volume, provided by the volume driver.
                  Details are returned as a map with key/value pairs:
                  `{"key":"value","key2":"value2"}`.

                  The `Status` field is optional, and is omitted if the volume driver
                  does not support this feature.
              UsageData:
                $ref: '#/components/schemas/VolumeUsageData'
        text/plain:
          schema:
            required:
            - Driver
            - Labels
            - Mountpoint
            - Name
            - Options
            - Scope
            type: object
            properties:
              CreatedAt:
                type: string
                description: Date/Time the volume was created.
              Driver:
                type: string
                description: Name of the volume driver used by the volume.
              Labels:
                type: object
                additionalProperties:
                  type: string
                description: User-defined key/value metadata.
              Mountpoint:
                type: string
                description: Mount path of the volume on the host.
              Name:
                type: string
                description: Name of the volume.
              Options:
                type: object
                additionalProperties:
                  type: string
                description: The driver specific options used when creating the volume.
              Scope:
                type: string
                description: |-
                  The level at which the volume exists. Either `global` for cluster-wide,
                  or `local` for machine level.
              Status:
                type: object
                additionalProperties:
                  type: object
                  properties: {}
                description: |-
                  Low-level details about the volume, provided by the volume driver.
                  Details are returned as a map with key/value pairs:
                  `{"key":"value","key2":"value2"}`.

                  The `Status` field is optional, and is omitted if the volume driver
                  does not support this feature.
              UsageData:
                $ref: '#/components/schemas/VolumeUsageData'
        text/html:
          schema:
            required:
            - Driver
            - Labels
            - Mountpoint
            - Name
            - Options
            - Scope
            type: object
            properties:
              CreatedAt:
                type: string
                description: Date/Time the volume was created.
              Driver:
                type: string
                description: Name of the volume driver used by the volume.
              Labels:
                type: object
                additionalProperties:
                  type: string
                description: User-defined key/value metadata.
              Mountpoint:
                type: string
                description: Mount path of the volume on the host.
              Name:
                type: string
                description: Name of the volume.
              Options:
                type: object
                additionalProperties:
                  type: string
                description: The driver specific options used when creating the volume.
              Scope:
                type: string
                description: |-
                  The level at which the volume exists. Either `global` for cluster-wide,
                  or `local` for machine level.
              Status:
                type: object
                additionalProperties:
                  type: object
                  properties: {}
                description: |-
                  Low-level details about the volume, provided by the volume driver.
                  Details are returned as a map with key/value pairs:
                  `{"key":"value","key2":"value2"}`.

                  The `Status` field is optional, and is omitted if the volume driver
                  does not support this feature.
              UsageData:
                $ref: '#/components/schemas/VolumeUsageData'
    DockerVolumePruneResponse:
      description: Volume prune response
      content:
        application/json:
          schema:
            type: object
            properties:
              SpaceReclaimed:
                type: integer
                format: uint64
              VolumesDeleted:
                type: array
                items:
                  type: string
        text/plain:
          schema:
            type: object
            properties:
              SpaceReclaimed:
                type: integer
                format: uint64
              VolumesDeleted:
                type: array
                items:
                  type: string
        text/html:
          schema:
            type: object
            properties:
              SpaceReclaimed:
                type: integer
                format: uint64
              VolumesDeleted:
                type: array
                items:
                  type: string
    DocsContainerInspectResponse:
      description: Inspect container
      content:
        application/json:
          schema:
            type: object
            properties:
              AppArmorProfile:
                type: string
              Args:
                type: array
                items:
                  type: string
              Config:
                $ref: '#/components/schemas/Config'
              Created:
                type: string
              Driver:
                type: string
              ExecIDs:
                type: array
                items:
                  type: string
              GraphDriver:
                $ref: '#/components/schemas/GraphDriverData'
              HostConfig:
                $ref: '#/components/schemas/HostConfig'
              HostnamePath:
                type: string
              HostsPath:
                type: string
              Id:
                type: string
                x-go-name: ID
              Image:
                type: string
              LogPath:
                type: string
              MountLabel:
                type: string
              Mounts:
                type: array
                items:
                  $ref: '#/components/schemas/MountPoint'
              Name:
                type: string
              NetworkSettings:
                $ref: '#/components/schemas/NetworkSettings'
              Node:
                $ref: '#/components/schemas/ContainerNode'
              Path:
                type: string
              Platform:
                type: string
              ProcessLabel:
                type: string
              ResolvConfPath:
                type: string
              RestartCount:
                type: integer
                format: int64
              SizeRootFs:
                type: integer
                format: int64
              SizeRw:
                type: integer
                format: int64
              State:
                $ref: '#/components/schemas/ContainerState'
        text/plain:
          schema:
            type: object
            properties:
              AppArmorProfile:
                type: string
              Args:
                type: array
                items:
                  type: string
              Config:
                $ref: '#/components/schemas/Config'
              Created:
                type: string
              Driver:
                type: string
              ExecIDs:
                type: array
                items:
                  type: string
              GraphDriver:
                $ref: '#/components/schemas/GraphDriverData'
              HostConfig:
                $ref: '#/components/schemas/HostConfig'
              HostnamePath:
                type: string
              HostsPath:
                type: string
              Id:
                type: string
                x-go-name: ID
              Image:
                type: string
              LogPath:
                type: string
              MountLabel:
                type: string
              Mounts:
                type: array
                items:
                  $ref: '#/components/schemas/MountPoint'
              Name:
                type: string
              NetworkSettings:
                $ref: '#/components/schemas/NetworkSettings'
              Node:
                $ref: '#/components/schemas/ContainerNode'
              Path:
                type: string
              Platform:
                type: string
              ProcessLabel:
                type: string
              ResolvConfPath:
                type: string
              RestartCount:
                type: integer
                format: int64
              SizeRootFs:
                type: integer
                format: int64
              SizeRw:
                type: integer
                format: int64
              State:
                $ref: '#/components/schemas/ContainerState'
        text/html:
          schema:
            type: object
            properties:
              AppArmorProfile:
                type: string
              Args:
                type: array
                items:
                  type: string
              Config:
                $ref: '#/components/schemas/Config'
              Created:
                type: string
              Driver:
                type: string
              ExecIDs:
                type: array
                items:
                  type: string
              GraphDriver:
                $ref: '#/components/schemas/GraphDriverData'
              HostConfig:
                $ref: '#/components/schemas/HostConfig'
              HostnamePath:
                type: string
              HostsPath:
                type: string
              Id:
                type: string
                x-go-name: ID
              Image:
                type: string
              LogPath:
                type: string
              MountLabel:
                type: string
              Mounts:
                type: array
                items:
                  $ref: '#/components/schemas/MountPoint'
              Name:
                type: string
              NetworkSettings:
                $ref: '#/components/schemas/NetworkSettings'
              Node:
                $ref: '#/components/schemas/ContainerNode'
              Path:
                type: string
              Platform:
                type: string
              ProcessLabel:
                type: string
              ResolvConfPath:
                type: string
              RestartCount:
                type: integer
                format: int64
              SizeRootFs:
                type: integer
                format: int64
              SizeRw:
                type: integer
                format: int64
              State:
                $ref: '#/components/schemas/ContainerState'
    DocsContainerPruneReport:
      description: Prune containers
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ContainersPruneReport'
        text/plain:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ContainersPruneReport'
        text/html:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ContainersPruneReport'
    DocsContainerTopResponse:
      description: List processes in container
      content:
        application/json:
          schema:
            required:
            - Processes
            - Titles
            type: object
            properties:
              Processes:
                type: array
                description: |-
                  Each process running in the container, where each is process
                  is an array of values corresponding to the titles.
                items:
                  type: array
                  items:
                    type: string
              Titles:
                type: array
                description: The ps column titles
                items:
                  type: string
        text/plain:
          schema:
            required:
            - Processes
            - Titles
            type: object
            properties:
              Processes:
                type: array
                description: |-
                  Each process running in the container, where each is process
                  is an array of values corresponding to the titles.
                items:
                  type: array
                  items:
                    type: string
              Titles:
                type: array
                description: The ps column titles
                items:
                  type: string
        text/html:
          schema:
            required:
            - Processes
            - Titles
            type: object
            properties:
              Processes:
                type: array
                description: |-
                  Each process running in the container, where each is process
                  is an array of values corresponding to the titles.
                items:
                  type: array
                  items:
                    type: string
              Titles:
                type: array
                description: The ps column titles
                items:
                  type: string
    DocsHistory:
      description: History response
      content:
        application/json:
          schema:
            type: object
            properties:
              Comment:
                type: string
              Created:
                type: integer
                format: int64
              CreatedBy:
                type: string
              Id:
                type: string
                x-go-name: ID
              Size:
                type: integer
                format: int64
              Tags:
                type: array
                items:
                  type: string
        text/plain:
          schema:
            type: object
            properties:
              Comment:
                type: string
              Created:
                type: integer
                format: int64
              CreatedBy:
                type: string
              Id:
                type: string
                x-go-name: ID
              Size:
                type: integer
                format: int64
              Tags:
                type: array
                items:
                  type: string
        text/html:
          schema:
            type: object
            properties:
              Comment:
                type: string
              Created:
                type: integer
                format: int64
              CreatedBy:
                type: string
              Id:
                type: string
                x-go-name: ID
              Size:
                type: integer
                format: int64
              Tags:
                type: array
                items:
                  type: string
    DocsImageDeleteResponse:
      description: Delete response
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ImageDeleteResponse'
        text/plain:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ImageDeleteResponse'
        text/html:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ImageDeleteResponse'
    DocsImageInspect:
      description: Inspect response
      content:
        application/json:
          schema:
            type: object
            properties:
              Architecture:
                type: string
              Author:
                type: string
              Comment:
                type: string
              Config:
                $ref: '#/components/schemas/Config'
              Container:
                type: string
              ContainerConfig:
                $ref: '#/components/schemas/Config'
              Created:
                type: string
              DockerVersion:
                type: string
              GraphDriver:
                $ref: '#/components/schemas/GraphDriverData'
              Id:
                type: string
                x-go-name: ID
              Metadata:
                $ref: '#/components/schemas/ImageMetadata'
              Os:
                type: string
              OsVersion:
                type: string
              Parent:
                type: string
              RepoDigests:
                type: array
                items:
                  type: string
              RepoTags:
                type: array
                items:
                  type: string
              RootFS:
                $ref: '#/components/schemas/RootFS'
              Size:
                type: integer
                format: int64
              Variant:
                type: string
              VirtualSize:
                type: integer
                format: int64
        text/plain:
          schema:
            type: object
            properties:
              Architecture:
                type: string
              Author:
                type: string
              Comment:
                type: string
              Config:
                $ref: '#/components/schemas/Config'
              Container:
                type: string
              ContainerConfig:
                $ref: '#/components/schemas/Config'
              Created:
                type: string
              DockerVersion:
                type: string
              GraphDriver:
                $ref: '#/components/schemas/GraphDriverData'
              Id:
                type: string
                x-go-name: ID
              Metadata:
                $ref: '#/components/schemas/ImageMetadata'
              Os:
                type: string
              OsVersion:
                type: string
              Parent:
                type: string
              RepoDigests:
                type: array
                items:
                  type: string
              RepoTags:
                type: array
                items:
                  type: string
              RootFS:
                $ref: '#/components/schemas/RootFS'
              Size:
                type: integer
                format: int64
              Variant:
                type: string
              VirtualSize:
                type: integer
                format: int64
        text/html:
          schema:
            type: object
            properties:
              Architecture:
                type: string
              Author:
                type: string
              Comment:
                type: string
              Config:
                $ref: '#/components/schemas/Config'
              Container:
                type: string
              ContainerConfig:
                $ref: '#/components/schemas/Config'
              Created:
                type: string
              DockerVersion:
                type: string
              GraphDriver:
                $ref: '#/components/schemas/GraphDriverData'
              Id:
                type: string
                x-go-name: ID
              Metadata:
                $ref: '#/components/schemas/ImageMetadata'
              Os:
                type: string
              OsVersion:
                type: string
              Parent:
                type: string
              RepoDigests:
                type: array
                items:
                  type: string
              RepoTags:
                type: array
                items:
                  type: string
              RootFS:
                $ref: '#/components/schemas/RootFS'
              Size:
                type: integer
                format: int64
              Variant:
                type: string
              VirtualSize:
                type: integer
                format: int64
    DocsLibpodImagesImportResponse:
      description: Import response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ImageImportReport'
        text/plain:
          schema:
            $ref: '#/components/schemas/ImageImportReport'
        text/html:
          schema:
            $ref: '#/components/schemas/ImageImportReport'
    DocsLibpodImagesLoadResponse:
      description: Load response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ImageLoadReport'
        text/plain:
          schema:
            $ref: '#/components/schemas/ImageLoadReport'
        text/html:
          schema:
            $ref: '#/components/schemas/ImageLoadReport'
    DocsLibpodImagesPullResponse:
      description: Pull response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LibpodImagesPullReport'
        text/plain:
          schema:
            $ref: '#/components/schemas/LibpodImagesPullReport'
        text/html:
          schema:
            $ref: '#/components/schemas/LibpodImagesPullReport'
    DocsLibpodImagesRemoveResponse:
      description: Remove response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LibpodImagesRemoveReport'
        text/plain:
          schema:
            $ref: '#/components/schemas/LibpodImagesRemoveReport'
        text/html:
          schema:
            $ref: '#/components/schemas/LibpodImagesRemoveReport'
    DocsLibpodInspectImageResponse:
      description: Inspect image
      content:
        application/json:
          schema:
            type: object
            properties:
              Annotations:
                type: object
                additionalProperties:
                  type: string
              Architecture:
                type: string
              Author:
                type: string
              Comment:
                type: string
              Config:
                $ref: '#/components/schemas/ImageConfig'
              Created:
                type: string
                format: date-time
              Digest:
                $ref: '#/components/schemas/Digest'
              GraphDriver:
                $ref: '#/components/schemas/Data'
              Healthcheck:
                $ref: '#/components/schemas/Schema2HealthConfig'
              History:
                type: array
                items:
                  $ref: '#/components/schemas/History'
              Id:
                type: string
                x-go-name: ID
              Labels:
                type: object
                additionalProperties:
                  type: string
              ManifestType:
                type: string
              NamesHistory:
                type: array
                items:
                  type: string
              Os:
                type: string
              Parent:
                type: string
              RepoDigests:
                type: array
                items:
                  type: string
              RepoTags:
                type: array
                items:
                  type: string
              RootFS:
                $ref: '#/components/schemas/RootFS'
              Size:
                type: integer
                format: int64
              User:
                type: string
              Version:
                type: string
              VirtualSize:
                type: integer
                format: int64
        text/plain:
          schema:
            type: object
            properties:
              Annotations:
                type: object
                additionalProperties:
                  type: string
              Architecture:
                type: string
              Author:
                type: string
              Comment:
                type: string
              Config:
                $ref: '#/components/schemas/ImageConfig'
              Created:
                type: string
                format: date-time
              Digest:
                $ref: '#/components/schemas/Digest'
              GraphDriver:
                $ref: '#/components/schemas/Data'
              Healthcheck:
                $ref: '#/components/schemas/Schema2HealthConfig'
              History:
                type: array
                items:
                  $ref: '#/components/schemas/History'
              Id:
                type: string
                x-go-name: ID
              Labels:
                type: object
                additionalProperties:
                  type: string
              ManifestType:
                type: string
              NamesHistory:
                type: array
                items:
                  type: string
              Os:
                type: string
              Parent:
                type: string
              RepoDigests:
                type: array
                items:
                  type: string
              RepoTags:
                type: array
                items:
                  type: string
              RootFS:
                $ref: '#/components/schemas/RootFS'
              Size:
                type: integer
                format: int64
              User:
                type: string
              Version:
                type: string
              VirtualSize:
                type: integer
                format: int64
        text/html:
          schema:
            type: object
            properties:
              Annotations:
                type: object
                additionalProperties:
                  type: string
              Architecture:
                type: string
              Author:
                type: string
              Comment:
                type: string
              Config:
                $ref: '#/components/schemas/ImageConfig'
              Created:
                type: string
                format: date-time
              Digest:
                $ref: '#/components/schemas/Digest'
              GraphDriver:
                $ref: '#/components/schemas/Data'
              Healthcheck:
                $ref: '#/components/schemas/Schema2HealthConfig'
              History:
                type: array
                items:
                  $ref: '#/components/schemas/History'
              Id:
                type: string
                x-go-name: ID
              Labels:
                type: object
                additionalProperties:
                  type: string
              ManifestType:
                type: string
              NamesHistory:
                type: array
                items:
                  type: string
              Os:
                type: string
              Parent:
                type: string
              RepoDigests:
                type: array
                items:
                  type: string
              RepoTags:
                type: array
                items:
                  type: string
              RootFS:
                $ref: '#/components/schemas/RootFS'
              Size:
                type: integer
                format: int64
              User:
                type: string
              Version:
                type: string
              VirtualSize:
                type: integer
                format: int64
    DocsLibpodPlayKubeResponse:
      description: PlayKube response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PlayKubeReport'
        text/plain:
          schema:
            $ref: '#/components/schemas/PlayKubeReport'
        text/html:
          schema:
            $ref: '#/components/schemas/PlayKubeReport'
    DocsLibpodPruneResponse:
      description: Prune containers
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/LibpodContainersPruneReport'
        text/plain:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/LibpodContainersPruneReport'
        text/html:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/LibpodContainersPruneReport'
    DocsListContainer:
      description: List Containers
      content:
        application/json:
          schema:
            type: object
        text/plain:
          schema:
            type: object
        text/html:
          schema:
            type: object
    DocsPodStatsResponse:
      description: List processes in pod
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PodStatsReport'
        text/plain:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PodStatsReport'
        text/html:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PodStatsReport'
    DocsPodTopResponse:
      description: List processes in pod
      content:
        application/json:
          schema:
            required:
            - Processes
            - Titles
            type: object
            properties:
              Processes:
                type: array
                description: |-
                  Each process running in the container, where each is process
                  is an array of values corresponding to the titles.
                items:
                  type: array
                  items:
                    type: string
              Titles:
                type: array
                description: The ps column titles
                items:
                  type: string
        text/plain:
          schema:
            required:
            - Processes
            - Titles
            type: object
            properties:
              Processes:
                type: array
                description: |-
                  Each process running in the container, where each is process
                  is an array of values corresponding to the titles.
                items:
                  type: array
                  items:
                    type: string
              Titles:
                type: array
                description: The ps column titles
                items:
                  type: string
        text/html:
          schema:
            required:
            - Processes
            - Titles
            type: object
            properties:
              Processes:
                type: array
                description: |-
                  Each process running in the container, where each is process
                  is an array of values corresponding to the titles.
                items:
                  type: array
                  items:
                    type: string
              Titles:
                type: array
                description: The ps column titles
                items:
                  type: string
    DocsRegistriesList:
      description: Registries summary
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListRegistriesReport'
        text/plain:
          schema:
            $ref: '#/components/schemas/ListRegistriesReport'
        text/html:
          schema:
            $ref: '#/components/schemas/ListRegistriesReport'
    DocsSearchResponse:
      description: Search results
      content:
        application/json:
          schema:
            type: object
            properties:
              Automated:
                type: string
                description: Automated indicates if the image was created by an automated
                  build.
              Description:
                type: string
                description: Description of the image.
              Index:
                type: string
                description: Index is the image index (e.g., "docker.io" or "quay.io")
              Name:
                type: string
                description: Name is the canoncical name of the image (e.g., "docker.io/library/alpine").
              Official:
                type: string
                description: Official indicates if it's an official image.
              Stars:
                type: integer
                description: Stars is the number of stars of the image.
                format: int64
        text/plain:
          schema:
            type: object
            properties:
              Automated:
                type: string
                description: Automated indicates if the image was created by an automated
                  build.
              Description:
                type: string
                description: Description of the image.
              Index:
                type: string
                description: Index is the image index (e.g., "docker.io" or "quay.io")
              Name:
                type: string
                description: Name is the canoncical name of the image (e.g., "docker.io/library/alpine").
              Official:
                type: string
                description: Official indicates if it's an official image.
              Stars:
                type: integer
                description: Stars is the number of stars of the image.
                format: int64
        text/html:
          schema:
            type: object
            properties:
              Automated:
                type: string
                description: Automated indicates if the image was created by an automated
                  build.
              Description:
                type: string
                description: Description of the image.
              Index:
                type: string
                description: Index is the image index (e.g., "docker.io" or "quay.io")
              Name:
                type: string
                description: Name is the canoncical name of the image (e.g., "docker.io/library/alpine").
              Official:
                type: string
                description: Official indicates if it's an official image.
              Stars:
                type: integer
                description: Stars is the number of stars of the image.
                format: int64
    HealthcheckRun:
      description: Healthcheck
      content:
        application/json:
          schema:
            type: object
            properties:
              FailingStreak:
                type: integer
                description: FailingStreak is the number of consecutive failed healthchecks
                format: int64
              Log:
                type: array
                description: Log describes healthcheck attempts and results
                items:
                  $ref: '#/components/schemas/HealthCheckLog'
              Status:
                type: string
                description: Status healthy or unhealthy
        text/plain:
          schema:
            type: object
            properties:
              FailingStreak:
                type: integer
                description: FailingStreak is the number of consecutive failed healthchecks
                format: int64
              Log:
                type: array
                description: Log describes healthcheck attempts and results
                items:
                  $ref: '#/components/schemas/HealthCheckLog'
              Status:
                type: string
                description: Status healthy or unhealthy
        text/html:
          schema:
            type: object
            properties:
              FailingStreak:
                type: integer
                description: FailingStreak is the number of consecutive failed healthchecks
                format: int64
              Log:
                type: array
                description: Log describes healthcheck attempts and results
                items:
                  $ref: '#/components/schemas/HealthCheckLog'
              Status:
                type: string
                description: Status healthy or unhealthy
    InfoResponse:
      description: Info
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Info'
        text/plain:
          schema:
            $ref: '#/components/schemas/Info'
        text/html:
          schema:
            $ref: '#/components/schemas/Info'
    InspectManifest:
      description: Inspect Manifest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/List'
        text/plain:
          schema:
            $ref: '#/components/schemas/List'
        text/html:
          schema:
            $ref: '#/components/schemas/List'
    InspectPodResponse:
      description: Inspect pod
      content:
        application/json:
          schema:
            type: object
            properties:
              CgroupParent:
                type: string
                description: CgroupParent is the parent of the pod's CGroup.
              CgroupPath:
                type: string
                description: CgroupPath is the path to the pod's CGroup.
              Containers:
                type: array
                description: |-
                  Containers gives a brief summary of all containers in the pod and
                  their current status.
                items:
                  $ref: '#/components/schemas/InspectPodContainerInfo'
              CreateCgroup:
                type: boolean
                description: |-
                  CreateCgroup is whether this pod will create its own CGroup to group
                  containers under.
              CreateCommand:
                type: array
                description: |-
                  CreateCommand is the full command plus arguments of the process the
                  container has been created with.
                items:
                  type: string
              CreateInfra:
                type: boolean
                description: |-
                  CreateInfra is whether this pod will create an infra container to
                  share namespaces.
              Created:
                type: string
                description: Created is the time when the pod was created.
                format: date-time
              Hostname:
                type: string
                description: Hostname is the hostname that the pod will set.
              Id:
                type: string
                description: ID is the ID of the pod.
                x-go-name: ID
              InfraConfig:
                $ref: '#/components/schemas/InspectPodInfraConfig'
              InfraContainerID:
                type: string
                description: |-
                  InfraContainerID is the ID of the pod's infra container, if one is
                  present.
              Labels:
                type: object
                additionalProperties:
                  type: string
                description: |-
                  Labels is a set of key-value labels that have been applied to the
                  pod.
              Name:
                type: string
                description: Name is the name of the pod.
              Namespace:
                type: string
                description: Namespace is the Libpod namespace the pod is placed in.
              NumContainers:
                type: integer
                description: |-
                  NumContainers is the number of containers in the pod, including the
                  infra container.
                format: uint64
              SharedNamespaces:
                type: array
                description: |-
                  SharedNamespaces contains a list of namespaces that will be shared by
                  containers within the pod. Can only be set if CreateInfra is true.
                items:
                  type: string
              State:
                type: string
                description: State represents the current state of the pod.
        text/plain:
          schema:
            type: object
            properties:
              CgroupParent:
                type: string
                description: CgroupParent is the parent of the pod's CGroup.
              CgroupPath:
                type: string
                description: CgroupPath is the path to the pod's CGroup.
              Containers:
                type: array
                description: |-
                  Containers gives a brief summary of all containers in the pod and
                  their current status.
                items:
                  $ref: '#/components/schemas/InspectPodContainerInfo'
              CreateCgroup:
                type: boolean
                description: |-
                  CreateCgroup is whether this pod will create its own CGroup to group
                  containers under.
              CreateCommand:
                type: array
                description: |-
                  CreateCommand is the full command plus arguments of the process the
                  container has been created with.
                items:
                  type: string
              CreateInfra:
                type: boolean
                description: |-
                  CreateInfra is whether this pod will create an infra container to
                  share namespaces.
              Created:
                type: string
                description: Created is the time when the pod was created.
                format: date-time
              Hostname:
                type: string
                description: Hostname is the hostname that the pod will set.
              Id:
                type: string
                description: ID is the ID of the pod.
                x-go-name: ID
              InfraConfig:
                $ref: '#/components/schemas/InspectPodInfraConfig'
              InfraContainerID:
                type: string
                description: |-
                  InfraContainerID is the ID of the pod's infra container, if one is
                  present.
              Labels:
                type: object
                additionalProperties:
                  type: string
                description: |-
                  Labels is a set of key-value labels that have been applied to the
                  pod.
              Name:
                type: string
                description: Name is the name of the pod.
              Namespace:
                type: string
                description: Namespace is the Libpod namespace the pod is placed in.
              NumContainers:
                type: integer
                description: |-
                  NumContainers is the number of containers in the pod, including the
                  infra container.
                format: uint64
              SharedNamespaces:
                type: array
                description: |-
                  SharedNamespaces contains a list of namespaces that will be shared by
                  containers within the pod. Can only be set if CreateInfra is true.
                items:
                  type: string
              State:
                type: string
                description: State represents the current state of the pod.
        text/html:
          schema:
            type: object
            properties:
              CgroupParent:
                type: string
                description: CgroupParent is the parent of the pod's CGroup.
              CgroupPath:
                type: string
                description: CgroupPath is the path to the pod's CGroup.
              Containers:
                type: array
                description: |-
                  Containers gives a brief summary of all containers in the pod and
                  their current status.
                items:
                  $ref: '#/components/schemas/InspectPodContainerInfo'
              CreateCgroup:
                type: boolean
                description: |-
                  CreateCgroup is whether this pod will create its own CGroup to group
                  containers under.
              CreateCommand:
                type: array
                description: |-
                  CreateCommand is the full command plus arguments of the process the
                  container has been created with.
                items:
                  type: string
              CreateInfra:
                type: boolean
                description: |-
                  CreateInfra is whether this pod will create an infra container to
                  share namespaces.
              Created:
                type: string
                description: Created is the time when the pod was created.
                format: date-time
              Hostname:
                type: string
                description: Hostname is the hostname that the pod will set.
              Id:
                type: string
                description: ID is the ID of the pod.
                x-go-name: ID
              InfraConfig:
                $ref: '#/components/schemas/InspectPodInfraConfig'
              InfraContainerID:
                type: string
                description: |-
                  InfraContainerID is the ID of the pod's infra container, if one is
                  present.
              Labels:
                type: object
                additionalProperties:
                  type: string
                description: |-
                  Labels is a set of key-value labels that have been applied to the
                  pod.
              Name:
                type: string
                description: Name is the name of the pod.
              Namespace:
                type: string
                description: Namespace is the Libpod namespace the pod is placed in.
              NumContainers:
                type: integer
                description: |-
                  NumContainers is the number of containers in the pod, including the
                  infra container.
                format: uint64
              SharedNamespaces:
                type: array
                description: |-
                  SharedNamespaces contains a list of namespaces that will be shared by
                  containers within the pod. Can only be set if CreateInfra is true.
                items:
                  type: string
              State:
                type: string
                description: State represents the current state of the pod.
    InspectVolumeResponse:
      description: Inspect volume
      content:
        application/json:
          schema:
            type: object
            properties:
              Anonymous:
                type: boolean
                description: |-
                  Anonymous indicates that the volume was created as an anonymous
                  volume for a specific container, and will be be removed when any
                  container using it is removed.
              CreatedAt:
                type: string
                description: |-
                  CreatedAt is the date and time the volume was created at. This is not
                  stored for older Libpod volumes; if so, it will be omitted.
                format: date-time
              Driver:
                type: string
                description: |-
                  Driver is the driver used to create the volume.
                  This will be properly implemented in a future version.
              GID:
                type: integer
                description: GID is the GID that the volume was created with.
                format: int64
              Labels:
                type: object
                additionalProperties:
                  type: string
                description: |-
                  Labels includes the volume's configured labels, key:value pairs that
                  can be passed during volume creation to provide information for third
                  party tools.
              Mountpoint:
                type: string
                description: Mountpoint is the path on the host where the volume is
                  mounted.
              Name:
                type: string
                description: Name is the name of the volume.
              Options:
                type: object
                additionalProperties:
                  type: string
                description: |-
                  Options is a set of options that were used when creating the volume.
                  It is presently not used.
              Scope:
                type: string
                description: |-
                  Scope is unused and provided solely for Docker compatibility. It is
                  unconditionally set to "local".
              Status:
                type: object
                additionalProperties:
                  type: string
                description: |-
                  Status is presently unused and provided only for Docker compatibility.
                  In the future it will be used to return information on the volume's
                  current state.
              UID:
                type: integer
                description: UID is the UID that the volume was created with.
                format: int64
        text/plain:
          schema:
            type: object
            properties:
              Anonymous:
                type: boolean
                description: |-
                  Anonymous indicates that the volume was created as an anonymous
                  volume for a specific container, and will be be removed when any
                  container using it is removed.
              CreatedAt:
                type: string
                description: |-
                  CreatedAt is the date and time the volume was created at. This is not
                  stored for older Libpod volumes; if so, it will be omitted.
                format: date-time
              Driver:
                type: string
                description: |-
                  Driver is the driver used to create the volume.
                  This will be properly implemented in a future version.
              GID:
                type: integer
                description: GID is the GID that the volume was created with.
                format: int64
              Labels:
                type: object
                additionalProperties:
                  type: string
                description: |-
                  Labels includes the volume's configured labels, key:value pairs that
                  can be passed during volume creation to provide information for third
                  party tools.
              Mountpoint:
                type: string
                description: Mountpoint is the path on the host where the volume is
                  mounted.
              Name:
                type: string
                description: Name is the name of the volume.
              Options:
                type: object
                additionalProperties:
                  type: string
                description: |-
                  Options is a set of options that were used when creating the volume.
                  It is presently not used.
              Scope:
                type: string
                description: |-
                  Scope is unused and provided solely for Docker compatibility. It is
                  unconditionally set to "local".
              Status:
                type: object
                additionalProperties:
                  type: string
                description: |-
                  Status is presently unused and provided only for Docker compatibility.
                  In the future it will be used to return information on the volume's
                  current state.
              UID:
                type: integer
                description: UID is the UID that the volume was created with.
                format: int64
        text/html:
          schema:
            type: object
            properties:
              Anonymous:
                type: boolean
                description: |-
                  Anonymous indicates that the volume was created as an anonymous
                  volume for a specific container, and will be be removed when any
                  container using it is removed.
              CreatedAt:
                type: string
                description: |-
                  CreatedAt is the date and time the volume was created at. This is not
                  stored for older Libpod volumes; if so, it will be omitted.
                format: date-time
              Driver:
                type: string
                description: |-
                  Driver is the driver used to create the volume.
                  This will be properly implemented in a future version.
              GID:
                type: integer
                description: GID is the GID that the volume was created with.
                format: int64
              Labels:
                type: object
                additionalProperties:
                  type: string
                description: |-
                  Labels includes the volume's configured labels, key:value pairs that
                  can be passed during volume creation to provide information for third
                  party tools.
              Mountpoint:
                type: string
                description: Mountpoint is the path on the host where the volume is
                  mounted.
              Name:
                type: string
                description: Name is the name of the volume.
              Options:
                type: object
                additionalProperties:
                  type: string
                description: |-
                  Options is a set of options that were used when creating the volume.
                  It is presently not used.
              Scope:
                type: string
                description: |-
                  Scope is unused and provided solely for Docker compatibility. It is
                  unconditionally set to "local".
              Status:
                type: object
                additionalProperties:
                  type: string
                description: |-
                  Status is presently unused and provided only for Docker compatibility.
                  In the future it will be used to return information on the volume's
                  current state.
              UID:
                type: integer
                description: UID is the UID that the volume was created with.
                format: int64
    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/plain:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/html:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
    LibpodImageTreeResponse:
      description: Image tree response
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                x-go-name: ID
              layers:
                type: array
                items:
                  $ref: '#/components/schemas/ImageLayer'
                x-go-name: Layers
              size:
                type: string
                x-go-name: Size
              tags:
                type: array
                items:
                  type: string
                x-go-name: Tags
        text/plain:
          schema:
            type: object
            properties:
              id:
                type: string
                x-go-name: ID
              layers:
                type: array
                items:
                  $ref: '#/components/schemas/ImageLayer'
                x-go-name: Layers
              size:
                type: string
                x-go-name: Size
              tags:
                type: array
                items:
                  type: string
                x-go-name: Tags
        text/html:
          schema:
            type: object
            properties:
              id:
                type: string
                x-go-name: ID
              layers:
                type: array
                items:
                  $ref: '#/components/schemas/ImageLayer'
                x-go-name: Layers
              size:
                type: string
                x-go-name: Size
              tags:
                type: array
                items:
                  type: string
                x-go-name: Tags
    LibpodInspectContainerResponse:
      description: Inspect container
      content:
        application/json:
          schema:
            type: object
            properties:
              AppArmorProfile:
                type: string
              Args:
                type: array
                items:
                  type: string
              BoundingCaps:
                type: array
                items:
                  type: string
              Config:
                $ref: '#/components/schemas/InspectContainerConfig'
              ConmonPidFile:
                type: string
              Created:
                type: string
                format: date-time
              Dependencies:
                type: array
                items:
                  type: string
              Driver:
                type: string
              EffectiveCaps:
                type: array
                items:
                  type: string
              ExecIDs:
                type: array
                items:
                  type: string
              ExitCommand:
                type: array
                items:
                  type: string
              GraphDriver:
                $ref: '#/components/schemas/Data'
              HostConfig:
                $ref: '#/components/schemas/InspectContainerHostConfig'
              HostnamePath:
                type: string
              HostsPath:
                type: string
              Id:
                type: string
                x-go-name: ID
              Image:
                type: string
              ImageName:
                type: string
              IsInfra:
                type: boolean
              LogPath:
                type: string
              LogTag:
                type: string
              MountLabel:
                type: string
              Mounts:
                type: array
                items:
                  $ref: '#/components/schemas/InspectMount'
              Name:
                type: string
              Namespace:
                type: string
              NetworkSettings:
                $ref: '#/components/schemas/InspectNetworkSettings'
              OCIConfigPath:
                type: string
              OCIRuntime:
                type: string
              Path:
                type: string
              Pod:
                type: string
              ProcessLabel:
                type: string
              ResolvConfPath:
                type: string
              RestartCount:
                type: integer
                format: int32
              Rootfs:
                type: string
              SizeRootFs:
                type: integer
                format: int64
              SizeRw:
                type: integer
                format: int64
              State:
                $ref: '#/components/schemas/InspectContainerState'
              StaticDir:
                type: string
        text/plain:
          schema:
            type: object
            properties:
              AppArmorProfile:
                type: string
              Args:
                type: array
                items:
                  type: string
              BoundingCaps:
                type: array
                items:
                  type: string
              Config:
                $ref: '#/components/schemas/InspectContainerConfig'
              ConmonPidFile:
                type: string
              Created:
                type: string
                format: date-time
              Dependencies:
                type: array
                items:
                  type: string
              Driver:
                type: string
              EffectiveCaps:
                type: array
                items:
                  type: string
              ExecIDs:
                type: array
                items:
                  type: string
              ExitCommand:
                type: array
                items:
                  type: string
              GraphDriver:
                $ref: '#/components/schemas/Data'
              HostConfig:
                $ref: '#/components/schemas/InspectContainerHostConfig'
              HostnamePath:
                type: string
              HostsPath:
                type: string
              Id:
                type: string
                x-go-name: ID
              Image:
                type: string
              ImageName:
                type: string
              IsInfra:
                type: boolean
              LogPath:
                type: string
              LogTag:
                type: string
              MountLabel:
                type: string
              Mounts:
                type: array
                items:
                  $ref: '#/components/schemas/InspectMount'
              Name:
                type: string
              Namespace:
                type: string
              NetworkSettings:
                $ref: '#/components/schemas/InspectNetworkSettings'
              OCIConfigPath:
                type: string
              OCIRuntime:
                type: string
              Path:
                type: string
              Pod:
                type: string
              ProcessLabel:
                type: string
              ResolvConfPath:
                type: string
              RestartCount:
                type: integer
                format: int32
              Rootfs:
                type: string
              SizeRootFs:
                type: integer
                format: int64
              SizeRw:
                type: integer
                format: int64
              State:
                $ref: '#/components/schemas/InspectContainerState'
              StaticDir:
                type: string
        text/html:
          schema:
            type: object
            properties:
              AppArmorProfile:
                type: string
              Args:
                type: array
                items:
                  type: string
              BoundingCaps:
                type: array
                items:
                  type: string
              Config:
                $ref: '#/components/schemas/InspectContainerConfig'
              ConmonPidFile:
                type: string
              Created:
                type: string
                format: date-time
              Dependencies:
                type: array
                items:
                  type: string
              Driver:
                type: string
              EffectiveCaps:
                type: array
                items:
                  type: string
              ExecIDs:
                type: array
                items:
                  type: string
              ExitCommand:
                type: array
                items:
                  type: string
              GraphDriver:
                $ref: '#/components/schemas/Data'
              HostConfig:
                $ref: '#/components/schemas/InspectContainerHostConfig'
              HostnamePath:
                type: string
              HostsPath:
                type: string
              Id:
                type: string
                x-go-name: ID
              Image:
                type: string
              ImageName:
                type: string
              IsInfra:
                type: boolean
              LogPath:
                type: string
              LogTag:
                type: string
              MountLabel:
                type: string
              Mounts:
                type: array
                items:
                  $ref: '#/components/schemas/InspectMount'
              Name:
                type: string
              Namespace:
                type: string
              NetworkSettings:
                $ref: '#/components/schemas/InspectNetworkSettings'
              OCIConfigPath:
                type: string
              OCIRuntime:
                type: string
              Path:
                type: string
              Pod:
                type: string
              ProcessLabel:
                type: string
              ResolvConfPath:
                type: string
              RestartCount:
                type: integer
                format: int32
              Rootfs:
                type: string
              SizeRootFs:
                type: integer
                format: int64
              SizeRw:
                type: integer
                format: int64
              State:
                $ref: '#/components/schemas/InspectContainerState'
              StaticDir:
                type: string
    ListContainers:
      description: List Containers
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ListContainer'
        text/plain:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ListContainer'
        text/html:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ListContainer'
    ListPodsResponse:
      description: List pods
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ListPodsReport'
        text/plain:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ListPodsReport'
        text/html:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ListPodsReport'
    NetworkCreateReport:
      description: Network create
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NetworkCreateReport'
        text/plain:
          schema:
            $ref: '#/components/schemas/NetworkCreateReport'
        text/html:
          schema:
            $ref: '#/components/schemas/NetworkCreateReport'
    NetworkInspectReport:
      description: Network inspect
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/NetworkInspectReport'
        text/plain:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/NetworkInspectReport'
        text/html:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/NetworkInspectReport'
    NetworkListReport:
      description: Network list
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/NetworkListReport'
        text/plain:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/NetworkListReport'
        text/html:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/NetworkListReport'
    NetworkRmReport:
      description: Network rm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NetworkRmReport'
        text/plain:
          schema:
            $ref: '#/components/schemas/NetworkRmReport'
        text/html:
          schema:
            $ref: '#/components/schemas/NetworkRmReport'
    NoSuchContainer:
      description: No such container
      content:
        application/json:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/plain:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/html:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
    NoSuchExecInstance:
      description: No such exec instance
      content:
        application/json:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/plain:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/html:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
    NoSuchImage:
      description: No such image
      content:
        application/json:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/plain:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/html:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
    NoSuchManifest:
      description: No such manifest
      content:
        application/json:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/plain:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/html:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
    NoSuchNetwork:
      description: No such network
      content:
        application/json:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/plain:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/html:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
    NoSuchPod:
      description: No such pod
      content:
        application/json:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/plain:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/html:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
    NoSuchVolume:
      description: No such volume
      content:
        application/json:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/plain:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/html:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
    PodAlreadyStartedError:
      description: Pod already started
      content:
        application/json:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/plain:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/html:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
    PodAlreadyStoppedError:
      description: Pod already stopped
      content:
        application/json:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/plain:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
        text/html:
          schema:
            type: object
            properties:
              cause:
                type: string
                description: API root cause formatted for automated parsing
                example: API root cause
                x-go-name: Because
              message:
                type: string
                description: human error message, formatted for a human to read
                example: human error message
                x-go-name: Message
              response:
                type: integer
                description: http response code
                format: int64
                x-go-name: ResponseCode
    PodKillReport:
      description: Kill Pod
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PodKillReport'
        text/plain:
          schema:
            $ref: '#/components/schemas/PodKillReport'
        text/html:
          schema:
            $ref: '#/components/schemas/PodKillReport'
    PodPauseReport:
      description: Pause pod
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PodPauseReport'
        text/plain:
          schema:
            $ref: '#/components/schemas/PodPauseReport'
        text/html:
          schema:
            $ref: '#/components/schemas/PodPauseReport'
    PodPruneReport:
      description: Prune pod
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PodPruneReport'
        text/plain:
          schema:
            $ref: '#/components/schemas/PodPruneReport'
        text/html:
          schema:
            $ref: '#/components/schemas/PodPruneReport'
    PodRestartReport:
      description: Restart pod
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PodRestartReport'
        text/plain:
          schema:
            $ref: '#/components/schemas/PodRestartReport'
        text/html:
          schema:
            $ref: '#/components/schemas/PodRestartReport'
    PodRmReport:
      description: Rm pod
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PodRmReport'
        text/plain:
          schema:
            $ref: '#/components/schemas/PodRmReport'
        text/html:
          schema:
            $ref: '#/components/schemas/PodRmReport'
    PodStartReport:
      description: Start pod
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PodStartReport'
        text/plain:
          schema:
            $ref: '#/components/schemas/PodStartReport'
        text/html:
          schema:
            $ref: '#/components/schemas/PodStartReport'
    PodStopReport:
      description: Stop pod
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PodStopReport'
        text/plain:
          schema:
            $ref: '#/components/schemas/PodStopReport'
        text/html:
          schema:
            $ref: '#/components/schemas/PodStopReport'
    PodUnpauseReport:
      description: Unpause pod
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PodUnpauseReport'
        text/plain:
          schema:
            $ref: '#/components/schemas/PodUnpauseReport'
        text/html:
          schema:
            $ref: '#/components/schemas/PodUnpauseReport'
    SystemDiskUse:
      description: Disk usage
      content:
        application/json:
          schema:
            type: object
            properties:
              Containers:
                type: array
                items:
                  $ref: '#/components/schemas/SystemDfContainerReport'
              Images:
                type: array
                items:
                  $ref: '#/components/schemas/SystemDfImageReport'
              Volumes:
                type: array
                items:
                  $ref: '#/components/schemas/SystemDfVolumeReport'
        text/plain:
          schema:
            type: object
            properties:
              Containers:
                type: array
                items:
                  $ref: '#/components/schemas/SystemDfContainerReport'
              Images:
                type: array
                items:
                  $ref: '#/components/schemas/SystemDfImageReport'
              Volumes:
                type: array
                items:
                  $ref: '#/components/schemas/SystemDfVolumeReport'
        text/html:
          schema:
            type: object
            properties:
              Containers:
                type: array
                items:
                  $ref: '#/components/schemas/SystemDfContainerReport'
              Images:
                type: array
                items:
                  $ref: '#/components/schemas/SystemDfImageReport'
              Volumes:
                type: array
                items:
                  $ref: '#/components/schemas/SystemDfVolumeReport'
    SystemPruneReport:
      description: Prune report
      content:
        application/json:
          schema:
            type: object
            properties:
              Err:
                type: object
                additionalProperties:
                  type: string
              ID:
                type: object
                additionalProperties:
                  type: integer
                  format: int64
              PodPruneReport:
                type: array
                items:
                  $ref: '#/components/schemas/PodPruneReport'
              Report:
                $ref: '#/components/schemas/Report'
              Size:
                type: integer
                format: int64
              VolumePruneReport:
                type: array
                items:
                  $ref: '#/components/schemas/VolumePruneReport'
        text/plain:
          schema:
            type: object
            properties:
              Err:
                type: object
                additionalProperties:
                  type: string
              ID:
                type: object
                additionalProperties:
                  type: integer
                  format: int64
              PodPruneReport:
                type: array
                items:
                  $ref: '#/components/schemas/PodPruneReport'
              Report:
                $ref: '#/components/schemas/Report'
              Size:
                type: integer
                format: int64
              VolumePruneReport:
                type: array
                items:
                  $ref: '#/components/schemas/VolumePruneReport'
        text/html:
          schema:
            type: object
            properties:
              Err:
                type: object
                additionalProperties:
                  type: string
              ID:
                type: object
                additionalProperties:
                  type: integer
                  format: int64
              PodPruneReport:
                type: array
                items:
                  $ref: '#/components/schemas/PodPruneReport'
              Report:
                $ref: '#/components/schemas/Report'
              Size:
                type: integer
                format: int64
              VolumePruneReport:
                type: array
                items:
                  $ref: '#/components/schemas/VolumePruneReport'
    Version:
      description: Version
      content:
        application/json:
          schema:
            type: object
            properties:
              Client:
                $ref: '#/components/schemas/Version'
              Server:
                $ref: '#/components/schemas/Version'
        text/plain:
          schema:
            type: object
            properties:
              Client:
                $ref: '#/components/schemas/Version'
              Server:
                $ref: '#/components/schemas/Version'
        text/html:
          schema:
            type: object
            properties:
              Client:
                $ref: '#/components/schemas/Version'
              Server:
                $ref: '#/components/schemas/Version'
    VolumeCreateResponse:
      description: Volume create response
      content:
        application/json:
          schema:
            type: object
            properties:
              Anonymous:
                type: boolean
                description: |-
                  Anonymous indicates that the volume was created as an anonymous
                  volume for a specific container, and will be be removed when any
                  container using it is removed.
              CreatedAt:
                type: string
                description: |-
                  CreatedAt is the date and time the volume was created at. This is not
                  stored for older Libpod volumes; if so, it will be omitted.
                format: date-time
              Driver:
                type: string
                description: |-
                  Driver is the driver used to create the volume.
                  This will be properly implemented in a future version.
              GID:
                type: integer
                description: GID is the GID that the volume was created with.
                format: int64
              Labels:
                type: object
                additionalProperties:
                  type: string
                description: |-
                  Labels includes the volume's configured labels, key:value pairs that
                  can be passed during volume creation to provide information for third
                  party tools.
              Mountpoint:
                type: string
                description: Mountpoint is the path on the host where the volume is
                  mounted.
              Name:
                type: string
                description: Name is the name of the volume.
              Options:
                type: object
                additionalProperties:
                  type: string
                description: |-
                  Options is a set of options that were used when creating the volume.
                  It is presently not used.
              Scope:
                type: string
                description: |-
                  Scope is unused and provided solely for Docker compatibility. It is
                  unconditionally set to "local".
              Status:
                type: object
                additionalProperties:
                  type: string
                description: |-
                  Status is presently unused and provided only for Docker compatibility.
                  In the future it will be used to return information on the volume's
                  current state.
              UID:
                type: integer
                description: UID is the UID that the volume was created with.
                format: int64
        text/plain:
          schema:
            type: object
            properties:
              Anonymous:
                type: boolean
                description: |-
                  Anonymous indicates that the volume was created as an anonymous
                  volume for a specific container, and will be be removed when any
                  container using it is removed.
              CreatedAt:
                type: string
                description: |-
                  CreatedAt is the date and time the volume was created at. This is not
                  stored for older Libpod volumes; if so, it will be omitted.
                format: date-time
              Driver:
                type: string
                description: |-
                  Driver is the driver used to create the volume.
                  This will be properly implemented in a future version.
              GID:
                type: integer
                description: GID is the GID that the volume was created with.
                format: int64
              Labels:
                type: object
                additionalProperties:
                  type: string
                description: |-
                  Labels includes the volume's configured labels, key:value pairs that
                  can be passed during volume creation to provide information for third
                  party tools.
              Mountpoint:
                type: string
                description: Mountpoint is the path on the host where the volume is
                  mounted.
              Name:
                type: string
                description: Name is the name of the volume.
              Options:
                type: object
                additionalProperties:
                  type: string
                description: |-
                  Options is a set of options that were used when creating the volume.
                  It is presently not used.
              Scope:
                type: string
                description: |-
                  Scope is unused and provided solely for Docker compatibility. It is
                  unconditionally set to "local".
              Status:
                type: object
                additionalProperties:
                  type: string
                description: |-
                  Status is presently unused and provided only for Docker compatibility.
                  In the future it will be used to return information on the volume's
                  current state.
              UID:
                type: integer
                description: UID is the UID that the volume was created with.
                format: int64
        text/html:
          schema:
            type: object
            properties:
              Anonymous:
                type: boolean
                description: |-
                  Anonymous indicates that the volume was created as an anonymous
                  volume for a specific container, and will be be removed when any
                  container using it is removed.
              CreatedAt:
                type: string
                description: |-
                  CreatedAt is the date and time the volume was created at. This is not
                  stored for older Libpod volumes; if so, it will be omitted.
                format: date-time
              Driver:
                type: string
                description: |-
                  Driver is the driver used to create the volume.
                  This will be properly implemented in a future version.
              GID:
                type: integer
                description: GID is the GID that the volume was created with.
                format: int64
              Labels:
                type: object
                additionalProperties:
                  type: string
                description: |-
                  Labels includes the volume's configured labels, key:value pairs that
                  can be passed during volume creation to provide information for third
                  party tools.
              Mountpoint:
                type: string
                description: Mountpoint is the path on the host where the volume is
                  mounted.
              Name:
                type: string
                description: Name is the name of the volume.
              Options:
                type: object
                additionalProperties:
                  type: string
                description: |-
                  Options is a set of options that were used when creating the volume.
                  It is presently not used.
              Scope:
                type: string
                description: |-
                  Scope is unused and provided solely for Docker compatibility. It is
                  unconditionally set to "local".
              Status:
                type: object
                additionalProperties:
                  type: string
                description: |-
                  Status is presently unused and provided only for Docker compatibility.
                  In the future it will be used to return information on the volume's
                  current state.
              UID:
                type: integer
                description: UID is the UID that the volume was created with.
                format: int64
    VolumeList:
      description: Volume list
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Volume'
        text/plain:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Volume'
        text/html:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Volume'
    VolumeListResponse:
      description: Volume list response
      content:
        application/json:
          schema:
            type: object
            properties:
              Volumes:
                type: array
                items:
                  $ref: '#/components/schemas/VolumeInfo'
        text/plain:
          schema:
            type: object
            properties:
              Volumes:
                type: array
                items:
                  $ref: '#/components/schemas/VolumeInfo'
        text/html:
          schema:
            type: object
            properties:
              Volumes:
                type: array
                items:
                  $ref: '#/components/schemas/VolumeInfo'
    VolumePruneResponse:
      description: Volume prune response
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/VolumePruneReport'
        text/plain:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/VolumePruneReport'
        text/html:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/VolumePruneReport'
    ok:
      description: Success
      content:
        application/json:
          schema:
            type: object
        text/plain:
          schema:
            type: object
        text/html:
          schema:
            type: object
x-original-swagger-version: "2.0"
