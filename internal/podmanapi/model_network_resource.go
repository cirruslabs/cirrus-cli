/*
 * Provides a container compatible interface.
 *
 * This documentation describes the Podman v2.0 RESTful API. It replaces the Podman v1.0 API and was initially delivered along with Podman v2.0.  It consists of a Docker-compatible API and a Libpod API providing support for Podmanâ€™s unique features such as pods.  To start the service and keep it running for 5,000 seconds (-t 0 runs forever):  podman system service -t 5000 &  You can then use cURL on the socket using requests documented below.  NOTE: if you install the package podman-docker, it will create a symbolic link for /var/run/docker.sock to /run/podman/podman.sock  See podman-service(1) for more information.  Quick Examples:  'podman info'  curl --unix-socket /run/podman/podman.sock http://d/v1.0.0/libpod/info  'podman pull quay.io/containers/podman'  curl -XPOST --unix-socket /run/podman/podman.sock -v 'http://d/v1.0.0/images/create?fromImage=quay.io%2Fcontainers%2Fpodman'  'podman list images'  curl --unix-socket /run/podman/podman.sock -v 'http://d/v1.0.0/libpod/images/json' | jq
 *
 * API version: 0.0.1
 * Contact: podman@lists.podman.io
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger
import (
	"time"
)

// NetworkResource is the body of the \"get network\" http response message
type NetworkResource struct {
	Attachable bool `json:"Attachable,omitempty"`
	ConfigFrom *ConfigReference `json:"ConfigFrom,omitempty"`
	ConfigOnly bool `json:"ConfigOnly,omitempty"`
	Containers map[string]EndpointResource `json:"Containers,omitempty"`
	Created time.Time `json:"Created,omitempty"`
	Driver string `json:"Driver,omitempty"`
	EnableIPv6 bool `json:"EnableIPv6,omitempty"`
	IPAM *Ipam `json:"IPAM,omitempty"`
	Id string `json:"Id,omitempty"`
	Ingress bool `json:"Ingress,omitempty"`
	Internal bool `json:"Internal,omitempty"`
	Labels map[string]string `json:"Labels,omitempty"`
	Name string `json:"Name,omitempty"`
	Options map[string]string `json:"Options,omitempty"`
	Peers []PeerInfo `json:"Peers,omitempty"`
	Scope string `json:"Scope,omitempty"`
	Services map[string]ServiceInfo `json:"Services,omitempty"`
}
