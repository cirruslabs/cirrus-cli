/*
 * Provides a container compatible interface.
 *
 * This documentation describes the Podman v2.0 RESTful API. It replaces the Podman v1.0 API and was initially delivered along with Podman v2.0.  It consists of a Docker-compatible API and a Libpod API providing support for Podmanâ€™s unique features such as pods.  To start the service and keep it running for 5,000 seconds (-t 0 runs forever):  podman system service -t 5000 &  You can then use cURL on the socket using requests documented below.  NOTE: if you install the package podman-docker, it will create a symbolic link for /var/run/docker.sock to /run/podman/podman.sock  See podman-service(1) for more information.  Quick Examples:  'podman info'  curl --unix-socket /run/podman/podman.sock http://d/v1.0.0/libpod/info  'podman pull quay.io/containers/podman'  curl -XPOST --unix-socket /run/podman/podman.sock -v 'http://d/v1.0.0/images/create?fromImage=quay.io%2Fcontainers%2Fpodman'  'podman list images'  curl --unix-socket /run/podman/podman.sock -v 'http://d/v1.0.0/libpod/images/json' | jq
 *
 * API version: 0.0.1
 * Contact: podman@lists.podman.io
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger
import (
	"time"
)

type InlineResponse20011 struct {
	// CgroupParent is the parent of the pod's CGroup.
	CgroupParent string `json:"CgroupParent,omitempty"`
	// CgroupPath is the path to the pod's CGroup.
	CgroupPath string `json:"CgroupPath,omitempty"`
	// Containers gives a brief summary of all containers in the pod and their current status.
	Containers []InspectPodContainerInfo `json:"Containers,omitempty"`
	// CreateCgroup is whether this pod will create its own CGroup to group containers under.
	CreateCgroup bool `json:"CreateCgroup,omitempty"`
	// CreateCommand is the full command plus arguments of the process the container has been created with.
	CreateCommand []string `json:"CreateCommand,omitempty"`
	// CreateInfra is whether this pod will create an infra container to share namespaces.
	CreateInfra bool `json:"CreateInfra,omitempty"`
	// Created is the time when the pod was created.
	Created time.Time `json:"Created,omitempty"`
	// Hostname is the hostname that the pod will set.
	Hostname string `json:"Hostname,omitempty"`
	// ID is the ID of the pod.
	Id string `json:"Id,omitempty"`
	InfraConfig *InspectPodInfraConfig `json:"InfraConfig,omitempty"`
	// InfraContainerID is the ID of the pod's infra container, if one is present.
	InfraContainerID string `json:"InfraContainerID,omitempty"`
	// Labels is a set of key-value labels that have been applied to the pod.
	Labels map[string]string `json:"Labels,omitempty"`
	// Name is the name of the pod.
	Name string `json:"Name,omitempty"`
	// Namespace is the Libpod namespace the pod is placed in.
	Namespace string `json:"Namespace,omitempty"`
	// NumContainers is the number of containers in the pod, including the infra container.
	NumContainers int32 `json:"NumContainers,omitempty"`
	// SharedNamespaces contains a list of namespaces that will be shared by containers within the pod. Can only be set if CreateInfra is true.
	SharedNamespaces []string `json:"SharedNamespaces,omitempty"`
	// State represents the current state of the pod.
	State string `json:"State,omitempty"`
}
