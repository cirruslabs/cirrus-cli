run:
  timeout: 5m

linters-settings:
  # Even in Rust you can get away with partial matching,
  # so make sure that the linter respects the programmer's
  # intent expressed in the form of "default" case.
  exhaustive:
    default-signifies-exhaustive: true

  gosec:
    excludes:
      - G115

linters:
  enable:
  - asciicheck
  - bodyclose
  - dupl
  - errcheck
  - exhaustive
  - exportloopref
  - gocognit
  - gocritic
  - gocyclo
  - godot
  - godox
  - gofmt
  - goheader
  - gomodguard
  - goprintffuncname
  - gosec
  - gosimple
  - govet
  - ineffassign
  - lll
  - makezero
  - misspell
  - nakedret
  - nestif
  - noctx
  - nolintlint
  - predeclared
  - rowserrcheck
  - sqlclosecheck
  - staticcheck
  - stylecheck
  - testpackage
  - tparallel
  - typecheck
  - unconvert
  - unparam
  - unused
  - whitespace

  disable:
    # We don't have high-performance requirements at this moment, so sacrificing
    # the code readability for marginal performance gains is not worth it.
    - prealloc

    # New linters that require a lot of codebase churn and noise, but perhaps we can enable them in the future.
    - nlreturn
    - wrapcheck
    - errorlint

    # Unfortunately, we use globals due to how spf13/cobra works.
    - gochecknoglobals

    # Style linters that are total nuts.
    - wsl
    - gofumpt
    - goimports
    - funlen

    # Enough parallelism for now.
    - paralleltest

    # Ill-based assumptions about identifiers like fmt.Println without taking context into account.
    - forbidigo

    # Advantages of using t.Helper() are too small to waste developer's cognitive stamina on it.
    - thelper

    # Too restrictive defaults, plus there's already a gocyclo linter in place.
    - cyclop

    # Gives false positives for textbook examples[1][2]
    # [1]: https://github.com/charithe/durationcheck/issues/7
    # [2]: https://golang.org/pkg/time/ (see "To convert an integer number of units to a Duration, multiply:")
    - durationcheck

    # No way to disable the "exported" check for the whole project[1]
    # [1]: https://github.com/mgechev/revive/issues/244#issuecomment-560512162
    - revive

    # Unfortunately too much false-positives, e.g. for a 0700 umask or number 10 when using strconv.FormatInt()
    - gomnd

    # Needs package whitelists
    - depguard

    # Generates absolutely useless errors, e.g.
    # "string `.yml` has 3 occurrences, make it a constant"
    - goconst

    # Work around https://github.com/golangci/golangci-lint/pull/4698
    - gochecknoinits

issues:
  # Don't hide multiple issues that belong to one class since GitHub annotations can handle them all nicely.
  max-issues-per-linter: 0
  max-same-issues: 0

  exclude-dirs:
    - internal/agent
